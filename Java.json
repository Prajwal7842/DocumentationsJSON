{"java.base": "\nDefines the foundational APIs of the Java SE Platform.\n", "java.compiler": "\nDefines the Language Model, Annotation Processing, and Java Compiler APIs.\n/javax.annotation.processing javax.lang.model javax.lang.model.element javax.lang.model.type javax.lang.model.util javax.tools/transitive \nDefines the Language Model, Annotation Processing, and Java Compiler APIs.\n/javax.annotation.processing javax.lang.model javax.lang.model.element javax.lang.model.type javax.lang.model.util javax.tools/transitive \nDefines the Language Model, Annotation Processing, and Java Compiler APIs.\n/javax.annotation.processing javax.lang.model javax.lang.model.element javax.lang.model.type javax.lang.model.util javax.tools/transitive \nDefines the Language Model, Annotation Processing, and Java Compiler APIs.\n/javax.annotation.processing javax.lang.model javax.lang.model.element javax.lang.model.type javax.lang.model.util javax.tools/transitive \nDefines the Language Model, Annotation Processing, and Java Compiler APIs.\n", "java.datatransfer": "\nDefines the API for transferring data between and within applications.\n/java.awt.datatransfer/transitive \nDefines the API for transferring data between and within applications.\n/java.awt.datatransfer/transitive \nDefines the API for transferring data between and within applications.\n/java.awt.datatransfer/transitive \nDefines the API for transferring data between and within applications.\n/java.awt.datatransfer/transitive \nDefines the API for transferring data between and within applications.\n/java.awt.datatransfer/transitive \nDefines the API for transferring data between and within applications.\n", "java.desktop": "\nDefines the AWT and Swing user interface toolkits, plus APIs for\n accessibility, audio, imaging, printing, and JavaBeans.\n/java.applet java.awt java.awt.color java.awt.desktop java.awt.dnd java.awt.event java.awt.font java.awt.geom java.awt.im java.awt.im.spi java.awt.image java.awt.image.renderable java.awt.print java.beans java.beans.beancontext javax.accessibility javax.imageio javax.imageio.event javax.imageio.metadata javax.imageio.plugins.bmp javax.imageio.plugins.jpeg javax.imageio.plugins.tiff javax.imageio.spi javax.imageio.stream javax.print javax.print.attribute javax.print.attribute.standard javax.print.event javax.sound.midi javax.sound.midi.spi javax.sound.sampled javax.sound.sampled.spi javax.swing javax.swing.border javax.swing.colorchooser javax.swing.event javax.swing.filechooser javax.swing.plaf javax.swing.plaf.basic javax.swing.plaf.metal javax.swing.plaf.multi javax.swing.plaf.nimbus javax.swing.plaf.synth javax.swing.table javax.swing.text javax.swing.text.html javax.swing.text.html.parser javax.swing.text.rtf javax.swing.tree javax.swing.undo/transitive \nDefines the AWT and Swing user interface toolkits, plus APIs for\n accessibility, audio, imaging, printing, and JavaBeans.\n/java.applet java.awt java.awt.color java.awt.desktop java.awt.dnd java.awt.event java.awt.font java.awt.geom java.awt.im java.awt.im.spi java.awt.image java.awt.image.renderable java.awt.print java.beans java.beans.beancontext javax.accessibility javax.imageio javax.imageio.event javax.imageio.metadata javax.imageio.plugins.bmp javax.imageio.plugins.jpeg javax.imageio.plugins.tiff javax.imageio.spi javax.imageio.stream javax.print javax.print.attribute javax.print.attribute.standard javax.print.event javax.sound.midi javax.sound.midi.spi javax.sound.sampled javax.sound.sampled.spi javax.swing javax.swing.border javax.swing.colorchooser javax.swing.event javax.swing.filechooser javax.swing.plaf javax.swing.plaf.basic javax.swing.plaf.metal javax.swing.plaf.multi javax.swing.plaf.nimbus javax.swing.plaf.synth javax.swing.table javax.swing.text javax.swing.text.html javax.swing.text.html.parser javax.swing.text.rtf javax.swing.tree javax.swing.undo/transitive \nDefines the AWT and Swing user interface toolkits, plus APIs for\n accessibility, audio, imaging, printing, and JavaBeans.\n/java.applet java.awt java.awt.color java.awt.desktop java.awt.dnd java.awt.event java.awt.font java.awt.geom java.awt.im java.awt.im.spi java.awt.image java.awt.image.renderable java.awt.print java.beans java.beans.beancontext javax.accessibility javax.imageio javax.imageio.event javax.imageio.metadata javax.imageio.plugins.bmp javax.imageio.plugins.jpeg javax.imageio.plugins.tiff javax.imageio.spi javax.imageio.stream javax.print javax.print.attribute javax.print.attribute.standard javax.print.event javax.sound.midi javax.sound.midi.spi javax.sound.sampled javax.sound.sampled.spi javax.swing javax.swing.border javax.swing.colorchooser javax.swing.event javax.swing.filechooser javax.swing.plaf javax.swing.plaf.basic javax.swing.plaf.metal javax.swing.plaf.multi javax.swing.plaf.nimbus javax.swing.plaf.synth javax.swing.table javax.swing.text javax.swing.text.html javax.swing.text.html.parser javax.swing.text.rtf javax.swing.tree javax.swing.undo/transitive \nDefines the AWT and Swing user interface toolkits, plus APIs for\n accessibility, audio, imaging, printing, and JavaBeans.\n", "java.instrument": "\nDefines services that allow agents to\n instrument programs running on the JVM.\n/java.lang.instrument/transitive \nDefines services that allow agents to\n instrument programs running on the JVM.\n", "java.logging": "\nDefines the Java Logging API.\n/java.util.logging/transitive \nDefines the Java Logging API.\n/java.util.logging/transitive \nDefines the Java Logging API.\n/java.util.logging/transitive \nDefines the Java Logging API.\n/java.util.logging/transitive \nDefines the Java Logging API.\n/java.util.logging/transitive \nDefines the Java Logging API.\n", "java.management": "\nDefines the Java Management Extensions (JMX) API.\n/java.lang.management javax.management javax.management.loading javax.management.modelmbean javax.management.monitor javax.management.openmbean javax.management.relation javax.management.remote javax.management.timer/transitive \nDefines the Java Management Extensions (JMX) API.\n/java.lang.management javax.management javax.management.loading javax.management.modelmbean javax.management.monitor javax.management.openmbean javax.management.relation javax.management.remote javax.management.timer/transitive \nDefines the Java Management Extensions (JMX) API.\n/java.lang.management javax.management javax.management.loading javax.management.modelmbean javax.management.monitor javax.management.openmbean javax.management.relation javax.management.remote javax.management.timer/transitive \nDefines the Java Management Extensions (JMX) API.\n/java.lang.management javax.management javax.management.loading javax.management.modelmbean javax.management.monitor javax.management.openmbean javax.management.relation javax.management.remote javax.management.timer/transitive \nDefines the Java Management Extensions (JMX) API.\n/java.lang.management javax.management javax.management.loading javax.management.modelmbean javax.management.monitor javax.management.openmbean javax.management.relation javax.management.remote javax.management.timer/transitive \nDefines the Java Management Extensions (JMX) API.\n/java.lang.management javax.management javax.management.loading javax.management.modelmbean javax.management.monitor javax.management.openmbean javax.management.relation javax.management.remote javax.management.timer/transitive \nDefines the Java Management Extensions (JMX) API.\n", "java.management.rmi": "\nDefines the RMI connector\n for the Java Management Extensions (JMX) Remote API.\n/javax.management.remote.rmi/transitive \nDefines the RMI connector\n for the Java Management Extensions (JMX) Remote API.\n", "java.naming": "\nDefines the Java Naming and Directory Interface (JNDI) API.\n/javax.naming javax.naming.directory javax.naming.event javax.naming.ldap javax.naming.ldap.spi javax.naming.spi/transitive \nDefines the Java Naming and Directory Interface (JNDI) API.\n/javax.naming javax.naming.directory javax.naming.event javax.naming.ldap javax.naming.ldap.spi javax.naming.spi/transitive \nDefines the Java Naming and Directory Interface (JNDI) API.\n/javax.naming javax.naming.directory javax.naming.event javax.naming.ldap javax.naming.ldap.spi javax.naming.spi/transitive \nDefines the Java Naming and Directory Interface (JNDI) API.\n/javax.naming javax.naming.directory javax.naming.event javax.naming.ldap javax.naming.ldap.spi javax.naming.spi/transitive \nDefines the Java Naming and Directory Interface (JNDI) API.\n", "java.net.http": "\nDefines the HTTP Client and WebSocket APIs.\n/\nHTTP Client and WebSocket APIs\n/java.net.http/transitive \nDefines the HTTP Client and WebSocket APIs.\n/\nHTTP Client and WebSocket APIs\n", "java.prefs": "\nDefines the Preferences API.\n/java.util.prefs/transitive \nDefines the Preferences API.\n/java.util.prefs/transitive \nDefines the Preferences API.\n", "java.rmi": "\nDefines the Remote Method Invocation (RMI) API.\n/java.rmi java.rmi.activation java.rmi.dgc java.rmi.registry java.rmi.server javax.rmi.ssl/transitive \nDefines the Remote Method Invocation (RMI) API.\n/\nProvides the RMI package.\n/java.rmi java.rmi.activation java.rmi.dgc java.rmi.registry java.rmi.server javax.rmi.ssl/transitive \nDefines the Remote Method Invocation (RMI) API.\n/java.rmi java.rmi.activation java.rmi.dgc java.rmi.registry java.rmi.server javax.rmi.ssl/transitive \nDefines the Remote Method Invocation (RMI) API.\n/\nProvides the RMI package.\n", "java.scripting": "\nDefines the Scripting API.\n/javax.script/transitive \nDefines the Scripting API.\n/javax.script/transitive \nDefines the Scripting API.\n", "java.se": "\nDefines the API of the Java SE Platform.\n", "java.security.jgss": "\nDefines the Java binding of the IETF Generic Security Services API (GSS-API).\n/javax.security.auth.kerberos org.ietf.jgss/transitive \nDefines the Java binding of the IETF Generic Security Services API (GSS-API).\n/javax.security.auth.kerberos org.ietf.jgss/transitive \nDefines the Java binding of the IETF Generic Security Services API (GSS-API).\n", "java.security.sasl": "\nDefines Java support for the IETF Simple Authentication and Security Layer\n (SASL).\n/javax.security.sasl/transitive \nDefines Java support for the IETF Simple Authentication and Security Layer\n (SASL).\n", "java.smartcardio": "\nDefines the Java Smart Card I/O API.\n", "java.sql": "\nDefines the JDBC API.\n/java.sql javax.sql/transitive \nDefines the JDBC API.\n/\nProvides the API for accessing and processing data stored in a\n data source (usually a relational database) using the\n Java\u2122 programming language.\n/java.sql javax.sql/transitive \nDefines the JDBC API.\n/\nProvides the API for accessing and processing data stored in a\n data source (usually a relational database) using the\n Java\u2122 programming language.\n/java.sql javax.sql/transitive \nDefines the JDBC API.\n", "java.sql.rowset": "\nDefines the JDBC RowSet API.\n/javax.sql.rowset javax.sql.rowset.serial javax.sql.rowset.spi/transitive \nDefines the JDBC RowSet API.\n", "java.transaction.xa": "\nDefines an API for supporting distributed transactions in JDBC.\n/javax.transaction.xa/transitive \nDefines an API for supporting distributed transactions in JDBC.\n/javax.transaction.xa/transitive \nDefines an API for supporting distributed transactions in JDBC.\n/javax.transaction.xa/transitive \nDefines an API for supporting distributed transactions in JDBC.\n/javax.transaction.xa/transitive \nDefines an API for supporting distributed transactions in JDBC.\n/javax.transaction.xa/transitive \nDefines an API for supporting distributed transactions in JDBC.\n", "java.xml": "\nDefines the Java API for XML Processing (JAXP), the Streaming API for XML (StAX),\n the Simple API for XML (SAX), and the W3C Document Object Model (DOM) API.\n/javax.xml javax.xml.catalog javax.xml.datatype javax.xml.namespace javax.xml.parsers javax.xml.stream javax.xml.stream.events javax.xml.stream.util javax.xml.transform javax.xml.transform.dom javax.xml.transform.sax javax.xml.transform.stax javax.xml.transform.stream javax.xml.validation javax.xml.xpath org.w3c.dom org.w3c.dom.bootstrap org.w3c.dom.events org.w3c.dom.ls org.w3c.dom.ranges org.w3c.dom.traversal org.w3c.dom.views org.xml.sax org.xml.sax.ext org.xml.sax.helpers/transitive \nDefines the Java API for XML Processing (JAXP), the Streaming API for XML (StAX),\n the Simple API for XML (SAX), and the W3C Document Object Model (DOM) API.\n/javax.xml javax.xml.catalog javax.xml.datatype javax.xml.namespace javax.xml.parsers javax.xml.stream javax.xml.stream.events javax.xml.stream.util javax.xml.transform javax.xml.transform.dom javax.xml.transform.sax javax.xml.transform.stax javax.xml.transform.stream javax.xml.validation javax.xml.xpath org.w3c.dom org.w3c.dom.bootstrap org.w3c.dom.events org.w3c.dom.ls org.w3c.dom.ranges org.w3c.dom.traversal org.w3c.dom.views org.xml.sax org.xml.sax.ext org.xml.sax.helpers/transitive \nDefines the Java API for XML Processing (JAXP), the Streaming API for XML (StAX),\n the Simple API for XML (SAX), and the W3C Document Object Model (DOM) API.\n/javax.xml javax.xml.catalog javax.xml.datatype javax.xml.namespace javax.xml.parsers javax.xml.stream javax.xml.stream.events javax.xml.stream.util javax.xml.transform javax.xml.transform.dom javax.xml.transform.sax javax.xml.transform.stax javax.xml.transform.stream javax.xml.validation javax.xml.xpath org.w3c.dom org.w3c.dom.bootstrap org.w3c.dom.events org.w3c.dom.ls org.w3c.dom.ranges org.w3c.dom.traversal org.w3c.dom.views org.xml.sax org.xml.sax.ext org.xml.sax.helpers/transitive \nDefines the Java API for XML Processing (JAXP), the Streaming API for XML (StAX),\n the Simple API for XML (SAX), and the W3C Document Object Model (DOM) API.\n/javax.xml javax.xml.catalog javax.xml.datatype javax.xml.namespace javax.xml.parsers javax.xml.stream javax.xml.stream.events javax.xml.stream.util javax.xml.transform javax.xml.transform.dom javax.xml.transform.sax javax.xml.transform.stax javax.xml.transform.stream javax.xml.validation javax.xml.xpath org.w3c.dom org.w3c.dom.bootstrap org.w3c.dom.events org.w3c.dom.ls org.w3c.dom.ranges org.w3c.dom.traversal org.w3c.dom.views org.xml.sax org.xml.sax.ext org.xml.sax.helpers/transitive \nDefines the Java API for XML Processing (JAXP), the Streaming API for XML (StAX),\n the Simple API for XML (SAX), and the W3C Document Object Model (DOM) API.\n/javax.xml javax.xml.catalog javax.xml.datatype javax.xml.namespace javax.xml.parsers javax.xml.stream javax.xml.stream.events javax.xml.stream.util javax.xml.transform javax.xml.transform.dom javax.xml.transform.sax javax.xml.transform.stax javax.xml.transform.stream javax.xml.validation javax.xml.xpath org.w3c.dom org.w3c.dom.bootstrap org.w3c.dom.events org.w3c.dom.ls org.w3c.dom.ranges org.w3c.dom.traversal org.w3c.dom.views org.xml.sax org.xml.sax.ext org.xml.sax.helpers/transitive \nDefines the Java API for XML Processing (JAXP), the Streaming API for XML (StAX),\n the Simple API for XML (SAX), and the W3C Document Object Model (DOM) API.\n/javax.xml javax.xml.catalog javax.xml.datatype javax.xml.namespace javax.xml.parsers javax.xml.stream javax.xml.stream.events javax.xml.stream.util javax.xml.transform javax.xml.transform.dom javax.xml.transform.sax javax.xml.transform.stax javax.xml.transform.stream javax.xml.validation javax.xml.xpath org.w3c.dom org.w3c.dom.bootstrap org.w3c.dom.events org.w3c.dom.ls org.w3c.dom.ranges org.w3c.dom.traversal org.w3c.dom.views org.xml.sax org.xml.sax.ext org.xml.sax.helpers/transitive \nDefines the Java API for XML Processing (JAXP), the Streaming API for XML (StAX),\n the Simple API for XML (SAX), and the W3C Document Object Model (DOM) API.\n/javax.xml javax.xml.catalog javax.xml.datatype javax.xml.namespace javax.xml.parsers javax.xml.stream javax.xml.stream.events javax.xml.stream.util javax.xml.transform javax.xml.transform.dom javax.xml.transform.sax javax.xml.transform.stax javax.xml.transform.stream javax.xml.validation javax.xml.xpath org.w3c.dom org.w3c.dom.bootstrap org.w3c.dom.events org.w3c.dom.ls org.w3c.dom.ranges org.w3c.dom.traversal org.w3c.dom.views org.xml.sax org.xml.sax.ext org.xml.sax.helpers/transitive \nDefines the Java API for XML Processing (JAXP), the Streaming API for XML (StAX),\n the Simple API for XML (SAX), and the W3C Document Object Model (DOM) API.\n/javax.xml javax.xml.catalog javax.xml.datatype javax.xml.namespace javax.xml.parsers javax.xml.stream javax.xml.stream.events javax.xml.stream.util javax.xml.transform javax.xml.transform.dom javax.xml.transform.sax javax.xml.transform.stax javax.xml.transform.stream javax.xml.validation javax.xml.xpath org.w3c.dom org.w3c.dom.bootstrap org.w3c.dom.events org.w3c.dom.ls org.w3c.dom.ranges org.w3c.dom.traversal org.w3c.dom.views org.xml.sax org.xml.sax.ext org.xml.sax.helpers/transitive \nDefines the Java API for XML Processing (JAXP), the Streaming API for XML (StAX),\n the Simple API for XML (SAX), and the W3C Document Object Model (DOM) API.\n/javax.xml javax.xml.catalog javax.xml.datatype javax.xml.namespace javax.xml.parsers javax.xml.stream javax.xml.stream.events javax.xml.stream.util javax.xml.transform javax.xml.transform.dom javax.xml.transform.sax javax.xml.transform.stax javax.xml.transform.stream javax.xml.validation javax.xml.xpath org.w3c.dom org.w3c.dom.bootstrap org.w3c.dom.events org.w3c.dom.ls org.w3c.dom.ranges org.w3c.dom.traversal org.w3c.dom.views org.xml.sax org.xml.sax.ext org.xml.sax.helpers/transitive \nDefines the Java API for XML Processing (JAXP), the Streaming API for XML (StAX),\n the Simple API for XML (SAX), and the W3C Document Object Model (DOM) API.\n/javax.xml javax.xml.catalog javax.xml.datatype javax.xml.namespace javax.xml.parsers javax.xml.stream javax.xml.stream.events javax.xml.stream.util javax.xml.transform javax.xml.transform.dom javax.xml.transform.sax javax.xml.transform.stax javax.xml.transform.stream javax.xml.validation javax.xml.xpath org.w3c.dom org.w3c.dom.bootstrap org.w3c.dom.events org.w3c.dom.ls org.w3c.dom.ranges org.w3c.dom.traversal org.w3c.dom.views org.xml.sax org.xml.sax.ext org.xml.sax.helpers/transitive \nDefines the Java API for XML Processing (JAXP), the Streaming API for XML (StAX),\n the Simple API for XML (SAX), and the W3C Document Object Model (DOM) API.\n/javax.xml javax.xml.catalog javax.xml.datatype javax.xml.namespace javax.xml.parsers javax.xml.stream javax.xml.stream.events javax.xml.stream.util javax.xml.transform javax.xml.transform.dom javax.xml.transform.sax javax.xml.transform.stax javax.xml.transform.stream javax.xml.validation javax.xml.xpath org.w3c.dom org.w3c.dom.bootstrap org.w3c.dom.events org.w3c.dom.ls org.w3c.dom.ranges org.w3c.dom.traversal org.w3c.dom.views org.xml.sax org.xml.sax.ext org.xml.sax.helpers/transitive \nDefines the Java API for XML Processing (JAXP), the Streaming API for XML (StAX),\n the Simple API for XML (SAX), and the W3C Document Object Model (DOM) API.\n/javax.xml javax.xml.catalog javax.xml.datatype javax.xml.namespace javax.xml.parsers javax.xml.stream javax.xml.stream.events javax.xml.stream.util javax.xml.transform javax.xml.transform.dom javax.xml.transform.sax javax.xml.transform.stax javax.xml.transform.stream javax.xml.validation javax.xml.xpath org.w3c.dom org.w3c.dom.bootstrap org.w3c.dom.events org.w3c.dom.ls org.w3c.dom.ranges org.w3c.dom.traversal org.w3c.dom.views org.xml.sax org.xml.sax.ext org.xml.sax.helpers/transitive \nDefines the Java API for XML Processing (JAXP), the Streaming API for XML (StAX),\n the Simple API for XML (SAX), and the W3C Document Object Model (DOM) API.\n", "java.xml.crypto": "\nDefines the API for XML cryptography.\n/javax.xml.crypto javax.xml.crypto.dom javax.xml.crypto.dsig javax.xml.crypto.dsig.dom javax.xml.crypto.dsig.keyinfo javax.xml.crypto.dsig.spec/transitive \nDefines the API for XML cryptography.\n", "jdk.accessibility": "\nDefines JDK utility classes used by implementors of Assistive Technologies.\n", "jdk.attach": "\nDefines the attach API.\n", "jdk.charsets": "\nProvides charsets that\n are not in java.base (mostly double byte and IBM charsets).\n", "jdk.compiler": "\nDefines the implementation of the\n system Java compiler\n and its command line equivalent, javac.\n/com.sun.source.doctree com.sun.source.tree com.sun.source.util com.sun.tools.javac/transitive \nDefines the implementation of the\n system Java compiler\n and its command line equivalent, javac.\n", "jdk.crypto.cryptoki": "\nProvides the implementation of the SunPKCS11 security provider.\n", "jdk.crypto.ec": "\nProvides the implementation of the SunEC security provider.\n", "jdk.dynalink": "\nDefines the API for dynamic linking of high-level operations on objects.\n/\nContains interfaces and classes that are used to link an invokedynamic call site.\n", "jdk.editpad": "\nProvides the implementation of the edit pad service used by jdk.jshell.\n", "jdk.hotspot.agent": "\nDefines the implementation of the HotSpot Serviceability Agent.\n", "jdk.httpserver": "\nDefines the JDK-specific HTTP server API.\n", "jdk.jartool": "\nDefines tools for manipulating Java Archive (JAR) files,\n including the jar and\n jarsigner tools.\n", "jdk.javadoc": "\nDefines the implementation of the\n system documentation tool\n and its command line equivalent, javadoc.\n", "jdk.jcmd": "\nDefines tools for diagnostics and troubleshooting a JVM\n such as the jcmd, jps,\n jstat tools.\n", "jdk.jconsole": "\nDefines the JMX graphical tool, jconsole,\n for monitoring and managing a running application.\n", "jdk.jdeps": "\nDefines tools for analysing dependencies in Java libraries and programs,\n including the jdeps,\n javap, and\n jdeprscan tools.\n", "jdk.jdi": "\nDefines the Java Debug Interface.\n/com.sun.jdi com.sun.jdi.connect com.sun.jdi.connect.spi com.sun.jdi.event com.sun.jdi.request/transitive \nDefines the Java Debug Interface.\n", "jdk.jdwp.agent": "\nProvides the implementation of the Java Debug Wire Protocol (JDWP) agent.\n", "jdk.jfr": "\nDefines the API for JDK Flight Recorder.\n/\nThis package provides classes to create events and control Flight Recorder.\n", "jdk.jlink": "\nDefines the jlink tool for creating run-time\n images, the jmod tool for creating and manipulating\n JMOD files, and the jimage tool for inspecting\n the JDK implementation-specific container file for classes and resources.\n", "jdk.jshell": "\nThis module provides support for\n Java Programming Language 'snippet' evaluating tools, such as\n Read-Eval-Print Loops (REPLs), including the jshell tool.\n/\nProvides interfaces for creating tools, such as a Read-Eval-Print Loop (REPL),\n which interactively evaluate \"snippets\" of Java programming language code.\n", "jdk.jsobject": "\nDefines the API for the JavaScript Object.\n", "jdk.jstatd": "\nDefines the jstatd tool for starting a daemon\n for the jstat tool to monitor JVM statistics remotely.\n", "jdk.localedata": "\nProvides the locale data for locales other than US locale.\n", "jdk.management": "\nDefines JDK-specific management interfaces for the JVM.\n", "jdk.management.agent": "\nDefines the JMX management agent.\n", "jdk.management.jfr": "\nDefines the Management Interface for JDK Flight Recorder.\n/\nThis package contains classes to control and monitor Flight Recorder over Java Management Extensions (JMX).\n", "jdk.naming.dns": "\nProvides the implementation of the DNS Java Naming provider.\n", "jdk.naming.rmi": "\nProvides the implementation of the RMI Java Naming provider.\n", "jdk.net": "\nDefines the JDK-specific Networking API.\n/\nPlatform specific socket options for the java.net and java.nio.channels\n socket classes.\n", "jdk.pack": "\nDefines tools for transforming a JAR file into a compressed pack200 file\n and transforming a packed file into a JAR file, including the\n pack200 and\n unpack200 tools.\n", "jdk.rmic": "\nDefines the rmic compiler for generating stubs and\n skeletons using the Java Remote Method Protocol (JRMP) for remote objects.\n", "jdk.scripting.nashorn": "\nProvides the implementation of Nashorn script engine and\n the runtime environment for programs written in ECMAScript 5.1.\n", "jdk.sctp": "\nDefines the JDK-specific API for SCTP.\n", "jdk.security.auth": "\nProvides implementations of the javax.security.auth.*\n interfaces and various authentication modules.\n", "jdk.security.jgss": "\nDefines JDK extensions to the GSS-API and an implementation of the SASL\n GSSAPI mechanism.\n", "jdk.xml.dom": "\nDefines the subset of the W3C Document Object Model (DOM) API that is not part\n of the Java SE API.\n", "jdk.zipfs": "\nProvides the implementation of the zip file system provider.\n", "java.io": "\nProvides for system input and output through data streams,\n serialization and the file system.\n", "java.lang": "\nProvides classes that are fundamental to the design of the Java\n programming language.\n", "java.lang.annotation": "\nProvides library support for the Java programming language\n annotation facility.\n", "java.lang.constant": "\nClasses and interfaces to represent nominal descriptors for run-time\n entities such as classes or method handles, and classfile entities such as\n constant pool entries or invokedynamic call sites.\n", "java.lang.invoke": "\nThe java.lang.invoke package provides low-level primitives for interacting\n with the Java Virtual Machine.\n", "java.lang.module": "\nClasses to support module descriptors and creating configurations of modules\n by means of resolution and service binding.\n", "java.lang.ref": "\nProvides reference-object classes, which support a limited degree\n of interaction with the garbage collector.\n", "java.lang.reflect": "\nProvides classes and interfaces for obtaining reflective information about\n classes and objects.\n", "java.math": "\nProvides classes for performing arbitrary-precision integer\n arithmetic (BigInteger) and arbitrary-precision decimal\n arithmetic (BigDecimal).\n", "java.net": "\nProvides the classes for implementing networking applications.\n", "java.net.spi": "\nService-provider classes for the java.net package.\n", "java.nio": "\nDefines buffers, which are containers for data, and provides an\n overview of the other NIO packages.\n", "java.nio.channels": "\nDefines channels, which represent connections to entities that are capable of\n performing I/O operations, such as files and sockets; defines selectors, for\n multiplexed, non-blocking I/O operations.\n", "java.nio.channels.spi": "\nService-provider classes for the java.nio.channels\n package.\n", "java.nio.charset": "\nDefines charsets, decoders, and encoders, for translating between\n bytes and Unicode characters.\n", "java.nio.charset.spi": "\nService-provider classes for the java.nio.charset package.\n", "java.nio.file": "\nDefines interfaces and classes for the Java virtual machine to access files,\n file attributes, and file systems.\n", "java.nio.file.attribute": "\nInterfaces and classes providing access to file and file system attributes.\n", "java.nio.file.spi": "\nService-provider classes for the java.nio.file package.\n", "java.security": "\nProvides the classes and interfaces for the security framework.\n", "java.security.acl": "\nThe classes and interfaces in this package have been deprecated.\n", "java.security.cert": "\nProvides classes and interfaces for parsing and managing\n certificates, certificate revocation lists (CRLs), and\n certification paths.\n", "java.security.interfaces": "\nProvides interfaces for generating RSA (Rivest, Shamir and\n Adleman AsymmetricCipher algorithm)\n keys as defined in the RSA Laboratory Technical Note\n PKCS#1, and DSA (Digital Signature\n Algorithm) keys as defined in NIST's FIPS-186.\n", "java.security.spec": "\nProvides classes and interfaces for key specifications and algorithm\n parameter specifications.\n", "java.text": "\nProvides classes and interfaces for handling text, dates, numbers,\n and messages in a manner independent of natural languages.\n", "java.text.spi": "\nService provider classes for the classes in the java.text package.\n", "java.time": "\n\n The main API for dates, times, instants, and durations.\n", "java.time.chrono": "\n\n Generic API for calendar systems other than the default ISO.\n", "java.time.format": "\n\n Provides classes to print and parse dates and times.\n", "java.time.temporal": "\n\n Access to date and time using fields and units, and date time adjusters.\n", "java.time.zone": "\n\n Support for time-zones and their rules.\n", "java.util": "\nContains the collections framework, some internationalization support classes,\n a service loader, properties, random number generation, string parsing\n and scanning classes, base64 encoding and decoding, a bit array, and\n several miscellaneous utility classes.\n", "java.util.concurrent": "\nUtility classes commonly useful in concurrent programming.\n", "java.util.concurrent.atomic": "\nA small toolkit of classes that support lock-free thread-safe\n programming on single variables.\n", "java.util.concurrent.locks": "\nInterfaces and classes providing a framework for locking and waiting\n for conditions that is distinct from built-in synchronization and\n monitors.\n", "java.util.function": "\nFunctional interfaces provide target types for lambda expressions\n and method references.\n", "java.util.jar": "\nProvides classes for reading and writing the JAR (Java ARchive)\n file format, which is based on the standard ZIP file format with an\n optional manifest file.\n", "java.util.regex": "\nClasses for matching character sequences against patterns specified\n by regular expressions.\n", "java.util.spi": "\nService provider classes for the classes in the java.util package.\n", "java.util.stream": "\nClasses to support functional-style operations on streams of elements, such\n as map-reduce transformations on collections.\n", "java.util.zip": "\nProvides classes for reading and writing the standard ZIP and GZIP file\n formats.\n", "javax.crypto": "\nProvides the classes and interfaces for cryptographic\n operations.\n", "javax.crypto.interfaces": "\nProvides interfaces for Diffie-Hellman keys as defined in RSA\n Laboratories' PKCS #3.\n", "javax.crypto.spec": "\nProvides classes and interfaces for key specifications and\n algorithm parameter specifications.\n", "javax.net": "\nProvides classes for networking applications.\n", "javax.net.ssl": "\nProvides classes for the secure socket package.\n", "javax.security.auth": "\nThis package provides a framework for authentication and\n authorization.\n", "javax.security.auth.callback": "\nThis package provides the classes necessary for services\n to interact with applications in order to retrieve\n information (authentication data including usernames\n or passwords, for example) or to display information\n (error and warning messages, for example).\n", "javax.security.auth.login": "\nThis package provides a pluggable authentication framework.\n", "javax.security.auth.spi": "\nThis package provides the interface to be used for\n implementing pluggable authentication modules.\n", "javax.security.auth.x500": "\nThis package contains the classes that should be used to store\n X500 Principal and X500 Private Credentials in a\n Subject.\n", "javax.security.cert": "\nProvides classes for public key certificates.\n", "FileSystemProvider": "\u00a0/\nService-provider class for file systems.\n/\nService-provider class for file systems.\n/\u00a0", "AbstractChronology": "\nAn abstract implementation of a calendar system, used to organize and identify dates.\n/\nAn abstract implementation of a calendar system, used to organize and identify dates.\n", "AsynchronousChannelProvider": "\nService-provider class for asynchronous channels.\n/\nService-provider class for asynchronous channels.\n", "BreakIteratorProvider": "\nAn abstract class for service providers that\n provide concrete implementations of the\n BreakIterator class.\n/\nAn abstract class for service providers that\n provide concrete implementations of the\n BreakIterator class.\n", "CalendarDataProvider": "\nAn abstract class for service providers that provide locale-dependent Calendar parameters.\n/\nAn abstract class for service providers that provide locale-dependent Calendar parameters.\n", "CalendarNameProvider": "\nAn abstract class for service providers that provide localized string\n representations (display names) of Calendar field values.\n/\nAn abstract class for service providers that provide localized string\n representations (display names) of Calendar field values.\n", "CharsetProvider": "\nCharset service-provider class.\n/\nCharset service-provider class.\n/\u00a0", "Chronology": "\nA calendar system, used to organize and identify dates.\n/\nA calendar system, used to organize and identify dates.\n", "CollatorProvider": "\nAn abstract class for service providers that\n provide concrete implementations of the\n Collator class.\n/\nAn abstract class for service providers that\n provide concrete implementations of the\n Collator class.\n", "ContentHandlerFactory": "\nThis interface defines a factory for content handlers.\n/\nThis interface defines a factory for content handlers.\n", "CurrencyNameProvider": "\nAn abstract class for service providers that\n provide localized currency symbols and display names for the\n Currency class.\n/\nAn abstract class for service providers that\n provide localized currency symbols and display names for the\n Currency class.\n", "DateFormatProvider": "\nAn abstract class for service providers that\n provide concrete implementations of the\n DateFormat class.\n/\nAn abstract class for service providers that\n provide concrete implementations of the\n DateFormat class.\n", "DateFormatSymbolsProvider": "\nAn abstract class for service providers that\n provide instances of the\n DateFormatSymbols class.\n/\nAn abstract class for service providers that\n provide instances of the\n DateFormatSymbols class.\n", "DecimalFormatSymbolsProvider": "\nAn abstract class for service providers that\n provide instances of the\n DecimalFormatSymbols class.\n/\nAn abstract class for service providers that\n provide instances of the\n DecimalFormatSymbols class.\n", "FileTypeDetector": "\nA file type detector for probing a file to guess its file type.\n/\nA file type detector for probing a file to guess its file type.\n", "LocaleNameProvider": "\nAn abstract class for service providers that\n provide localized names for the\n Locale class.\n/\nAn abstract class for service providers that\n provide localized names for the\n Locale class.\n", "LoginModule": "\n Service-provider interface for authentication technology providers.\n/\n Service-provider interface for authentication technology providers.\n/\u00a0", "NumberFormatProvider": "\nAn abstract class for service providers that\n provide concrete implementations of the\n NumberFormat class.\n/\nAn abstract class for service providers that\n provide concrete implementations of the\n NumberFormat class.\n", "Provider": "\nThis class represents a \"provider\" for the\n Java Security API, where a provider implements some or all parts of\n Java Security.\n/\nThis class represents a \"provider\" for the\n Java Security API, where a provider implements some or all parts of\n Java Security.\n/\u00a0/\u00a0", "ResourceBundleControlProvider": "\nAn interface for service providers that provide implementations of ResourceBundle.Control.\n/\nAn interface for service providers that provide implementations of ResourceBundle.Control.\n", "ResourceBundleProvider": "\nResourceBundleProvider is a service provider interface for\n resource bundles.\n/\nResourceBundleProvider is a service provider interface for\n resource bundles.\n", "SelectorProvider": "\nService-provider class for selectors and selectable channels.\n/\nService-provider class for selectors and selectable channels.\n", "System.LoggerFinder": "\nThe LoggerFinder service is responsible for creating, managing,\n and configuring loggers to the underlying framework it uses.\n/\nThe LoggerFinder service is responsible for creating, managing,\n and configuring loggers to the underlying framework it uses.\n", "TimeZoneNameProvider": "\nAn abstract class for service providers that\n provide localized time zone names for the\n TimeZone class.\n/\nAn abstract class for service providers that\n provide localized time zone names for the\n TimeZone class.\n", "ToolProvider": "\nAn interface for command-line tools to provide a way to\n be invoked without necessarily starting a new VM.\n/\nAn interface for command-line tools to provide a way to\n be invoked without necessarily starting a new VM.\n/\nProvides methods for locating tool providers, for example,\n providers of compilers.\n/\u00a0/\u00a0/\u00a0/\u00a0", "URLStreamHandlerProvider": "\nURL stream handler service-provider class.\n/\nURL stream handler service-provider class.\n", "ZoneRulesProvider": "\nProvider of time-zone rules to the system.\n/\nProvider of time-zone rules to the system.\n", "Closeable": "\nA Closeable is a source or destination of data that can be closed.\n", "DataInput": "\nThe DataInput interface provides\n for reading bytes from a binary stream and\n reconstructing from them data in any of\n the Java primitive types.\n", "DataOutput": "\nThe DataOutput interface provides\n for converting data from any of the Java\n primitive types to a series of bytes and\n writing these bytes to a binary stream.\n", "Externalizable": "\nOnly the identity of the class of an Externalizable instance is\n written in the serialization stream and it is the responsibility\n of the class to save and restore the contents of its instances.\n", "FileFilter": "\nA filter for abstract pathnames.\n/\nFileFilter is an abstract class used by JFileChooser\n for filtering the set of files shown to the user.\n", "FilenameFilter": "\nInstances of classes that implement this interface are used to\n filter filenames.\n", "Flushable": "\nA Flushable is a destination of data that can be flushed.\n", "ObjectInput": "\nObjectInput extends the DataInput interface to include the reading of\n objects.\n", "ObjectInputFilter": "\nFilter classes, array lengths, and graph metrics during deserialization.\n", "ObjectInputFilter.FilterInfo": "\nFilterInfo provides access to information about the current object\n being deserialized and the status of the ObjectInputStream.\n", "ObjectInputValidation": "\nCallback interface to allow validation of objects within a graph.\n", "ObjectOutput": "\nObjectOutput extends the DataOutput interface to include writing of objects.\n", "ObjectStreamConstants": "\nConstants written into the Object Serialization Stream.\n", "Serializable": "\nSerializability of a class is enabled by the class implementing the\n java.io.Serializable interface.\n", "BufferedInputStream": "\nA BufferedInputStream adds\n functionality to another input stream-namely,\n the ability to buffer the input and to\n support the mark and reset\n methods.\n", "BufferedOutputStream": "\nThe class implements a buffered output stream.\n", "BufferedReader": "\nReads text from a character-input stream, buffering characters so as to\n provide for the efficient reading of characters, arrays, and lines.\n", "BufferedWriter": "\nWrites text to a character-output stream, buffering characters so as to\n provide for the efficient writing of single characters, arrays, and strings.\n", "ByteArrayInputStream": "\nA ByteArrayInputStream contains\n an internal buffer that contains bytes that\n may be read from the stream.\n", "ByteArrayOutputStream": "\nThis class implements an output stream in which the data is\n written into a byte array.\n", "CharArrayReader": "\nThis class implements a character buffer that can be used as a\n character-input stream.\n", "CharArrayWriter": "\nThis class implements a character buffer that can be used as an Writer.\n", "Console": "\nMethods to access the character-based console device, if any, associated\n with the current Java virtual machine.\n", "DataInputStream": "\nA data input stream lets an application read primitive Java data\n types from an underlying input stream in a machine-independent\n way.\n", "DataOutputStream": "\nA data output stream lets an application write primitive Java data\n types to an output stream in a portable way.\n", "File": "\nAn abstract representation of file and directory pathnames.\n", "FileDescriptor": "\nInstances of the file descriptor class serve as an opaque handle\n to the underlying machine-specific structure representing an open\n file, an open socket, or another source or sink of bytes.\n", "FileInputStream": "\nA FileInputStream obtains input bytes\n from a file in a file system.\n", "FileOutputStream": "\nA file output stream is an output stream for writing data to a\n File or to a FileDescriptor.\n", "FilePermission": "\nThis class represents access to a file or directory.\n", "FileReader": "\nReads text from character files using a default buffer size.\n", "FileWriter": "\nWrites text to character files using a default buffer size.\n", "FilterInputStream": "\nA FilterInputStream contains\n some other input stream, which it uses as\n its  basic source of data, possibly transforming\n the data along the way or providing  additional\n functionality.\n", "FilterOutputStream": "\nThis class is the superclass of all classes that filter output\n streams.\n", "FilterReader": "\nAbstract class for reading filtered character streams.\n", "FilterWriter": "\nAbstract class for writing filtered character streams.\n", "InputStream": "\nThis abstract class is the superclass of all classes representing\n an input stream of bytes.\n", "InputStreamReader": "\nAn InputStreamReader is a bridge from byte streams to character streams: It\n reads bytes and decodes them into characters using a specified charset.\n", "LineNumberInputStream": "Deprecated.\nThis class incorrectly assumes that bytes adequately represent\n             characters.\n", "LineNumberReader": "\nA buffered character-input stream that keeps track of line numbers.\n", "ObjectInputFilter.Config": "\nA utility class to set and get the process-wide filter or create a filter\n from a pattern string.\n", "ObjectInputStream": "\nAn ObjectInputStream deserializes primitive data and objects previously\n written using an ObjectOutputStream.\n", "ObjectInputStream.GetField": "\nProvide access to the persistent fields read from the input stream.\n", "ObjectOutputStream": "\nAn ObjectOutputStream writes primitive data types and graphs of Java objects\n to an OutputStream.\n", "ObjectOutputStream.PutField": "\nProvide programmatic access to the persistent fields to be written\n to ObjectOutput.\n", "ObjectStreamClass": "\nSerialization's descriptor for classes.\n", "ObjectStreamField": "\nA description of a Serializable field from a Serializable class.\n", "OutputStream": "\nThis abstract class is the superclass of all classes representing\n an output stream of bytes.\n", "OutputStreamWriter": "\nAn OutputStreamWriter is a bridge from character streams to byte streams:\n Characters written to it are encoded into bytes using a specified charset.\n", "PipedInputStream": "\nA piped input stream should be connected\n to a piped output stream; the piped  input\n stream then provides whatever data bytes\n are written to the piped output  stream.\n", "PipedOutputStream": "\nA piped output stream can be connected to a piped input stream\n to create a communications pipe.\n", "PipedReader": "\nPiped character-input streams.\n", "PipedWriter": "\nPiped character-output streams.\n", "PrintStream": "\nA PrintStream adds functionality to another output stream,\n namely the ability to print representations of various data values\n conveniently.\n", "PrintWriter": "\nPrints formatted representations of objects to a text-output stream.\n", "PushbackInputStream": "\nA PushbackInputStream adds\n functionality to another input stream, namely\n the  ability to \"push back\" or \"unread\" bytes,\n by storing pushed-back bytes in an internal buffer.\n", "PushbackReader": "\nA character-stream reader that allows characters to be pushed back into the\n stream.\n", "RandomAccessFile": "\nInstances of this class support both reading and writing to a\n random access file.\n", "Reader": "\nAbstract class for reading character streams.\n", "SequenceInputStream": "\nA SequenceInputStream represents\n the logical concatenation of other input\n streams.\n", "SerializablePermission": "\nThis class is for Serializable permissions.\n", "StreamTokenizer": "\nThe StreamTokenizer class takes an input stream and\n parses it into \"tokens\", allowing the tokens to be\n read one at a time.\n", "StringBufferInputStream": "Deprecated.\nThis class does not properly convert characters into bytes.\n", "StringReader": "\nA character stream whose source is a string.\n", "StringWriter": "\nA character stream that collects its output in a string buffer, which can\n then be used to construct a string.\n", "Writer": "\nAbstract class for writing to character streams.\n", "ObjectInputFilter.Status": "\nThe status of a check on the class, array length, number of references,\n depth, and stream size.\n", "CharConversionException": "\nBase class for character conversion exceptions.\n", "EOFException": "\nSignals that an end of file or end of stream has been reached\n unexpectedly during input.\n", "FileNotFoundException": "\nSignals that an attempt to open the file denoted by a specified pathname\n has failed.\n", "InterruptedIOException": "\nSignals that an I/O operation has been interrupted.\n", "InvalidClassException": "\nThrown when the Serialization runtime detects one of the following\n problems with a Class.\n", "InvalidObjectException": "\nIndicates that one or more deserialized objects failed validation\n tests.\n", "IOException": "\nSignals that an I/O exception of some sort has occurred.\n", "NotActiveException": "\nThrown when serialization or deserialization is not active.\n", "NotSerializableException": "\nThrown when an instance is required to have a Serializable interface.\n", "ObjectStreamException": "\nSuperclass of all exceptions specific to Object Stream classes.\n", "OptionalDataException": "\nException indicating the failure of an object read operation due to\n unread primitive data, or the end of data belonging to a serialized\n object in the stream.\n", "StreamCorruptedException": "\nThrown when control information that was read from an object stream\n violates internal consistency checks.\n", "SyncFailedException": "\nSignals that a sync operation has failed.\n", "UncheckedIOException": "\nWraps an IOException with an unchecked exception.\n", "UnsupportedEncodingException": "\nThe Character Encoding is not supported.\n", "UTFDataFormatException": "\nSignals that a malformed string in\n modified UTF-8\n format has been read in a data\n input stream or by any class that implements the data input\n interface.\n", "WriteAbortedException": "\nSignals that one of the ObjectStreamExceptions was thrown during a\n write operation.\n", "IOError": "\nThrown when a serious I/O error has occurred.\n", "Appendable": "\nAn object to which char sequences and values can be appended.\n", "AutoCloseable": "\nAn object that may hold resources (such as file or socket handles)\n until it is closed.\n", "CharSequence": "\nA CharSequence is a readable sequence of char values.\n", "Cloneable": "\nA class implements the Cloneable interface to\n indicate to the Object.clone() method that it\n is legal for that method to make a\n field-for-field copy of instances of that class.\n", "Comparable<T>": "\nThis interface imposes a total ordering on the objects of each class that\n implements it.\n", "Iterable<T>": "\nImplementing this interface allows an object to be the target of the enhanced\n for statement (sometimes called the \"for-each loop\" statement).\n", "ProcessHandle": "\nProcessHandle identifies and provides control of native processes.\n", "ProcessHandle.Info": "\nInformation snapshot about the process.\n", "Readable": "\nA Readable is a source of characters.\n", "Runnable": "\nThe Runnable interface should be implemented by any\n class whose instances are intended to be executed by a thread.\n", "StackWalker.StackFrame": "\nA StackFrame object represents a method invocation returned by\n StackWalker.\n", "System.Logger": "\nSystem.Logger instances log messages that will be\n routed to the underlying logging framework the LoggerFinder uses.\n", "Thread.UncaughtExceptionHandler": "\nInterface for handlers invoked when a Thread abruptly\n terminates due to an uncaught exception.\n", "Boolean": "\nThe Boolean class wraps a value of the primitive type\n boolean in an object.\n", "Byte": "\nThe Byte class wraps a value of primitive type byte\n in an object.\n", "Character": "\nThe Character class wraps a value of the primitive\n type char in an object.\n", "Character.Subset": "\nInstances of this class represent particular subsets of the Unicode\n character set.\n", "Character.UnicodeBlock": "\nA family of character subsets representing the character blocks in the\n Unicode specification.\n", "Class<T>": "\nInstances of the class Class represent classes and interfaces\n in a running Java application.\n", "ClassLoader": "\nA class loader is an object that is responsible for loading classes.\n", "ClassValue<T>": "\nLazily associate a computed value with (potentially) every type.\n", "Compiler": "Deprecated, for removal: This API element is subject to removal in a future version.\nJIT compilers and their technologies vary too widely to\n be controlled effectively by a standardized interface.\n", "Double": "\nThe Double class wraps a value of the primitive type\n double in an object.\n", "Enum<E extends Enum<E>>": "\nThis is the common base class of all Java language enumeration types.\n", "Enum.EnumDesc<E extends Enum<E>>": "\nA nominal descriptor for an\n enum constant.\n", "Float": "\nThe Float class wraps a value of primitive type\n float in an object.\n", "InheritableThreadLocal<T>": "\nThis class extends ThreadLocal to provide inheritance of values\n from parent thread to child thread: when a child thread is created, the\n child receives initial values for all inheritable thread-local variables\n for which the parent has values.\n", "Integer": "\nThe Integer class wraps a value of the primitive type\n int in an object.\n", "Long": "\nThe Long class wraps a value of the primitive type \n long in an object.\n", "Math": "\nThe class Math contains methods for performing basic\n numeric operations such as the elementary exponential, logarithm,\n square root, and trigonometric functions.\n", "Module": "\nRepresents a run-time module, either named or unnamed.\n", "ModuleLayer": "\nA layer of modules in the Java virtual machine.\n", "ModuleLayer.Controller": "\nControls a module layer.\n", "Number": "\nThe abstract class Number is the superclass of platform\n classes representing numeric values that are convertible to the\n primitive types byte, double, float, \n int, long, and short.\n", "Object": "\nClass Object is the root of the class hierarchy.\n", "Package": "\nRepresents metadata about a run-time package associated with a class loader.\n", "Process": "\nProcess provides control of native processes started by\n ProcessBuilder.start and Runtime.exec.\n", "ProcessBuilder": "\nThis class is used to create operating system processes.\n", "ProcessBuilder.Redirect": "\nRepresents a source of subprocess input or a destination of\n subprocess output.\n", "Runtime": "\nEvery Java application has a single instance of class\n Runtime that allows the application to interface with\n the environment in which the application is running.\n", "Runtime.Version": "\nA representation of a version string for an implementation of the\n Java\u00a0SE Platform.\n", "RuntimePermission": "\nThis class is for runtime permissions.\n", "SecurityManager": "\nThe security manager is a class that allows\n applications to implement a security policy.\n", "Short": "\nThe Short class wraps a value of primitive type \n short in an object.\n", "StackTraceElement": "\nAn element in a stack trace, as returned by Throwable.getStackTrace().\n", "StackWalker": "\nA stack walker.\n", "StrictMath": "\nThe class StrictMath contains methods for performing basic\n numeric operations such as the elementary exponential, logarithm,\n square root, and trigonometric functions.\n", "String": "\nThe String class represents character strings.\n", "StringBuffer": "\nA thread-safe, mutable sequence of characters.\n", "StringBuilder": "\nA mutable sequence of characters.\n", "System": "\nThe System class contains several useful class fields\n and methods.\n", "Thread": "\nA thread is a thread of execution in a program.\n", "ThreadGroup": "\nA thread group represents a set of threads.\n", "ThreadLocal<T>": "\nThis class provides thread-local variables.\n", "Throwable": "\nThe Throwable class is the superclass of all errors and\n exceptions in the Java language.\n", "Void": "\nThe Void class is an uninstantiable placeholder class to hold a\n reference to the Class object representing the Java keyword\n void.\n", "Character.UnicodeScript": "\nA family of character subsets representing the character scripts\n defined in the \nUnicode Standard Annex #24: Script Names.\n", "ProcessBuilder.Redirect.Type": "\nThe type of a ProcessBuilder.Redirect.\n", "StackWalker.Option": "\nStack walker option to configure the stack frame\n information obtained by a StackWalker.\n", "System.Logger.Level": "\nSystem loggers levels.\n", "Thread.State": "\nA thread state.\n", "ArithmeticException": "\nThrown when an exceptional arithmetic condition has occurred.\n", "ArrayIndexOutOfBoundsException": "\nThrown to indicate that an array has been accessed with an illegal index.\n", "ArrayStoreException": "\nThrown to indicate that an attempt has been made to store the\n wrong type of object into an array of objects.\n", "ClassCastException": "\nThrown to indicate that the code has attempted to cast an object\n to a subclass of which it is not an instance.\n", "ClassNotFoundException": "\nThrown when an application tries to load in a class through its\n string name using:\n \n The forName method in class Class.\n", "CloneNotSupportedException": "\nThrown to indicate that the clone method in class\n Object has been called to clone an object, but that\n the object's class does not implement the Cloneable\n interface.\n", "EnumConstantNotPresentException": "\nThrown when an application tries to access an enum constant by name\n and the enum type contains no constant with the specified name.\n", "Exception": "\nThe class Exception and its subclasses are a form of\n Throwable that indicates conditions that a reasonable\n application might want to catch.\n", "IllegalAccessException": "\nAn IllegalAccessException is thrown when an application tries\n to reflectively create an instance (other than an array),\n set or get a field, or invoke a method, but the currently\n executing method does not have access to the definition of\n the specified class, field, method or constructor.\n", "IllegalArgumentException": "\nThrown to indicate that a method has been passed an illegal or\n inappropriate argument.\n", "IllegalCallerException": "\nThrown to indicate that a method has been called by an inappropriate caller.\n", "IllegalMonitorStateException": "\nThrown to indicate that a thread has attempted to wait on an\n object's monitor or to notify other threads waiting on an object's\n monitor without owning the specified monitor.\n", "IllegalStateException": "\nSignals that a method has been invoked at an illegal or\n inappropriate time.\n", "IllegalThreadStateException": "\nThrown to indicate that a thread is not in an appropriate state\n for the requested operation.\n", "IndexOutOfBoundsException": "\nThrown to indicate that an index of some sort (such as to an array, to a\n string, or to a vector) is out of range.\n", "InstantiationException": "\nThrown when an application tries to create an instance of a class\n using the newInstance method in class\n Class, but the specified class object cannot be\n instantiated.\n", "InterruptedException": "\nThrown when a thread is waiting, sleeping, or otherwise occupied,\n and the thread is interrupted, either before or during the activity.\n", "LayerInstantiationException": "\nThrown when creating a module layer fails.\n", "NegativeArraySizeException": "\nThrown if an application tries to create an array with negative size.\n", "NoSuchFieldException": "\nSignals that the class doesn't have a field of a specified name.\n", "NoSuchMethodException": "\nThrown when a particular method cannot be found.\n", "NullPointerException": "\nThrown when an application attempts to use null in a\n case where an object is required.\n", "NumberFormatException": "\nThrown to indicate that the application has attempted to convert\n a string to one of the numeric types, but that the string does not\n have the appropriate format.\n", "ReflectiveOperationException": "\nCommon superclass of exceptions thrown by reflective operations in\n core reflection.\n", "RuntimeException": "\nRuntimeException is the superclass of those\n exceptions that can be thrown during the normal operation of the\n Java Virtual Machine.\n", "SecurityException": "\nThrown by the security manager to indicate a security violation.\n", "StringIndexOutOfBoundsException": "\nThrown by String methods to indicate that an index is either negative\n or greater than the size of the string.\n", "TypeNotPresentException": "\nThrown when an application tries to access a type using a string\n representing the type's name, but no definition for the type with\n the specified name can be found.\n", "UnsupportedOperationException": "\nThrown to indicate that the requested operation is not supported.\n", "AbstractMethodError": "\nThrown when an application tries to call an abstract method.\n", "AssertionError": "\nThrown to indicate that an assertion has failed.\n", "BootstrapMethodError": "\nThrown to indicate that an invokedynamic instruction or a dynamic\n constant failed to resolve its bootstrap method and arguments,\n or for invokedynamic instruction the bootstrap method has failed to\n provide a\n call site with a\n target\n of the correct method type,\n or for a dynamic constant the bootstrap method has failed to provide a\n constant value of the required type.\n", "ClassCircularityError": "\nThrown when the Java Virtual Machine detects a circularity in the\n superclass hierarchy of a class being loaded.\n", "ClassFormatError": "\nThrown when the Java Virtual Machine attempts to read a class\n file and determines that the file is malformed or otherwise cannot\n be interpreted as a class file.\n", "Error": "\nAn Error is a subclass of Throwable\n that indicates serious problems that a reasonable application\n should not try to catch.\n", "ExceptionInInitializerError": "\nSignals that an unexpected exception has occurred in a static initializer.\n", "IllegalAccessError": "\nThrown if an application attempts to access or modify a field, or\n to call a method that it does not have access to.\n", "IncompatibleClassChangeError": "\nThrown when an incompatible class change has occurred to some class\n definition.\n", "InstantiationError": "\nThrown when an application tries to use the Java new\n construct to instantiate an abstract class or an interface.\n", "InternalError": "\nThrown to indicate some unexpected internal error has occurred in\n the Java Virtual Machine.\n", "LinkageError": "\nSubclasses of LinkageError indicate that a class has\n some dependency on another class; however, the latter class has\n incompatibly changed after the compilation of the former class.\n", "NoClassDefFoundError": "\nThrown if the Java Virtual Machine or a ClassLoader instance\n tries to load in the definition of a class (as part of a normal method call\n or as part of creating a new instance using the new expression)\n and no definition of the class could be found.\n", "NoSuchFieldError": "\nThrown if an application tries to access or modify a specified\n field of an object, and that object no longer has that field.\n", "NoSuchMethodError": "\nThrown if an application tries to call a specified method of a\n class (either static or instance), and that class no longer has a\n definition of that method.\n", "OutOfMemoryError": "\nThrown when the Java Virtual Machine cannot allocate an object\n because it is out of memory, and no more memory could be made\n available by the garbage collector.\n", "StackOverflowError": "\nThrown when a stack overflow occurs because an application\n recurses too deeply.\n", "ThreadDeath": "\nAn instance of ThreadDeath is thrown in the victim thread\n when the (deprecated) Thread.stop() method is invoked.\n", "UnknownError": "\nThrown when an unknown but serious exception has occurred in the\n Java Virtual Machine.\n", "UnsatisfiedLinkError": "\nThrown if the Java Virtual Machine cannot find an appropriate\n native-language definition of a method declared native.\n", "UnsupportedClassVersionError": "\nThrown when the Java Virtual Machine attempts to read a class\n file and determines that the major and minor version numbers\n in the file are not supported.\n", "VerifyError": "\nThrown when the \"verifier\" detects that a class file,\n though well formed, contains some sort of internal inconsistency\n or security problem.\n", "VirtualMachineError": "\nThrown to indicate that the Java Virtual Machine is broken or has\n run out of resources necessary for it to continue operating.\n", "Deprecated": "\nA program element annotated @Deprecated is one that programmers\n are discouraged from using.\n", "FunctionalInterface": "\nAn informative annotation type used to indicate that an interface\n type declaration is intended to be a functional interface as\n defined by the Java Language Specification.\n", "Override": "\nIndicates that a method declaration is intended to override a\n method declaration in a supertype.\n", "SafeVarargs": "\nA programmer assertion that the body of the annotated method or\n constructor does not perform potentially unsafe operations on its\n varargs parameter.\n", "SuppressWarnings": "\nIndicates that the named compiler warnings should be suppressed in the\n annotated element (and in all program elements contained in the annotated\n element).\n", "Annotation": "\nThe common interface extended by all annotation types.\n/\nAn Annotation object is used as a wrapper for a text attribute value if\n the attribute has annotation characteristics.\n", "ElementType": "\nThe constants of this enumerated type provide a simple classification of the\n syntactic locations where annotations may appear in a Java program.\n", "RetentionPolicy": "\nAnnotation retention policy.\n", "AnnotationTypeMismatchException": "\nThrown to indicate that a program has attempted to access an element of\n an annotation whose type has changed after the annotation was compiled\n (or serialized).\n", "IncompleteAnnotationException": "\nThrown to indicate that a program has attempted to access an element of\n an annotation type that was added to the annotation type definition after\n the annotation was compiled (or serialized).\n", "AnnotationFormatError": "\nThrown when the annotation parser attempts to read an annotation\n from a class file and determines that the annotation is malformed.\n", "Documented": "\nIf the annotation @Documented is present on the declaration\n of an annotation type A, then any @A annotation on\n an element is considered part of the element's public contract.\n", "Inherited": "\nIndicates that an annotation type is automatically inherited.\n", "Native": "\nIndicates that a field defining a constant value may be referenced\n from native code.\n", "Repeatable": "\nThe annotation type java.lang.annotation.Repeatable is\n used to indicate that the annotation type whose declaration it\n (meta-)annotates is repeatable.\n", "Retention": "\nIndicates how long annotations with the annotated type are to\n be retained.\n", "Target": "\nIndicates the contexts in which an annotation type is applicable.\n", "ClassDesc": "\nA nominal descriptor for a\n Class constant.\n", "Constable": "\nRepresents a type which is constable.\n", "ConstantDesc": "\nA nominal descriptor for a loadable\n constant value, as defined in JVMS 4.4.\n", "DirectMethodHandleDesc": "\nA nominal descriptor for a direct\n MethodHandle.\n", "MethodHandleDesc": "\nA nominal descriptor for a\n MethodHandle constant.\n", "MethodTypeDesc": "\nA nominal descriptor for a\n MethodType constant.\n", "ConstantDescs": "\nPredefined values of nominal descriptor\n for common constants, including descriptors for primitive class types and\n other common platform types, and descriptors for method handles for standard\n bootstrap methods.\n", "DynamicCallSiteDesc": "\nA nominal descriptor for an\n invokedynamic call site.\n", "DynamicConstantDesc<T>": "\nA nominal descriptor for a\n dynamic constant (one described in the constant pool with\n Constant_Dynamic_info.)\n", "DirectMethodHandleDesc.Kind": "\nKinds of method handles that can be described with DirectMethodHandleDesc.\n", "*": "\n\nCallSite bootstrap(Lookup caller, String name, MethodType type, Object... args)\nCallSite bootstrap(Object... args)\nCallSite bootstrap(Object caller, Object... nameAndTypeWithArgs)\n", "0": "\n\nCallSite bootstrap(Lookup caller, String name, MethodType type)\nCallSite bootstrap(Lookup caller, Object... nameAndType)\n", "1": "\nCallSite bootstrap(Lookup caller, String name, MethodType type, Object arg)", "2": "\n\nCallSite bootstrap(Lookup caller, String name, MethodType type, Object... args)\nCallSite bootstrap(Lookup caller, String name, MethodType type, String... args)\nCallSite bootstrap(Lookup caller, String name, MethodType type, String x, int y)\n", "MethodHandleInfo": "\nA symbolic reference obtained by cracking a direct method handle\n into its consitutent symbolic parts.\n", "TypeDescriptor": "\nAn entity that has a field or method type descriptor\n", "TypeDescriptor.OfField<F extends TypeDescriptor.OfField<F>>": "\nAn entity that has a field type descriptor\n", "TypeDescriptor.OfMethod<F extends TypeDescriptor.OfField<F>,\u200bM extends TypeDescriptor.OfMethod<F,\u200bM>>": "\nAn entity that has a method type descriptor\n", "CallSite": "\nA CallSite is a holder for a variable MethodHandle,\n which is called its target.\n", "ConstantBootstraps": "\nBootstrap methods for dynamically-computed constants.\n", "ConstantCallSite": "\nA ConstantCallSite is a CallSite whose target is permanent, and can never be changed.\n", "LambdaMetafactory": "\nMethods to facilitate the creation of simple \"function objects\" that\n implement one or more interfaces by delegation to a provided MethodHandle,\n possibly after type adaptation and partial evaluation of arguments.\n", "MethodHandle": "\nA method handle is a typed, directly executable reference to an underlying method,\n constructor, field, or similar low-level operation, with optional\n transformations of arguments or return values.\n", "MethodHandleProxies": "\nThis class consists exclusively of static methods that help adapt\n method handles to other JVM types, such as interfaces.\n", "MethodHandles": "\nThis class consists exclusively of static methods that operate on or return\n method handles.\n", "MethodHandles.Lookup": "\nA lookup object is a factory for creating method handles,\n when the creation requires access checking.\n", "MethodType": "\nA method type represents the arguments and return type accepted and\n returned by a method handle, or the arguments and return type passed\n and expected  by a method handle caller.\n", "MutableCallSite": "\nA MutableCallSite is a CallSite whose target variable\n behaves like an ordinary field.\n", "SerializedLambda": "\nSerialized form of a lambda expression.\n", "StringConcatFactory": "\nMethods to facilitate the creation of String concatenation methods, that\n can be used to efficiently concatenate a known number of arguments of known\n types, possibly after type adaptation and partial evaluation of arguments.\n", "SwitchPoint": "\n\n A SwitchPoint is an object which can publish state transitions to other threads.\n", "VarHandle": "\nA VarHandle is a dynamically strongly typed reference to a variable, or to a\n parametrically-defined family of variables, including static fields,\n non-static fields, array elements, or components of an off-heap data\n structure.\n", "VarHandle.VarHandleDesc": "\nA nominal descriptor for a\n VarHandle constant.\n", "VolatileCallSite": "\nA VolatileCallSite is a CallSite whose target acts like a volatile variable.\n", "VarHandle.AccessMode": "\nThe set of access modes that specify how a variable, referenced by a\n VarHandle, is accessed.\n", "LambdaConversionException": "\nLambdaConversionException\n", "StringConcatException": "\nStringConcatException is thrown by StringConcatFactory when linkage\n invariants are violated.\n", "WrongMethodTypeException": "\nThrown to indicate that code has attempted to call a method handle\n via the wrong method type.\n", "ModuleFinder": "\nA finder of modules.\n", "ModuleReader": "\nProvides access to the content of a module.\n", "Configuration": "\nA configuration that is the result of \n resolution or resolution with\n service binding.\n/\nA Configuration object is responsible for specifying which LoginModules\n should be used for a particular application, and in what order the\n LoginModules should be invoked.\n/\nA collection of settings and metadata describing the configuration.\n", "ModuleDescriptor": "\nA module descriptor.\n", "ModuleDescriptor.Builder": "\nA builder for building ModuleDescriptor objects.\n", "ModuleDescriptor.Exports": "\n A package exported by a module, may be qualified or unqualified.\n", "ModuleDescriptor.Opens": "\n A package opened by a module, may be qualified or unqualified.\n", "ModuleDescriptor.Provides": "\n A service that a module provides one or more implementations of.\n", "ModuleDescriptor.Requires": "\n A dependence upon a module\n", "ModuleDescriptor.Version": "\nA module's version string.\n", "ModuleReference": "\nA reference to a module's content.\n/\nA module in the target VM.\n", "ResolvedModule": "\nA module in a graph of resolved modules.\n", "ModuleDescriptor.Exports.Modifier": "\nA modifier on an exported package.\n", "ModuleDescriptor.Modifier": "\nA modifier on a module.\n", "ModuleDescriptor.Opens.Modifier": "\nA modifier on an open package.\n", "ModuleDescriptor.Requires.Modifier": "\nA modifier on a module dependence.\n", "FindException": "\nThrown by a ModuleFinder when an error occurs finding\n a module.\n", "InvalidModuleDescriptorException": "\nThrown when reading a module descriptor and the module descriptor is found\n to be malformed or otherwise cannot be interpreted as a module descriptor.\n", "ResolutionException": "\nThrown when resolving a set of modules, or resolving a set of modules with\n service binding, fails.\n", "Cleaner.Cleanable": "\nCleanable represents an object and a\n cleaning action registered in a Cleaner.\n", "Cleaner": "\nCleaner manages a set of object references and corresponding cleaning actions.\n", "PhantomReference<T>": "\nPhantom reference objects, which are enqueued after the collector\n determines that their referents may otherwise be reclaimed.\n", "Reference<T>": "\nAbstract base class for reference objects.\n", "ReferenceQueue<T>": "\nReference queues, to which registered reference objects are appended by the\n garbage collector after the appropriate reachability changes are detected.\n", "SoftReference<T>": "\nSoft reference objects, which are cleared at the discretion of the garbage\n collector in response to memory demand.\n", "WeakReference<T>": "\nWeak reference objects, which do not prevent their referents from being\n made finalizable, finalized, and then reclaimed.\n", "AnnotatedArrayType": "\nAnnotatedArrayType represents the potentially annotated use of an\n array type, whose component type may itself represent the annotated use of a\n type.\n", "AnnotatedElement": "\nRepresents an annotated element of the program currently running in this\n VM.\n", "AnnotatedParameterizedType": "\nAnnotatedParameterizedType represents the potentially annotated use\n of a parameterized type, whose type arguments may themselves represent\n annotated uses of types.\n", "AnnotatedType": "\nAnnotatedType represents the potentially annotated use of a type in\n the program currently running in this VM.\n/Deprecated, for removal: This API element is subject to removal in a future version.\nThe declarations in this package have been superseded by those\n   in the package jdk.javadoc.doclet.\n", "AnnotatedTypeVariable": "\nAnnotatedTypeVariable represents the potentially annotated use of a\n type variable, whose declaration may have bounds which themselves represent\n annotated uses of types.\n", "AnnotatedWildcardType": "\nAnnotatedWildcardType represents the potentially annotated use of a\n wildcard type argument, whose upper or lower bounds may themselves represent\n annotated uses of types.\n", "GenericArrayType": "\nGenericArrayType represents an array type whose component\n type is either a parameterized type or a type variable.\n", "GenericDeclaration": "\nA common interface for all entities that declare type variables.\n", "InvocationHandler": "\nInvocationHandler is the interface implemented by\n the invocation handler of a proxy instance.\n", "Member": "\nMember is an interface that reflects identifying information about\n a single member (a field or a method) or a constructor.\n", "ParameterizedType": "\nParameterizedType represents a parameterized type such as\n Collection<String>.\n/Deprecated, for removal: This API element is subject to removal in a future version.\nThe declarations in this package have been superseded by those\n   in the package jdk.javadoc.doclet.\n", "Type": "\nType is the common superinterface for all types in the Java\n programming language.\n/Deprecated, for removal: This API element is subject to removal in a future version.\nThe declarations in this package have been superseded by those\n   in the package jdk.javadoc.doclet.\n/\nThe mirror for a type in the target VM.\n", "TypeVariable<D extends GenericDeclaration>": "\nTypeVariable is the common superinterface for type variables of kinds.\n", "WildcardType": "\nWildcardType represents a wildcard type expression, such as\n ?, ? extends Number, or ? super Integer.\n/\nRepresents a wildcard type argument.\n/Deprecated, for removal: This API element is subject to removal in a future version.\nThe declarations in this package have been superseded by those\n   in the package jdk.javadoc.doclet.\n", "AccessibleObject": "\nThe AccessibleObject class is the base class for Field,\n Method, and Constructor objects (known as reflected\n objects).\n", "Array": "\nThe Array class provides static methods to dynamically create and\n access Java arrays.\n/\nThe mapping in the Java programming language for the SQL type\n ARRAY.\n", "Constructor<T>": "\nConstructor provides information about, and access to, a single\n constructor for a class.\n", "Executable": "\nA shared superclass for the common functionality of Method\n and Constructor.\n", "Field": "\nA Field provides information about, and dynamic access to, a\n single field of a class or an interface.\n/\nA class or instance variable in the target VM.\n", "Method": "\nA Method provides information about, and access to, a single method\n on a class or interface.\n/\nA static or instance method in the target VM.\n", "Modifier": "\nThe Modifier class provides static methods and\n constants to decode class and member access modifiers.\n/\nRepresents a modifier on a program element such\n as a class, method, or field.\n", "Parameter": "\nInformation about method parameters.\n/Deprecated, for removal: This API element is subject to removal in a future version.\nThe declarations in this package have been superseded by those\n   in the package jdk.javadoc.doclet.\n", "Proxy": "\nProxy provides static methods for creating objects that act like instances\n of interfaces but allow for customized method invocation.\n/\nThis class represents a proxy setting, typically a type (http, socks) and\n a socket address.\n", "ReflectPermission": "\nThe Permission class for reflective operations.\n", "InaccessibleObjectException": "\nThrown when Java language access checks cannot be suppressed.\n", "InvocationTargetException": "\nInvocationTargetException is a checked exception that wraps\n an exception thrown by an invoked method or constructor.\n", "MalformedParameterizedTypeException": "\nThrown when a semantically malformed parameterized type is\n encountered by a reflective method that needs to instantiate it.\n", "MalformedParametersException": "\nThrown when the\n java.lang.reflect package attempts to read method parameters from\n a class file and determines that one or more parameters are\n malformed.\n", "UndeclaredThrowableException": "\nThrown by a method invocation on a proxy instance if its invocation\n handler's invoke method throws a\n checked exception (a Throwable that is not assignable\n to RuntimeException or Error) that\n is not assignable to any of the exception types declared in the\n throws clause of the method that was invoked on the\n proxy instance and dispatched to the invocation handler.\n", "GenericSignatureFormatError": "\nThrown when a syntactically malformed signature attribute is\n encountered by a reflective method that needs to interpret the\n generic signature information for a type, method or constructor.\n", "BigDecimal": "\nImmutable, arbitrary-precision signed decimal numbers.\n", "BigInteger": "\nImmutable arbitrary-precision integers.\n", "MathContext": "\nImmutable objects which encapsulate the context settings which\n describe certain rules for numerical operators, such as those\n implemented by the BigDecimal class.\n", "RoundingMode": "\nSpecifies a rounding behavior for numerical operations\n capable of discarding precision.\n", "CookiePolicy": "\nCookiePolicy implementations decide which cookies should be accepted\n and which should be rejected.\n", "CookieStore": "\nA CookieStore object represents a storage for cookie.\n", "DatagramSocketImplFactory": "\nThis interface defines a factory for datagram socket implementations.\n", "FileNameMap": "\nA simple interface which provides a mechanism to map\n between a file name and a MIME type string.\n", "ProtocolFamily": "\nRepresents a family of communication protocols.\n", "SocketImplFactory": "\nThis interface defines a factory for socket implementations.\n", "SocketOption<T>": "\nA socket option associated with a socket.\n", "SocketOptions": "\nInterface of methods to get/set socket options.\n", "URLStreamHandlerFactory": "\nThis interface defines a factory for URL stream\n protocol handlers.\n", "Authenticator": "\nThe class Authenticator represents an object that knows how to obtain\n authentication for a network connection.\n/\nAuthenticator represents an implementation of an HTTP authentication\n mechanism.\n", "CacheRequest": "\nRepresents channels for storing resources in the\n ResponseCache.\n", "CacheResponse": "\nRepresent channels for retrieving resources from the\n ResponseCache.\n", "ContentHandler": "\nThe abstract class ContentHandler is the superclass\n of all classes that read an Object from a\n URLConnection.\n/\nReceive notification of the logical content of a document.\n", "CookieHandler": "\nA CookieHandler object provides a callback mechanism to hook up a\n HTTP state management policy implementation into the HTTP protocol\n handler.\n", "CookieManager": "\nCookieManager provides a concrete implementation of CookieHandler,\n which separates the storage of cookies from the policy surrounding accepting\n and rejecting cookies.\n", "DatagramPacket": "\nThis class represents a datagram packet.\n", "DatagramSocket": "\nThis class represents a socket for sending and receiving datagram packets.\n", "DatagramSocketImpl": "\nAbstract datagram and multicast socket implementation base class.\n", "HttpCookie": "\nAn HttpCookie object represents an HTTP cookie, which carries state\n information between server and user agent.\n", "HttpURLConnection": "\nA URLConnection with support for HTTP-specific features.\n", "IDN": "\nProvides methods to convert internationalized domain names (IDNs) between\n a normal Unicode representation and an ASCII Compatible Encoding (ACE) representation.\n", "Inet4Address": "\nThis class represents an Internet Protocol version 4 (IPv4) address.\n", "Inet6Address": "\nThis class represents an Internet Protocol version 6 (IPv6) address.\n", "InetAddress": "\nThis class represents an Internet Protocol (IP) address.\n", "InetSocketAddress": "\nThis class implements an IP Socket Address (IP address + port number)\n It can also be a pair (hostname + port number), in which case an attempt\n will be made to resolve the hostname.\n", "InterfaceAddress": "\nThis class represents a Network Interface address.\n", "JarURLConnection": "\nA URL Connection to a Java ARchive (JAR) file or an entry in a JAR\n file.\n", "MulticastSocket": "\nThe multicast datagram socket class is useful for sending\n and receiving IP multicast packets.\n", "NetPermission": "\nThis class is for various network permissions.\n", "NetworkInterface": "\nThis class represents a Network Interface made up of a name,\n and a list of IP addresses assigned to this interface.\n", "PasswordAuthentication": "\nThe class PasswordAuthentication is a data holder that is used by\n Authenticator.\n", "ProxySelector": "\nSelects the proxy server to use, if any, when connecting to the\n network resource referenced by a URL.\n", "ResponseCache": "\nRepresents implementations of URLConnection caches.\n", "SecureCacheResponse": "\nRepresents a cache response originally retrieved through secure\n means, such as TLS.\n", "ServerSocket": "\nThis class implements server sockets.\n", "Socket": "\nThis class implements client sockets (also called just\n \"sockets\").\n", "SocketAddress": "\nThis class represents a Socket Address with no protocol attachment.\n", "SocketImpl": "\nThe abstract class SocketImpl is a common superclass\n of all classes that actually implement sockets.\n", "SocketPermission": "\nThis class represents access to a network via sockets.\n", "StandardSocketOptions": "\nDefines the standard socket options.\n", "URI": "\nRepresents a Uniform Resource Identifier (URI) reference.\n", "URL": "\nClass URL represents a Uniform Resource\n Locator, a pointer to a \"resource\" on the World\n Wide Web.\n", "URLClassLoader": "\nThis class loader is used to load classes and resources from a search\n path of URLs referring to both JAR files and directories.\n", "URLConnection": "\nThe abstract class URLConnection is the superclass\n of all classes that represent a communications link between the\n application and a URL.\n", "URLDecoder": "\nUtility class for HTML form decoding.\n", "URLEncoder": "\nUtility class for HTML form encoding.\n", "URLPermission": "\nRepresents permission to access a resource or set of resources defined by a\n given url, and for a given set of user-settable request methods\n and request headers.\n", "URLStreamHandler": "\nThe abstract class URLStreamHandler is the common\n superclass for all stream protocol handlers.\n", "Authenticator.RequestorType": "\nThe type of the entity requesting authentication.\n", "Proxy.Type": "\nRepresents the proxy type.\n", "StandardProtocolFamily": "\nDefines the standard families of communication protocols.\n", "BindException": "\nSignals that an error occurred while attempting to bind a\n socket to a local address and port.\n", "ConnectException": "\nSignals that an error occurred while attempting to connect a\n socket to a remote address and port.\n/\nA ConnectException is thrown if a connection is refused\n to the remote host for a remote method call.\n", "HttpRetryException": "\nThrown to indicate that a HTTP request needs to be retried\n but cannot be retried automatically, due to streaming mode\n being enabled.\n", "MalformedURLException": "\nThrown to indicate that a malformed URL has occurred.\n", "NoRouteToHostException": "\nSignals that an error occurred while attempting to connect a\n socket to a remote address and port.\n", "PortUnreachableException": "\nSignals that an ICMP Port Unreachable message has been\n received on a connected datagram.\n", "ProtocolException": "\nThrown to indicate that there is an error in the underlying\n protocol, such as a TCP error.\n", "SocketException": "\nThrown to indicate that there is an error creating or accessing a Socket.\n", "SocketTimeoutException": "\nSignals that a timeout has occurred on a socket read or accept.\n", "UnknownHostException": "\nThrown to indicate that the IP address of a host could not be determined.\n/\nAn UnknownHostException is thrown if a\n java.net.UnknownHostException occurs while creating\n a connection to the remote host for a remote method call.\n", "UnknownServiceException": "\nThrown to indicate that an unknown service exception has\n occurred.\n", "URISyntaxException": "\nChecked exception thrown to indicate that a string could not be parsed as a\n URI reference.\n", "Buffer": "Position, limit, and capacity;\n           clear, flip, rewind, and mark/reset/\nA container for data of a specific primitive type.\n", "\nByteBuffer": "Get/put, compact, views; allocate, wrap", "\nMappedByteBuffer": "A byte buffer mapped to a file/A direct byte buffer mapped to a region of a file", "\nCharBuffer": "Get/put, compact; allocate, wrap", "\nDoubleBuffer": "Get/put, compact; allocate, wrap", "\nFloatBuffer": "Get/put, compact; allocate, wrap", "\nIntBuffer": "Get/put, compact; allocate, wrap", "\nLongBuffer": "Get/put, compact; allocate, wrap", "\nShortBuffer": "Get/put, compact; allocate, wrap", "ByteOrder": "Typesafe enumeration for byte orders/\nA typesafe enumeration for byte orders.\n", "ByteBuffer": "\nA byte buffer.\n", "CharBuffer": "\nA char buffer.\n", "DoubleBuffer": "\nA double buffer.\n", "FloatBuffer": "\nA float buffer.\n", "IntBuffer": "\nAn int buffer.\n", "LongBuffer": "\nA long buffer.\n", "MappedByteBuffer": "\nA direct byte buffer whose content is a memory-mapped region of a file.\n", "ShortBuffer": "\nA short buffer.\n", "BufferOverflowException": "\nUnchecked exception thrown when a relative put operation reaches\n the target buffer's limit.\n", "BufferUnderflowException": "\nUnchecked exception thrown when a relative get operation reaches\n the source buffer's limit.\n", "InvalidMarkException": "\nUnchecked exception thrown when an attempt is made to reset a buffer\n when its mark is not defined.\n", "ReadOnlyBufferException": "\nUnchecked exception thrown when a content-mutation method such as\n put or compact is invoked upon a read-only buffer.\n", "Channel": "A nexus for I/O operations/\nA nexus for I/O operations.\n", "\nReadableByteChannel": "Can read into a buffer", "\nScatteringByteChannel": "Can read into a sequence of buffers", "\nWritableByteChannel": "Can write from a buffer", "\nGatheringByteChannel": "Can write from a sequence of buffers", "\nByteChannel": "Can read/write to/from a buffer", "\nSeekableByteChannel": "A ByteChannel connected to an entity that contains a variable-length\n         sequence of bytes", "\nAsynchronousChannel": "Supports asynchronous I/O operations.", "\nAsynchronousByteChannel": "Can read and write bytes asynchronously", "\nNetworkChannel": "A channel to a network socket", "\nMulticastChannel": "Can join Internet Protocol (IP) multicast groups", "Channels": "Utility methods for channel/stream interoperation/\nUtility methods for channels and streams.\n/\nDefines static methods to create channels.\n", "\nFileChannel": "Reads, writes, maps, and manipulates files", "\nFileLock": "A lock on a (region of a) file", "SelectableChannel": "A channel that can be multiplexed/\nA channel that can be multiplexed via a Selector.\n", "\nDatagramChannel": "A channel to a datagram-oriented socket", "\nPipe.SinkChannel": "The write end of a pipe", "\nPipe.SourceChannel": "The read end of a pipe", "\nServerSocketChannel": "A channel to a stream-oriented listening socket", "\nSocketChannel": "A channel for a stream-oriented connecting socket", "Selector": "A multiplexor of selectable channels/\nA multiplexor of SelectableChannel objects.\n", "SelectionKey": "A token representing the registration of a channel\n     with a selector/\nA token representing the registration of a SelectableChannel with a\n Selector.\n", "Pipe": "Two channels that form a unidirectional pipe/\nA pair of channels that implements a unidirectional pipe.\n", "\nAsynchronousFileChannel": "An asynchronous channel for reading, writing, and manipulating a file", "\nAsynchronousSocketChannel": "An asynchronous channel to a stream-oriented connecting socket", "\nAsynchronousServerSocketChannel": "An asynchronous channel to a stream-oriented listening socket", "\nCompletionHandler": "A handler for consuming the result of an asynchronous operation", "\nAsynchronousChannelGroup": "A grouping of asynchronous channels for the purpose of resource sharing", "AsynchronousByteChannel": "\nAn asynchronous channel that can read and write bytes.\n", "AsynchronousChannel": "\nA channel that supports asynchronous I/O operations.\n", "ByteChannel": "\nA channel that can read and write bytes.\n", "CompletionHandler<V,\u200bA>": "\nA handler for consuming the result of an asynchronous I/O operation.\n", "GatheringByteChannel": "\nA channel that can write bytes from a sequence of buffers.\n", "InterruptibleChannel": "\nA channel that can be asynchronously closed and interrupted.\n", "MulticastChannel": "\nA network channel that supports Internet Protocol (IP) multicasting.\n", "NetworkChannel": "\nA channel to a network socket.\n", "ReadableByteChannel": "\nA channel that can read bytes.\n", "ScatteringByteChannel": "\nA channel that can read bytes into a sequence of buffers.\n", "SeekableByteChannel": "\nA byte channel that maintains a current position and allows the\n position to be changed.\n", "WritableByteChannel": "\nA channel that can write bytes.\n", "AsynchronousChannelGroup": "\nA grouping of asynchronous channels for the purpose of resource sharing.\n", "AsynchronousFileChannel": "\nAn asynchronous channel for reading, writing, and manipulating a file.\n", "AsynchronousServerSocketChannel": "\nAn asynchronous channel for stream-oriented listening sockets.\n", "AsynchronousSocketChannel": "\nAn asynchronous channel for stream-oriented connecting sockets.\n", "DatagramChannel": "\nA selectable channel for datagram-oriented sockets.\n", "FileChannel": "\nA channel for reading, writing, mapping, and manipulating a file.\n", "FileChannel.MapMode": "\nA typesafe enumeration for file-mapping modes.\n", "FileLock": "\nA token representing a lock on a region of a file.\n", "MembershipKey": "\nA token representing the membership of an Internet Protocol (IP) multicast\n group.\n", "Pipe.SinkChannel": "\nA channel representing the writable end of a Pipe.\n", "Pipe.SourceChannel": "\nA channel representing the readable end of a Pipe.\n", "ServerSocketChannel": "\nA selectable channel for stream-oriented listening sockets.\n", "SocketChannel": "\nA selectable channel for stream-oriented connecting sockets.\n", "AcceptPendingException": "\nUnchecked exception thrown when an attempt is made to initiate an accept\n operation on a channel and a previous accept operation has not completed.\n", "AlreadyBoundException": "\nUnchecked exception thrown when an attempt is made to bind the socket a\n network oriented channel that is already bound.\n/\nAn AlreadyBoundException is thrown if an attempt\n is made to bind an object in the registry to a name that already\n has an associated binding.\n", "AlreadyConnectedException": "\nUnchecked exception thrown when an attempt is made to connect a SocketChannel that is already connected.\n", "AsynchronousCloseException": "\nChecked exception received by a thread when another thread closes the\n channel or the part of the channel upon which it is blocked in an I/O\n operation.\n", "CancelledKeyException": "\nUnchecked exception thrown when an attempt is made to use\n a selection key that is no longer valid.\n", "ClosedByInterruptException": "\nChecked exception received by a thread when another thread interrupts it\n while it is blocked in an I/O operation upon a channel.\n", "ClosedChannelException": "\nChecked exception thrown when an attempt is made to invoke or complete an\n I/O operation upon channel that is closed, or at least closed to that\n operation.\n", "ClosedSelectorException": "\nUnchecked exception thrown when an attempt is made to invoke an I/O\n operation upon a closed selector.\n", "ConnectionPendingException": "\nUnchecked exception thrown when an attempt is made to connect a SocketChannel for which a non-blocking connection operation is already in\n progress.\n", "FileLockInterruptionException": "\nChecked exception received by a thread when another thread interrupts it\n while it is waiting to acquire a file lock.\n", "IllegalBlockingModeException": "\nUnchecked exception thrown when a blocking-mode-specific operation\n is invoked upon a channel in the incorrect blocking mode.\n", "IllegalChannelGroupException": "\nUnchecked exception thrown when an attempt is made to open a channel\n in a group that was not created by the same provider.\n", "IllegalSelectorException": "\nUnchecked exception thrown when an attempt is made to register a channel\n with a selector that was not created by the provider that created the\n channel.\n", "InterruptedByTimeoutException": "\nChecked exception received by a thread when a timeout elapses before an\n asynchronous operation completes.\n", "NoConnectionPendingException": "\nUnchecked exception thrown when the finishConnect method of a SocketChannel is invoked without first\n successfully invoking its connect method.\n", "NonReadableChannelException": "\nUnchecked exception thrown when an attempt is made to read\n from a channel that was not originally opened for reading.\n", "NonWritableChannelException": "\nUnchecked exception thrown when an attempt is made to write\n to a channel that was not originally opened for writing.\n", "NotYetBoundException": "\nUnchecked exception thrown when an attempt is made to invoke an I/O\n operation upon a server socket channel that is not yet bound.\n", "NotYetConnectedException": "\nUnchecked exception thrown when an attempt is made to invoke an I/O\n operation upon a socket channel that is not yet connected.\n", "OverlappingFileLockException": "\nUnchecked exception thrown when an attempt is made to acquire a lock on a\n region of a file that overlaps a region already locked by the same Java\n virtual machine, or when another thread is already waiting to lock an\n overlapping region of the same file.\n", "ReadPendingException": "\nUnchecked exception thrown when an attempt is made to read from an\n asynchronous socket channel and a previous read has not completed.\n", "ShutdownChannelGroupException": "\nUnchecked exception thrown when an attempt is made to construct a channel in \n a group that is shutdown or the completion handler for an I/O operation \n cannot be invoked because the channel group has terminated.\n", "UnresolvedAddressException": "\nUnchecked exception thrown when an attempt is made to invoke a network\n operation upon an unresolved socket address.\n", "UnsupportedAddressTypeException": "\nUnchecked exception thrown when an attempt is made to bind or connect\n to a socket address of a type that is not supported.\n", "WritePendingException": "\nUnchecked exception thrown when an attempt is made to write to an\n asynchronous socket channel and a previous write has not completed.\n", "AbstractInterruptibleChannel": "\nBase implementation class for interruptible channels.\n", "AbstractSelectableChannel": "\nBase implementation class for selectable channels.\n", "AbstractSelectionKey": "\nBase implementation class for selection keys.\n", "AbstractSelector": "\nBase implementation class for selectors.\n", "Charset": "A named mapping between characters and bytes/\nA named mapping between sequences of sixteen-bit Unicode code units and sequences of\n bytes.\n", "CharsetDecoder": "Decodes bytes into characters/\nAn engine that can transform a sequence of bytes in a specific charset into a sequence of\n sixteen-bit Unicode characters.\n", "CharsetEncoder": "Encodes characters into bytes/\nAn engine that can transform a sequence of sixteen-bit Unicode characters into a sequence of\n bytes in a specific charset.\n", "CoderResult": "Describes coder results/\nA description of the result state of a coder.\n", "CodingErrorAction": "Describes actions to take when coding errors are detected/\nA typesafe enumeration for coding-error actions.\n", "StandardCharsets": "\nConstant definitions for the standard Charsets.\n", "CharacterCodingException": "\nChecked exception thrown when a character encoding\n or decoding error occurs.\n", "IllegalCharsetNameException": "\nUnchecked exception thrown when a string that is not a\n legal charset name is used as such.\n", "MalformedInputException": "\nChecked exception thrown when an input byte sequence is not legal for given\n charset, or an input character sequence is not a legal sixteen-bit Unicode\n sequence.\n", "UnmappableCharacterException": "\nChecked exception thrown when an input character (or byte) sequence\n is valid but cannot be mapped to an output byte (or character)\n sequence.\n", "UnsupportedCharsetException": "\nUnchecked exception thrown when no support is available\n for a requested charset.\n", "CoderMalfunctionError": "\nError thrown when the decodeLoop method of\n a CharsetDecoder, or the encodeLoop method of a CharsetEncoder, throws an unexpected\n exception.\n", "CopyOption": "\nAn object that configures how to copy or move a file.\n", "DirectoryStream<T>": "\nAn object to iterate over the entries in a directory.\n", "DirectoryStream.Filter<T>": "\nAn interface that is implemented by objects that decide if a directory\n entry should be accepted or filtered.\n", "FileVisitor<T>": "\nA visitor of files.\n", "OpenOption": "\nAn object that configures how to open or create a file.\n", "Path": "\nAn object that may be used to locate a file in a file system.\n", "PathMatcher": "\nAn interface that is implemented by objects that perform match operations on\n paths.\n", "SecureDirectoryStream<T>": "\nA DirectoryStream that defines operations on files that are located\n relative to an open directory.\n", "Watchable": "\nAn object that may be registered with a watch service so that it can be\n watched for changes and events.\n", "WatchEvent<T>": "\nAn event or a repeated event for an object that is registered with a WatchService.\n", "WatchEvent.Kind<T>": "\nAn event kind, for the purposes of identification.\n", "WatchEvent.Modifier": "\nAn event modifier that qualifies how a Watchable is registered\n with a WatchService.\n", "WatchKey": "\nA token representing the registration of a watchable object\n with a WatchService.\n", "WatchService": "\nA watch service that watches registered objects for changes and\n events.\n", "Files": "\nThis class consists exclusively of static methods that operate on files,\n directories, or other types of files.\n", "FileStore": "\nStorage for files.\n", "FileSystem": "\nProvides an interface to a file system and is the factory for objects to\n access files and other objects in the file system.\n", "FileSystems": "\nFactory methods for file systems.\n", "LinkPermission": "\nThe Permission class for link creation operations.\n", "Paths": "\nThis class consists exclusively of static methods that return a Path\n by converting a path string or URI.\n", "SimpleFileVisitor<T>": "\nA simple visitor of files with default behavior to visit all files and to\n re-throw I/O errors.\n", "StandardWatchEventKinds": "\nDefines the standard event kinds.\n", "AccessMode": "\nDefines access modes used to test the accessibility of a file.\n", "FileVisitOption": "\nDefines the file tree traversal options.\n", "FileVisitResult": "\nThe result type of a FileVisitor.\n", "LinkOption": "\nDefines the options as to how symbolic links are handled.\n", "StandardCopyOption": "\nDefines the standard copy options.\n", "StandardOpenOption": "\nDefines the standard open options.\n", "AccessDeniedException": "\nChecked exception thrown when a file system operation is denied, typically\n due to a file permission or other access check.\n", "AtomicMoveNotSupportedException": "\nChecked exception thrown when a file cannot be moved as an atomic file system\n operation.\n", "ClosedDirectoryStreamException": "\nUnchecked exception thrown when an attempt is made to invoke an operation on\n a directory stream that is closed.\n", "ClosedFileSystemException": "\nUnchecked exception thrown when an attempt is made to invoke an operation on\n a file and the file system is closed.\n", "ClosedWatchServiceException": "\nUnchecked exception thrown when an attempt is made to invoke an operation on\n a watch service that is closed.\n", "DirectoryIteratorException": "\nRuntime exception thrown if an I/O error is encountered when iterating over\n the entries in a directory.\n", "DirectoryNotEmptyException": "\nChecked exception thrown when a file system operation fails because a\n directory is not empty.\n", "FileAlreadyExistsException": "\nChecked exception thrown when an attempt is made to create a file or\n directory and a file of that name already exists.\n", "FileSystemAlreadyExistsException": "\nRuntime exception thrown when an attempt is made to create a file system that\n already exists.\n", "FileSystemException": "\nThrown when a file system operation fails on one or two files.\n", "FileSystemLoopException": "\nChecked exception thrown when a file system loop, or cycle, is encountered.\n", "FileSystemNotFoundException": "\nRuntime exception thrown when a file system cannot be found.\n", "InvalidPathException": "\nUnchecked exception thrown when path string cannot be converted into a\n Path because the path string contains invalid characters, or\n the path string is invalid for other file system specific reasons.\n", "NoSuchFileException": "\nChecked exception thrown when an attempt is made to access a file that does\n not exist.\n", "NotDirectoryException": "\nChecked exception thrown when a file system operation, intended for a\n directory, fails because the file is not a directory.\n", "NotLinkException": "\nChecked exception thrown when a file system operation fails because a file\n is not a symbolic link.\n", "ProviderMismatchException": "\nUnchecked exception thrown when an attempt is made to invoke a method on an\n object created by one file system provider with a parameter created by a\n different file system provider.\n", "ProviderNotFoundException": "\nRuntime exception thrown when a provider of the required type cannot be found.\n", "ReadOnlyFileSystemException": "\nUnchecked exception thrown when an attempt is made to update an object\n associated with a read-only FileSystem.\n", "AttributeView": "Can read or update non-opaque values associated with objects in a file system/\nAn object that provides a read-only or updatable view of non-opaque\n values associated with an object in a filesystem.\n", "\nFileAttributeView": "Can read or update file attributes", "\n\nBasicFileAttributeView": "Can read or update a basic set of file attributes", "\n\nPosixFileAttributeView": "Can read or update POSIX defined file attributes", "\n\nDosFileAttributeView": "Can read or update FAT file attributes", "\n\nFileOwnerAttributeView": "Can read or update the owner of a file", "\n\nAclFileAttributeView": "Can read or update Access Control Lists", "\n\nUserDefinedFileAttributeView": "Can read or update user-defined file attributes", "\nFileStoreAttributeView": "Can read or update file system attributes", "AclFileAttributeView": "\nA file attribute view that supports reading or updating a file's Access\n Control Lists (ACL) or file owner attributes.\n", "BasicFileAttributes": "\nBasic attributes associated with a file in a file system.\n", "BasicFileAttributeView": "\nA file attribute view that provides a view of a basic set of file\n attributes common to many file systems.\n", "DosFileAttributes": "\nFile attributes associated with a file in a file system that supports\n legacy \"DOS\" attributes.\n", "DosFileAttributeView": "\nA file attribute view that provides a view of the legacy \"DOS\" file attributes.\n", "FileAttribute<T>": "\nAn object that encapsulates the value of a file attribute that can be set\n atomically when creating a new file or directory by invoking the createFile or createDirectory methods.\n", "FileAttributeView": "\nAn attribute view that is a read-only or updatable view of non-opaque\n values associated with a file in a filesystem.\n", "FileOwnerAttributeView": "\nA file attribute view that supports reading or updating the owner of a file.\n", "FileStoreAttributeView": "\nAn attribute view that is a read-only or updatable view of the attributes of\n a FileStore.\n", "GroupPrincipal": "\nA UserPrincipal representing a group identity, used to\n determine access rights to objects in a file system.\n", "PosixFileAttributes": "\nFile attributes associated with files on file systems used by operating systems\n that implement the Portable Operating System Interface (POSIX) family of\n standards.\n", "PosixFileAttributeView": "\nA file attribute view that provides a view of the file attributes commonly\n associated with files on file systems used by operating systems that implement\n the Portable Operating System Interface (POSIX) family of standards.\n", "UserDefinedFileAttributeView": "\nA file attribute view that provides a view of a file's user-defined\n attributes, sometimes known as extended attributes.\n", "UserPrincipal": "\nA Principal representing an identity used to determine access rights\n to objects in a file system.\n/\nA user principal identified by a username or account name.\n", "AclEntry": "\nAn entry in an access control list (ACL).\n/Deprecated, for removal: This API element is subject to removal in a future version.\nThis class is deprecated and subject to removal in a future\n     version of Java SE.\n", "AclEntry.Builder": "\nA builder of AclEntry objects.\n", "FileTime": "\nRepresents the value of a file's time stamp attribute.\n", "PosixFilePermissions": "\nThis class consists exclusively of static methods that operate on sets of\n PosixFilePermission objects.\n", "UserPrincipalLookupService": "\nAn object to lookup user and group principals by name.\n", "AclEntryFlag": "\nDefines the flags for used by the flags component of an ACL entry.\n", "AclEntryPermission": "\nDefines the permissions for use with the permissions component of an ACL\n entry.\n", "AclEntryType": "\nA typesafe enumeration of the access control entry types.\n", "PosixFilePermission": "\nDefines the bits for use with the permissions attribute.\n", "UserPrincipalNotFoundException": "\nChecked exception thrown when a lookup of UserPrincipal fails because\n the principal does not exist.\n", "AlgorithmConstraints": "\nThis interface specifies constraints for cryptographic algorithms,\n keys (key sizes), and other algorithm parameters.\n", "Certificate": "Deprecated, for removal: This API element is subject to removal in a future version.\nThis class is deprecated and subject to removal in a future\n     version of Java SE.\n/\nAbstract class for managing a variety of identity certificates.\n/Deprecated.\nUse the classes in java.security.cert instead.\n", "DomainCombiner": "\nA DomainCombiner provides a means to dynamically\n update the ProtectionDomains associated with the current\n AccessControlContext.\n", "Guard": "\n This interface represents a guard, which is an object that is used\n to protect access to another object.\n", "Key": "\nThe Key interface is the top-level interface for all keys.\n", "KeyStore.Entry": "\nA marker interface for KeyStore entry types.\n", "KeyStore.Entry.Attribute": "\nAn attribute associated with a keystore entry.\n", "KeyStore.LoadStoreParameter": "\nA marker interface for KeyStore\nload\n and\n store\n parameters.\n", "KeyStore.ProtectionParameter": "\nA marker interface for keystore protection parameters.\n", "Policy.Parameters": "\nThis represents a marker interface for Policy parameters.\n", "Principal": "\nThis interface represents the abstract notion of a principal, which\n can be used to represent any entity, such as an individual, a\n corporation, and a login id.\n", "PrivateKey": "\nA private key.\n", "PrivilegedAction<T>": "\nA computation to be performed with privileges enabled.\n", "PrivilegedExceptionAction<T>": "\nA computation to be performed with privileges enabled, that throws one or\n more checked exceptions.\n", "PublicKey": "\nA public key.\n", "SecureRandomParameters": "\nA marker interface for parameters used in various SecureRandom\n methods.\n", "AccessControlContext": "\nAn AccessControlContext is used to make system resource access decisions\n based on the context it encapsulates.\n", "AccessController": "\n The AccessController class is used for access control operations\n and decisions.\n", "AlgorithmParameterGenerator": "\nThe AlgorithmParameterGenerator class is used to generate a\n set of\n parameters to be used with a certain algorithm.\n", "AlgorithmParameterGeneratorSpi": "\nThis class defines the Service Provider Interface (SPI)\n for the AlgorithmParameterGenerator class, which\n is used to generate a set of parameters to be used with a certain algorithm.\n", "AlgorithmParameters": "\nThis class is used as an opaque representation of cryptographic parameters.\n", "AlgorithmParametersSpi": "\nThis class defines the Service Provider Interface (SPI)\n for the AlgorithmParameters class, which is used to manage\n algorithm parameters.\n", "AllPermission": "\nThe AllPermission is a permission that implies all other permissions.\n", "AuthProvider": "\nThis class defines login and logout methods for a provider.\n", "BasicPermission": "\nThe BasicPermission class extends the Permission class, and\n can be used as the base class for permissions that want to\n follow the same naming convention as BasicPermission.\n", "CodeSigner": "\nThis class encapsulates information about a code signer.\n", "CodeSource": "\nThis class extends the concept of a codebase to\n encapsulate not only the location (URL) but also the certificate chains\n that were used to verify signed code originating from that location.\n", "DigestInputStream": "\nA transparent stream that updates the associated message digest using\n the bits going through the stream.\n", "DigestOutputStream": "\nA transparent stream that updates the associated message digest using\n the bits going through the stream.\n", "DomainLoadStoreParameter": "\nConfiguration data that specifies the keystores in a keystore domain.\n", "DrbgParameters": "\nThis class specifies the parameters used by a DRBG (Deterministic\n Random Bit Generator).\n", "DrbgParameters.Instantiation": "\nDRBG parameters for instantiation.\n", "DrbgParameters.NextBytes": "\nDRBG parameters for random bits generation.\n", "DrbgParameters.Reseed": "\nDRBG parameters for reseed.\n", "GuardedObject": "\nA GuardedObject is an object that is used to protect access to\n another object.\n", "Identity": "Deprecated, for removal: This API element is subject to removal in a future version.\nThis class is deprecated and subject to removal in a future\n     version of Java SE.\n", "IdentityScope": "Deprecated, for removal: This API element is subject to removal in a future version.\nThis class is deprecated and subject to removal in a future\n     version of Java SE.\n", "KeyFactory": "\nKey factories are used to convert keys (opaque\n cryptographic keys of type Key) into key specifications\n (transparent representations of the underlying key material), and vice\n versa.\n", "KeyFactorySpi": "\nThis class defines the Service Provider Interface (SPI)\n for the KeyFactory class.\n", "KeyPair": "\nThis class is a simple holder for a key pair (a public key and a\n private key).\n", "KeyPairGenerator": "\nThe KeyPairGenerator class is used to generate pairs of\n public and private keys.\n", "KeyPairGeneratorSpi": "\n This class defines the Service Provider Interface (SPI)\n for the KeyPairGenerator class, which is used to generate\n pairs of public and private keys.\n", "KeyRep": "\nStandardized representation for serialized Key objects.\n", "KeyStore": "\nThis class represents a storage facility for cryptographic\n keys and certificates.\n", "KeyStore.Builder": "\nA description of a to-be-instantiated KeyStore object.\n", "KeyStore.CallbackHandlerProtection": "\nA ProtectionParameter encapsulating a CallbackHandler.\n", "KeyStore.PasswordProtection": "\nA password-based implementation of ProtectionParameter.\n", "KeyStore.PrivateKeyEntry": "\nA KeyStore entry that holds a PrivateKey\n and corresponding certificate chain.\n", "KeyStore.SecretKeyEntry": "\nA KeyStore entry that holds a SecretKey.\n", "KeyStore.TrustedCertificateEntry": "\nA KeyStore entry that holds a trusted\n Certificate.\n", "KeyStoreSpi": "\nThis class defines the Service Provider Interface (SPI)\n for the KeyStore class.\n", "MessageDigest": "\nThis MessageDigest class provides applications the functionality of a\n message digest algorithm, such as SHA-1 or SHA-256.\n", "MessageDigestSpi": "\nThis class defines the Service Provider Interface (SPI)\n for the MessageDigest class, which provides the functionality\n of a message digest algorithm, such as MD5 or SHA.\n", "Permission": "\nAbstract class for representing access to a system resource.\n/Deprecated, for removal: This API element is subject to removal in a future version.\nThis class is deprecated and subject to removal in a future\n     version of Java SE.\n", "PermissionCollection": "\nAbstract class representing a collection of Permission objects.\n", "Permissions": "\nThis class represents a heterogeneous collection of Permissions.\n", "PKCS12Attribute": "\nAn attribute associated with a PKCS12 keystore entry.\n", "Policy": "\nA Policy object is responsible for determining whether code executing\n in the Java runtime environment has permission to perform a\n security-sensitive operation.\n", "PolicySpi": "\nThis class defines the Service Provider Interface (SPI)\n for the Policy class.\n", "ProtectionDomain": "\nThe ProtectionDomain class encapsulates the characteristics of a domain,\n which encloses a set of classes whose instances are granted a set\n of permissions when being executed on behalf of a given set of Principals.\n", "Provider.Service": "\nThe description of a security service.\n/static class\u00a0 \nThe description of a security service.\n/static class\u00a0 \nThe description of a security service.\n", "SecureClassLoader": "\nThis class extends ClassLoader with additional support for defining\n classes with an associated code source and permissions which are\n retrieved by the system policy by default.\n", "SecureRandom": "\nThis class provides a cryptographically strong random number\n generator (RNG).\n", "SecureRandomSpi": "\nThis class defines the Service Provider Interface (SPI)\n for the SecureRandom class.\n", "Security": "\nThis class centralizes all security properties and common security\n methods.\n", "SecurityPermission": "\nThis class is for security permissions.\n", "Signature": "\nThe Signature class is used to provide applications the functionality\n of a digital signature algorithm.\n", "SignatureSpi": "\nThis class defines the Service Provider Interface (SPI)\n for the Signature class, which is used to provide the\n functionality of a digital signature algorithm.\n", "SignedObject": "\n SignedObject is a class for the purpose of creating authentic\n runtime objects whose integrity cannot be compromised without being\n detected.\n", "Signer": "Deprecated, for removal: This API element is subject to removal in a future version.\nThis class is deprecated and subject to removal in a future\n     version of Java SE.\n", "Timestamp": "\nThis class encapsulates information about a signed timestamp.\n/\nA thin wrapper around java.util.Date that allows\n the JDBC API to identify this as an SQL TIMESTAMP value.\n/\nEvent field annotation, specifies that the value is a point in time.\n", "UnresolvedPermission": "\nThe UnresolvedPermission class is used to hold Permissions that\n were \"unresolved\" when the Policy was initialized.\n", "URIParameter": "\nA parameter that contains a URI pointing to data intended for a\n PolicySpi or ConfigurationSpi implementation.\n", "CryptoPrimitive": "\nAn enumeration of cryptographic primitives.\n", "DrbgParameters.Capability": "\nThe reseedable and prediction resistance capabilities of a DRBG.\n", "KeyRep.Type": "\nKey type.\n", "AccessControlException": "\n This exception is thrown by the AccessController to indicate\n that a requested access (to a critical system resource such as the\n file system or the network) is denied.\n", "DigestException": "\nThis is the generic Message Digest exception.\n", "GeneralSecurityException": "\nThe GeneralSecurityException class is a generic\n security exception class that provides type safety for all the\n security-related exception classes that extend from it.\n", "InvalidAlgorithmParameterException": "\nThis is the exception for invalid or inappropriate algorithm parameters.\n", "InvalidKeyException": "\nThis is the exception for invalid Keys (invalid encoding, wrong\n length, uninitialized, etc).\n/\nThis runtime exception is thrown to indicate that a method parameter which was expected to be\n an item name of a composite data or a row index of a tabular data is not valid.\n", "InvalidParameterException": "\nThis exception, designed for use by the JCA/JCE engine classes,\n is thrown when an invalid parameter is passed\n to a method.\n", "KeyException": "\nThis is the basic key exception.\n", "KeyManagementException": "\nThis is the general key management exception for all operations\n dealing with key management.\n", "KeyStoreException": "\nThis is the generic KeyStore exception.\n", "NoSuchAlgorithmException": "\nThis exception is thrown when a particular cryptographic algorithm is\n requested but is not available in the environment.\n", "NoSuchProviderException": "\nThis exception is thrown when a particular security provider is\n requested but is not available in the environment.\n", "PrivilegedActionException": "\nThis exception is thrown by\n doPrivileged(PrivilegedExceptionAction) and\n doPrivileged(PrivilegedExceptionAction,\n AccessControlContext context) to indicate\n that the action being performed threw a checked exception.\n", "ProviderException": "\nA runtime exception for Provider exceptions (such as\n misconfiguration errors or unrecoverable internal errors),\n which may be subclassed by Providers to\n throw specialized, provider-specific runtime errors.\n", "SignatureException": "\nThis is the generic Signature exception.\n", "UnrecoverableEntryException": "\nThis exception is thrown if an entry in the keystore cannot be recovered.\n", "UnrecoverableKeyException": "\nThis exception is thrown if a key in the keystore cannot be recovered.\n", "Acl": "Deprecated, for removal: This API element is subject to removal in a future version.\nThis class is deprecated and subject to removal in a future\n     version of Java SE.\n", "Group": "Deprecated, for removal: This API element is subject to removal in a future version.\nThis class is deprecated and subject to removal in a future\n     version of Java SE.\n", "Owner": "Deprecated, for removal: This API element is subject to removal in a future version.\nThis class is deprecated and subject to removal in a future\n     version of Java SE.\n", "AclNotFoundException": "Deprecated, for removal: This API element is subject to removal in a future version.\nThis class is deprecated and subject to removal in a future\n     version of Java SE.\n", "LastOwnerException": "Deprecated, for removal: This API element is subject to removal in a future version.\nThis class is deprecated and subject to removal in a future\n     version of Java SE.\n", "NotOwnerException": "Deprecated, for removal: This API element is subject to removal in a future version.\nThis class is deprecated and subject to removal in a future\n     version of Java SE.\n", "CertPathBuilderResult": "\nA specification of the result of a certification path builder algorithm.\n", "CertPathChecker": "\nPerforms one or more checks on each Certificate of a\n CertPath.\n", "CertPathParameters": "\nA specification of certification path algorithm parameters.\n", "CertPathValidatorException.Reason": "\nThe reason the validation algorithm failed.\n", "CertPathValidatorResult": "\nA specification of the result of a certification path validator algorithm.\n", "CertSelector": "\nA selector that defines a set of criteria for selecting\n Certificates.\n", "CertStoreParameters": "\nA specification of CertStore parameters.\n", "CRLSelector": "\nA selector that defines a set of criteria for selecting CRLs.\n", "Extension": "\nThis interface represents an X.509 extension.\n", "PolicyNode": "\nAn immutable valid policy tree node as defined by the PKIX certification\n path validation algorithm.\n", "X509Extension": "\nInterface for an X.509 extension.\n", "Certificate.CertificateRep": "\nAlternate Certificate class for serialization.\n", "CertificateFactory": "\nThis class defines the functionality of a certificate factory, which is\n used to generate certificate, certification path (CertPath)\n and certificate revocation list (CRL) objects from their encodings.\n", "CertificateFactorySpi": "\nThis class defines the Service Provider Interface (SPI)\n for the CertificateFactory class.\n", "CertPath": "\nAn immutable sequence of certificates (a certification path).\n", "CertPath.CertPathRep": "\nAlternate CertPath class for serialization.\n", "CertPathBuilder": "\nA class for building certification paths (also known as certificate chains).\n", "CertPathBuilderSpi": "\nThe Service Provider Interface (SPI)\n for the CertPathBuilder class.\n", "CertPathValidator": "\nA class for validating certification paths (also known as certificate\n chains).\n", "CertPathValidatorSpi": "\nThe Service Provider Interface (SPI)\n for the CertPathValidator class.\n", "CertStore": "\nA class for retrieving Certificates and CRLs\n from a repository.\n", "CertStoreSpi": "\nThe Service Provider Interface (SPI)\n for the CertStore class.\n", "CollectionCertStoreParameters": "\nParameters used as input for the Collection CertStore\n algorithm.\n", "CRL": "\nThis class is an abstraction of certificate revocation lists (CRLs) that\n have different formats but important common uses.\n", "LDAPCertStoreParameters": "\nParameters used as input for the LDAP CertStore algorithm.\n", "PKIXBuilderParameters": "\nParameters used as input for the PKIX CertPathBuilder\n algorithm.\n", "PKIXCertPathBuilderResult": "\nThis class represents the successful result of the PKIX certification\n path builder algorithm.\n", "PKIXCertPathChecker": "\nAn abstract class that performs one or more checks on an\n X509Certificate.\n", "PKIXCertPathValidatorResult": "\nThis class represents the successful result of the PKIX certification\n path validation algorithm.\n", "PKIXParameters": "\nParameters used as input for the PKIX CertPathValidator\n algorithm.\n", "PKIXRevocationChecker": "\nA PKIXCertPathChecker for checking the revocation status of\n certificates with the PKIX algorithm.\n", "PolicyQualifierInfo": "\nAn immutable policy qualifier represented by the ASN.1 PolicyQualifierInfo\n structure.\n", "TrustAnchor": "\nA trust anchor or most-trusted Certification Authority (CA).\n", "URICertStoreParameters": "\nParameters used as input for CertStore algorithms which use\n information contained in a URI to retrieve certificates and CRLs.\n", "X509Certificate": "\n\n Abstract class for X.509 certificates.\n/Deprecated.\nUse the classes in java.security.cert instead.\n", "X509CertSelector": "\nA CertSelector that selects X509Certificates that\n match all specified criteria.\n", "X509CRL": "\n\n Abstract class for an X.509 Certificate Revocation List (CRL).\n", "X509CRLEntry": "\nAbstract class for a revoked certificate in a CRL (Certificate\n Revocation List).\n", "X509CRLSelector": "\nA CRLSelector that selects X509CRLs that\n match all specified criteria.\n", "CertPathValidatorException.BasicReason": "\nThe BasicReason enumerates the potential reasons that a certification\n path of any type may be invalid.\n", "CRLReason": "\nThe CRLReason enumeration specifies the reason that a certificate\n is revoked, as defined in \n RFC 5280: Internet X.509 Public Key Infrastructure Certificate and CRL\n Profile.\n", "PKIXReason": "\nThe PKIXReason enumerates the potential PKIX-specific reasons\n that an X.509 certification path may be invalid according to the PKIX\n (RFC 5280) standard.\n", "PKIXRevocationChecker.Option": "\nVarious revocation options that can be specified for the revocation\n checking mechanism.\n", "CertificateEncodingException": "\nCertificate Encoding Exception.\n/Deprecated.\nUse the classes in java.security.cert instead.\n", "CertificateException": "\nThis exception indicates one of a variety of certificate problems.\n/Deprecated.\nUse the classes in java.security.cert instead.\n", "CertificateExpiredException": "\nCertificate Expired Exception.\n/Deprecated.\nUse the classes in java.security.cert instead.\n", "CertificateNotYetValidException": "\nCertificate is not yet valid exception.\n/Deprecated.\nUse the classes in java.security.cert instead.\n", "CertificateParsingException": "\nCertificate Parsing Exception.\n/Deprecated.\nUse the classes in java.security.cert instead.\n", "CertificateRevokedException": "\nAn exception that indicates an X.509 certificate is revoked.\n", "CertPathBuilderException": "\nAn exception indicating one of a variety of problems encountered when\n building a certification path with a CertPathBuilder.\n", "CertPathValidatorException": "\nAn exception indicating one of a variety of problems encountered when\n validating a certification path.\n", "CertStoreException": "\nAn exception indicating one of a variety of problems retrieving\n certificates and CRLs from a CertStore.\n", "CRLException": "\nCRL (Certificate Revocation List) Exception.\n", "DSAKey": "\nThe interface to a DSA public or private key.\n", "DSAKeyPairGenerator": "\nAn interface to an object capable of generating DSA key pairs.\n", "DSAParams": "\nInterface to a DSA-specific set of key parameters, which defines a\n DSA key family.\n", "DSAPrivateKey": "\nThe standard interface to a DSA private key.\n", "DSAPublicKey": "\nThe interface to a DSA public key.\n", "ECKey": "\nThe interface to an elliptic curve (EC) key.\n", "ECPrivateKey": "\nThe interface to an elliptic curve (EC) private key.\n", "ECPublicKey": "\nThe interface to an elliptic curve (EC) public key.\n", "RSAKey": "\nThe interface to a public or private key in\n PKCS#1 v2.2 standard,\n such as those for RSA, or RSASSA-PSS algorithms.\n", "RSAMultiPrimePrivateCrtKey": "\nThe interface to an RSA multi-prime private key, as defined in the\n PKCS#1 v2.2 standard,\n using the Chinese Remainder Theorem (CRT) information values.\n", "RSAPrivateCrtKey": "\nThe interface to an RSA private key, as defined in the\n PKCS#1 v2.2 standard,\n using the Chinese Remainder Theorem (CRT) information values.\n", "RSAPrivateKey": "\nThe interface to an RSA private key.\n", "RSAPublicKey": "\nThe interface to an RSA public key.\n", "XECKey": "\nAn interface for an elliptic curve public/private key as defined by\n RFC 7748.\n", "XECPrivateKey": "\nAn interface for an elliptic curve private key as defined by RFC 7748.\n", "XECPublicKey": "\nAn interface for an elliptic curve public key as defined by RFC 7748.\n", "AlgorithmParameterSpec": "\nA (transparent) specification of cryptographic parameters.\n", "ECField": "\nThis interface represents an elliptic curve (EC) finite field.\n", "KeySpec": "\nA (transparent) specification of the key material\n that constitutes a cryptographic key.\n", "DSAGenParameterSpec": "\nThis immutable class specifies the set of parameters used for\n generating DSA parameters as specified in\n FIPS 186-3 Digital Signature Standard (DSS).\n", "DSAParameterSpec": "\nThis class specifies the set of parameters used with the DSA algorithm.\n", "DSAPrivateKeySpec": "\nThis class specifies a DSA private key with its associated parameters.\n", "DSAPublicKeySpec": "\nThis class specifies a DSA public key with its associated parameters.\n", "ECFieldF2m": "\nThis immutable class defines an elliptic curve (EC)\n characteristic 2 finite field.\n", "ECFieldFp": "\nThis immutable class defines an elliptic curve (EC) prime\n finite field.\n", "ECGenParameterSpec": "\nThis immutable class specifies the set of parameters used for\n generating elliptic curve (EC) domain parameters.\n", "ECParameterSpec": "\nThis immutable class specifies the set of domain parameters\n used with elliptic curve cryptography (ECC).\n", "ECPoint": "\nThis immutable class represents a point on an elliptic curve (EC)\n in affine coordinates.\n", "ECPrivateKeySpec": "\nThis immutable class specifies an elliptic curve private key with\n its associated parameters.\n", "ECPublicKeySpec": "\nThis immutable class specifies an elliptic curve public key with\n its associated parameters.\n", "EllipticCurve": "\nThis immutable class holds the necessary values needed to represent\n an elliptic curve.\n", "EncodedKeySpec": "\nThis class represents a public or private key in encoded format.\n", "MGF1ParameterSpec": "\nThis class specifies the set of parameters used with mask generation\n function MGF1 in OAEP Padding and RSASSA-PSS signature scheme, as\n defined in the\n PKCS#1 v2.2 standard.\n", "NamedParameterSpec": "\nThis class is used to specify any algorithm parameters that are determined\n by a standard name.\n", "PKCS8EncodedKeySpec": "\nThis class represents the ASN.1 encoding of a private key,\n encoded according to the ASN.1 type PrivateKeyInfo.\n", "PSSParameterSpec": "\nThis class specifies a parameter spec for RSASSA-PSS signature scheme,\n as defined in the\n PKCS#1 v2.2 standard.\n", "RSAKeyGenParameterSpec": "\nThis class specifies the set of parameters used to generate an RSA\n key pair.\n", "RSAMultiPrimePrivateCrtKeySpec": "\nThis class specifies an RSA multi-prime private key, as defined in the\n PKCS#1 v2.2 standard\n using the Chinese Remainder Theorem (CRT) information values\n for efficiency.\n", "RSAOtherPrimeInfo": "\nThis class represents the triplet (prime, exponent, and coefficient)\n inside RSA's OtherPrimeInfo structure, as defined in the\n PKCS#1 v2.2 standard.\n", "RSAPrivateCrtKeySpec": "\nThis class specifies an RSA private key, as defined in the\n PKCS#1 v2.2 standard,\n using the Chinese Remainder Theorem (CRT) information values for efficiency.\n", "RSAPrivateKeySpec": "\nThis class specifies an RSA private key.\n", "RSAPublicKeySpec": "\nThis class specifies an RSA public key.\n", "X509EncodedKeySpec": "\nThis class represents the ASN.1 encoding of a public key,\n encoded according to the ASN.1 type SubjectPublicKeyInfo.\n", "XECPrivateKeySpec": "\nA class representing elliptic curve private keys as defined in RFC 7748,\n including the curve and other algorithm parameters.\n", "XECPublicKeySpec": "\nA class representing elliptic curve public keys as defined in RFC 7748,\n including the curve and other algorithm parameters.\n", "InvalidKeySpecException": "\nThis is the exception for invalid key specifications.\n", "InvalidParameterSpecException": "\nThis is the exception for invalid parameter specifications.\n", "AttributedCharacterIterator": "\nAn AttributedCharacterIterator allows iteration through both text and\n related attribute information.\n", "CharacterIterator": "\nThis interface defines a protocol for bidirectional iteration over text.\n", "AttributedCharacterIterator.Attribute": "\nDefines attribute keys that are used to identify text attributes.\n", "AttributedString": "\nAn AttributedString holds text and related attribute information.\n", "Bidi": "\nThis class implements the Unicode Bidirectional Algorithm.\n", "BreakIterator": "\nThe BreakIterator class implements methods for finding\n the location of boundaries in text.\n", "ChoiceFormat": "\nA ChoiceFormat allows you to attach a format to a range of numbers.\n", "CollationElementIterator": "\nThe CollationElementIterator class is used as an iterator\n to walk through each character of an international string.\n", "CollationKey": "\nA CollationKey represents a String under the\n rules of a specific Collator object.\n", "Collator": "\nThe Collator class performs locale-sensitive\n String comparison.\n", "CompactNumberFormat": "\n\nCompactNumberFormat is a concrete subclass of NumberFormat\n that formats a decimal number in its compact form.\n", "DateFormat": "\nDateFormat is an abstract class for date/time formatting subclasses which\n formats and parses dates or time in a language-independent manner.\n", "DateFormat.Field": "\nDefines constants that are used as attribute keys in the\n AttributedCharacterIterator returned\n from DateFormat.formatToCharacterIterator and as\n field identifiers in FieldPosition.\n", "DateFormatSymbols": "\nDateFormatSymbols is a public class for encapsulating\n localizable date-time formatting data, such as the names of the\n months, the names of the days of the week, and the time zone data.\n", "DecimalFormat": "\nDecimalFormat is a concrete subclass of\n NumberFormat that formats decimal numbers.\n", "DecimalFormatSymbols": "\nThis class represents the set of symbols (such as the decimal separator,\n the grouping separator, and so on) needed by DecimalFormat\n to format numbers.\n", "FieldPosition": "\nFieldPosition is a simple class used by Format\n and its subclasses to identify fields in formatted output.\n", "Format": "\nFormat is an abstract base class for formatting locale-sensitive\n information such as dates, messages, and numbers.\n", "Format.Field": "\nDefines constants that are used as attribute keys in the\n AttributedCharacterIterator returned\n from Format.formatToCharacterIterator and as\n field identifiers in FieldPosition.\n", "MessageFormat": "\nMessageFormat provides a means to produce concatenated\n messages in a language-neutral way.\n", "MessageFormat.Field": "\nDefines constants that are used as attribute keys in the\n AttributedCharacterIterator returned\n from MessageFormat.formatToCharacterIterator.\n", "Normalizer": "\nThis class provides the method normalize which transforms Unicode\n text into an equivalent composed or decomposed form, allowing for easier\n sorting and searching of text.\n", "NumberFormat": "\nNumberFormat is the abstract base class for all number\n formats.\n", "NumberFormat.Field": "\nDefines constants that are used as attribute keys in the\n AttributedCharacterIterator returned\n from NumberFormat.formatToCharacterIterator and as\n field identifiers in FieldPosition.\n", "ParsePosition": "\nParsePosition is a simple class used by Format\n and its subclasses to keep track of the current position during parsing.\n", "RuleBasedCollator": "\nThe RuleBasedCollator class is a concrete subclass of\n Collator that provides a simple, data-driven, table\n collator.\n", "SimpleDateFormat": "\nSimpleDateFormat is a concrete class for formatting and\n parsing dates in a locale-sensitive manner.\n", "StringCharacterIterator": "\nStringCharacterIterator implements the\n CharacterIterator protocol for a String.\n", "Normalizer.Form": "\nThis enum provides constants of the four Unicode normalization forms\n that are described in\n \n Unicode Standard Annex #15 \u2014 Unicode Normalization Forms\n and two methods to access them.\n", "NumberFormat.Style": "\nA number format style.\n", "ParseException": "\nSignals that an error has been reached unexpectedly\n while parsing.\n", "Clock": "\nA clock providing access to the current instant, date and time using a time-zone.\n", "Duration": "\nA time-based amount of time, such as '34.5 seconds'.\n/\nImmutable representation of a time span as defined in\n the W3C XML Schema 1.0 specification.\n", "Instant": "\nAn instantaneous point on the time-line.\n", "LocalDate": "\nA date without a time-zone in the ISO-8601 calendar system,\n such as 2007-12-03.\n", "LocalDateTime": "\nA date-time without a time-zone in the ISO-8601 calendar system,\n such as 2007-12-03T10:15:30.\n", "LocalTime": "\nA time without a time-zone in the ISO-8601 calendar system,\n such as 10:15:30.\n", "MonthDay": "\nA month-day in the ISO-8601 calendar system, such as --12-03.\n", "OffsetDateTime": "\nA date-time with an offset from UTC/Greenwich in the ISO-8601 calendar system,\n such as 2007-12-03T10:15:30+01:00.\n", "OffsetTime": "\nA time with an offset from UTC/Greenwich in the ISO-8601 calendar system,\n such as 10:15:30+01:00.\n", "Period": "\nA date-based amount of time in the ISO-8601 calendar system,\n such as '2 years, 3 months and 4 days'.\n/\nEvent annotation, specifies the default setting value for a periodic event.\n", "Year": "\nA year in the ISO-8601 calendar system, such as 2007.\n", "YearMonth": "\nA year-month in the ISO-8601 calendar system, such as 2007-12.\n", "ZonedDateTime": "\nA date-time with a time-zone in the ISO-8601 calendar system,\n such as 2007-12-03T10:15:30+01:00 Europe/Paris.\n", "ZoneId": "\nA time-zone ID, such as Europe/Paris.\n", "ZoneOffset": "\nA time-zone offset from Greenwich/UTC, such as +02:00.\n", "DayOfWeek": "\nA day-of-week, such as 'Tuesday'.\n", "Month": "\nA month-of-year, such as 'July'.\n", "DateTimeException": "\nException used to indicate a problem while calculating a date-time.\n", "ChronoLocalDate": "\nA date without time-of-day or time-zone in an arbitrary chronology, intended\n for advanced globalization use cases.\n", "ChronoLocalDateTime<D extends ChronoLocalDate>": "\nA date-time without a time-zone in an arbitrary chronology, intended\n for advanced globalization use cases.\n", "ChronoPeriod": "\nA date-based amount of time, such as '3 years, 4 months and 5 days' in an\n arbitrary chronology, intended for advanced globalization use cases.\n", "ChronoZonedDateTime<D extends ChronoLocalDate>": "\nA date-time with a time-zone in an arbitrary chronology,\n intended for advanced globalization use cases.\n", "Era": "\nAn era of the time-line.\n", "HijrahChronology": "\nThe Hijrah calendar is a lunar calendar supporting Islamic calendars.\n", "HijrahDate": "\nA date in the Hijrah calendar system.\n", "IsoChronology": "\nThe ISO calendar system.\n", "JapaneseChronology": "\nThe Japanese Imperial calendar system.\n", "JapaneseDate": "\nA date in the Japanese Imperial calendar system.\n", "JapaneseEra": "\nAn era in the Japanese Imperial calendar system.\n", "MinguoChronology": "\nThe Minguo calendar system.\n", "MinguoDate": "\nA date in the Minguo calendar system.\n", "ThaiBuddhistChronology": "\nThe Thai Buddhist calendar system.\n", "ThaiBuddhistDate": "\nA date in the Thai Buddhist calendar system.\n", "HijrahEra": "\nAn era in the Hijrah calendar system.\n", "IsoEra": "\nAn era in the ISO calendar system.\n", "MinguoEra": "\nAn era in the Minguo calendar system.\n", "ThaiBuddhistEra": "\nAn era in the Thai Buddhist calendar system.\n", "DateTimeFormatter": "\nFormatter for printing and parsing date-time objects.\n", "DateTimeFormatterBuilder": "\nBuilder to create date-time formatters.\n", "DecimalStyle": "\nLocalized decimal style used in date and time formatting.\n", "FormatStyle": "\nEnumeration of the style of a localized date, time or date-time formatter.\n", "ResolverStyle": "\nEnumeration of different ways to resolve dates and times.\n", "SignStyle": "\nEnumeration of ways to handle the positive/negative sign.\n", "TextStyle": "\nEnumeration of the style of text formatting and parsing.\n", "DateTimeParseException": "\nAn exception thrown when an error occurs during parsing.\n", "Temporal": "\nFramework-level interface defining read-write access to a temporal object,\n such as a date, time, offset or some combination of these.\n", "TemporalAccessor": "\nFramework-level interface defining read-only access to a temporal object,\n such as a date, time, offset or some combination of these.\n", "TemporalAdjuster": "\nStrategy for adjusting a temporal object.\n", "TemporalAmount": "\nFramework-level interface defining an amount of time, such as\n \"6 hours\", \"8 days\" or \"2 years and 3 months\".\n", "TemporalField": "\nA field of date-time, such as month-of-year or hour-of-minute.\n", "TemporalQuery<R>": "\nStrategy for querying a temporal object.\n", "TemporalUnit": "\nA unit of date-time, such as Days or Hours.\n", "IsoFields": "\nFields and units specific to the ISO-8601 calendar system,\n including quarter-of-year and week-based-year.\n", "JulianFields": "\nA set of date fields that provide access to Julian Days.\n", "TemporalAdjusters": "\nCommon and useful TemporalAdjusters.\n", "TemporalQueries": "\nCommon implementations of TemporalQuery.\n", "ValueRange": "\nThe range of valid values for a date-time field.\n", "WeekFields": "\nLocalized definitions of the day-of-week, week-of-month and week-of-year fields.\n", "ChronoField": "\nA standard set of fields.\n", "ChronoUnit": "\nA standard set of date periods units.\n", "UnsupportedTemporalTypeException": "\nUnsupportedTemporalTypeException indicates that a ChronoField or ChronoUnit is\n not supported for a Temporal class.\n", "ZoneOffsetTransition": "\nA transition between two offsets caused by a discontinuity in the local time-line.\n", "ZoneOffsetTransitionRule": "\nA rule expressing how to create a transition.\n", "ZoneRules": "\nThe rules defining how the zone offset varies for a single time-zone.\n", "ZoneOffsetTransitionRule.TimeDefinition": "\nA definition of the way a local time can be converted to the actual\n transition date-time.\n", "ZoneRulesException": "\nThrown to indicate a problem with time-zone configuration.\n", "Collection<E>": "\nThe root interface in the collection hierarchy.\n", "Comparator<T>": "\nA comparison function, which imposes a total ordering on some\n collection of objects.\n", "Deque<E>": "\nA linear collection that supports element insertion and removal at\n both ends.\n", "Enumeration<E>": "\nAn object that implements the Enumeration interface generates a\n series of elements, one at a time.\n", "EventListener": "\nA tagging interface that all event listener interfaces must extend.\n/\nThe EventListener interface is the primary method for\n handling events.\n", "Formattable": "\nThe Formattable interface must be implemented by any class that\n needs to perform custom formatting using the 's' conversion\n specifier of Formatter.\n", "Iterator<E>": "\nAn iterator over a collection.\n", "List<E>": "\nAn ordered collection (also known as a sequence).\n", "ListIterator<E>": "\nAn iterator for lists that allows the programmer\n to traverse the list in either direction, modify\n the list during iteration, and obtain the iterator's\n current position in the list.\n", "Map<K,\u200bV>": "\nAn object that maps keys to values.\n", "Map.Entry<K,\u200bV>": "\nA map entry (key-value pair).\n", "NavigableMap<K,\u200bV>": "\nA SortedMap extended with navigation methods returning the\n closest matches for given search targets.\n", "NavigableSet<E>": "\nA SortedSet extended with navigation methods reporting\n closest matches for given search targets.\n", "Observer": "Deprecated.\nThis interface has been deprecated.\n", "PrimitiveIterator<T,\u200bT_CONS>": "\nA base type for primitive specializations of Iterator.\n", "PrimitiveIterator.OfDouble": "\nAn Iterator specialized for double values.\n", "PrimitiveIterator.OfInt": "\nAn Iterator specialized for int values.\n", "PrimitiveIterator.OfLong": "\nAn Iterator specialized for long values.\n", "Queue<E>": "\nA collection designed for holding elements prior to processing.\n", "RandomAccess": "\nMarker interface used by List implementations to indicate that\n they support fast (generally constant time) random access.\n", "ServiceLoader.Provider<S>": "\nRepresents a service provider located by ServiceLoader.\n", "Set<E>": "\nA collection that contains no duplicate elements.\n", "SortedMap<K,\u200bV>": "\nA Map that further provides a total ordering on its keys.\n", "SortedSet<E>": "\nA Set that further provides a total ordering on its elements.\n", "Spliterator<T>": "\nAn object for traversing and partitioning elements of a source.\n", "Spliterator.OfDouble": "\nA Spliterator specialized for double values.\n", "Spliterator.OfInt": "\nA Spliterator specialized for int values.\n", "Spliterator.OfLong": "\nA Spliterator specialized for long values.\n", "Spliterator.OfPrimitive<T,\u200bT_CONS,\u200bT_SPLITR extends Spliterator.OfPrimitive<T,\u200bT_CONS,\u200bT_SPLITR>>": "\nA Spliterator specialized for primitive values.\n", "AbstractCollection<E>": "\nThis class provides a skeletal implementation of the Collection\n interface, to minimize the effort required to implement this interface.\n", "AbstractList<E>": "\nThis class provides a skeletal implementation of the List\n interface to minimize the effort required to implement this interface\n backed by a \"random access\" data store (such as an array).\n", "AbstractMap<K,\u200bV>": "\nThis class provides a skeletal implementation of the Map\n interface, to minimize the effort required to implement this interface.\n", "AbstractMap.SimpleEntry<K,\u200bV>": "\nAn Entry maintaining a key and a value.\n", "AbstractMap.SimpleImmutableEntry<K,\u200bV>": "\nAn Entry maintaining an immutable key and value.\n", "AbstractQueue<E>": "\nThis class provides skeletal implementations of some Queue\n operations.\n", "AbstractSequentialList<E>": "\nThis class provides a skeletal implementation of the List\n interface to minimize the effort required to implement this interface\n backed by a \"sequential access\" data store (such as a linked list).\n", "AbstractSet<E>": "\nThis class provides a skeletal implementation of the Set\n interface to minimize the effort required to implement this\n interface.\n", "ArrayDeque<E>": "\nResizable-array implementation of the Deque interface.\n", "ArrayList<E>": "\nResizable-array implementation of the List interface.\n", "Arrays": "\nThis class contains various methods for manipulating arrays (such as\n sorting and searching).\n", "Base64": "\nThis class consists exclusively of static methods for obtaining\n encoders and decoders for the Base64 encoding scheme.\n", "Base64.Decoder": "\nThis class implements a decoder for decoding byte data using the\n Base64 encoding scheme as specified in RFC 4648 and RFC 2045.\n", "Base64.Encoder": "\nThis class implements an encoder for encoding byte data using\n the Base64 encoding scheme as specified in RFC 4648 and RFC 2045.\n", "BitSet": "\nThis class implements a vector of bits that grows as needed.\n", "Calendar": "\nThe Calendar class is an abstract class that provides methods\n for converting between a specific instant in time and a set of calendar fields such as YEAR, MONTH,\n DAY_OF_MONTH, HOUR, and so on, and for\n manipulating the calendar fields, such as getting the date of the next\n week.\n", "Calendar.Builder": "\nCalendar.Builder is used for creating a Calendar from\n various date-time parameters.\n", "Collections": "\nThis class consists exclusively of static methods that operate on or return\n collections.\n", "Currency": "\nRepresents a currency.\n", "Date": "\nThe class Date represents a specific instant\n in time, with millisecond precision.\n/\nA thin wrapper around a millisecond value that allows\n JDBC to identify this as an SQL DATE value.\n", "Dictionary<K,\u200bV>": "\nThe Dictionary class is the abstract parent of any\n class, such as Hashtable, which maps keys to values.\n", "DoubleSummaryStatistics": "\nA state object for collecting statistics such as count, min, max, sum, and\n average.\n", "EnumMap<K extends Enum<K>,\u200bV>": "\nA specialized Map implementation for use with enum type keys.\n", "EnumSet<E extends Enum<E>>": "\nA specialized Set implementation for use with enum types.\n", "EventListenerProxy<T extends EventListener>": "\nAn abstract wrapper class for an EventListener class\n which associates a set of additional parameters with the listener.\n", "EventObject": "\n\n The root class from which all event state objects shall be derived.\n", "FormattableFlags": "\nFormattableFlags are passed to the Formattable.formatTo() method and modify the output format for Formattables.\n", "Formatter": "\nAn interpreter for printf-style format strings.\n/\nA Formatter provides support for formatting LogRecords.\n", "GregorianCalendar": "\nGregorianCalendar is a concrete subclass of\n Calendar and provides the standard calendar system\n used by most of the world.\n", "HashMap<K,\u200bV>": "\nHash table based implementation of the Map interface.\n", "HashSet<E>": "\nThis class implements the Set interface, backed by a hash table\n (actually a HashMap instance).\n", "Hashtable<K,\u200bV>": "\nThis class implements a hash table, which maps keys to values.\n", "IdentityHashMap<K,\u200bV>": "\nThis class implements the Map interface with a hash table, using\n reference-equality in place of object-equality when comparing keys (and\n values).\n", "IntSummaryStatistics": "\nA state object for collecting statistics such as count, min, max, sum, and\n average.\n", "LinkedHashMap<K,\u200bV>": "\nHash table and linked list implementation of the Map interface,\n with predictable iteration order.\n", "LinkedHashSet<E>": "\nHash table and linked list implementation of the Set interface,\n with predictable iteration order.\n", "LinkedList<E>": "\nDoubly-linked list implementation of the List and Deque\n interfaces.\n", "ListResourceBundle": "\nListResourceBundle is an abstract subclass of\n ResourceBundle that manages resources for a locale\n in a convenient and easy to use list.\n", "Locale": "\nA Locale object represents a specific geographical, political,\n or cultural region.\n", "Locale.Builder": "\nBuilder is used to build instances of Locale\n from values configured by the setters.\n", "Locale.LanguageRange": "\nThis class expresses a Language Range defined in\n RFC 4647 Matching of\n Language Tags.\n", "LongSummaryStatistics": "\nA state object for collecting statistics such as count, min, max, sum, and\n average.\n", "Objects": "\nThis class consists of static utility methods for operating\n on objects, or checking certain conditions before operation.\n", "Observable": "Deprecated.\nThis class and the Observer interface have been deprecated.\n", "Optional<T>": "\nA container object which may or may not contain a non-null value.\n", "OptionalDouble": "\nA container object which may or may not contain a double value.\n", "OptionalInt": "\nA container object which may or may not contain an int value.\n", "OptionalLong": "\nA container object which may or may not contain a long value.\n", "PriorityQueue<E>": "\nAn unbounded priority queue based on a priority heap.\n", "Properties": "\nThe Properties class represents a persistent set of\n properties.\n/Provides standard JavaBeans property manipulation\n mechanisms to allow applications to get and set RowSet command and\n property  values. Refer to the   documentation of the javax.sql.RowSet\n interface  (available in the JDBC 3.0 specification) for more details on\n the standard  RowSet properties.", "PropertyPermission": "\nThis class is for property permissions.\n", "PropertyResourceBundle": "\nPropertyResourceBundle is a concrete subclass of\n ResourceBundle that manages resources for a locale\n using a set of static strings from a property file.\n", "Random": "\nAn instance of this class is used to generate a stream of\n pseudorandom numbers.\n", "ResourceBundle": "\nResource bundles contain locale-specific objects.\n", "ResourceBundle.Control": "\nResourceBundle.Control defines a set of callback methods\n that are invoked by the ResourceBundle.getBundle factory\n methods during the bundle loading process.\n", "Scanner": "\nA simple text scanner which can parse primitive types and strings using\n regular expressions.\n", "ServiceLoader<S>": "\nA facility to load implementations of a service.\n", "SimpleTimeZone": "\nSimpleTimeZone is a concrete subclass of TimeZone\n that represents a time zone for use with a Gregorian calendar.\n", "Spliterators": "\nStatic classes and methods for operating on or creating instances of\n Spliterator and its primitive specializations\n Spliterator.OfInt, Spliterator.OfLong, and\n Spliterator.OfDouble.\n", "Spliterators.AbstractDoubleSpliterator": "\nAn abstract Spliterator.OfDouble that implements\n trySplit to permit limited parallelism.\n", "Spliterators.AbstractIntSpliterator": "\nAn abstract Spliterator.OfInt that implements trySplit to\n permit limited parallelism.\n", "Spliterators.AbstractLongSpliterator": "\nAn abstract Spliterator.OfLong that implements trySplit\n to permit limited parallelism.\n", "Spliterators.AbstractSpliterator<T>": "\nAn abstract Spliterator that implements trySplit to\n permit limited parallelism.\n", "SplittableRandom": "\nA generator of uniform pseudorandom values applicable for use in\n (among other contexts) isolated parallel computations that may\n generate subtasks.\n", "Stack<E>": "\nThe Stack class represents a last-in-first-out\n (LIFO) stack of objects.\n", "StringJoiner": "\nStringJoiner is used to construct a sequence of characters separated\n by a delimiter and optionally starting with a supplied prefix\n and ending with a supplied suffix.\n", "StringTokenizer": "\nThe string tokenizer class allows an application to break a\n string into tokens.\n", "Timer": "\nA facility for threads to schedule tasks for future execution in a\n background thread.\n/\nFires one or more ActionEvents at specified\n intervals.\n/\nProvides the implementation of the timer MBean.\n", "TimerTask": "\nA task that can be scheduled for one-time or repeated execution by a\n Timer.\n", "TimeZone": "\nTimeZone represents a time zone offset, and also figures out daylight\n savings.\n", "TreeMap<K,\u200bV>": "\nA Red-Black tree based NavigableMap implementation.\n", "TreeSet<E>": "\nA NavigableSet implementation based on a TreeMap.\n", "UUID": "\nA class that represents an immutable universally unique identifier (UUID).\n", "Vector<E>": "\nThe Vector class implements a growable array of\n objects.\n", "WeakHashMap<K,\u200bV>": "\nHash table based implementation of the Map interface, with\n weak keys.\n", "Formatter.BigDecimalLayoutForm": "\nEnum for BigDecimal formatting.\n", "Locale.Category": "\nEnum for locale categories.\n", "Locale.FilteringMode": "\nThis enum provides constants to select a filtering mode for locale\n matching.\n", "Locale.IsoCountryCode": "\nEnum for specifying the type defined in ISO 3166.\n", "ConcurrentModificationException": "\nThis exception may be thrown by methods that have detected concurrent\n modification of an object when such modification is not permissible.\n", "DuplicateFormatFlagsException": "\nUnchecked exception thrown when duplicate flags are provided in the format\n specifier.\n", "EmptyStackException": "\nThrown by methods in the Stack class to indicate\n that the stack is empty.\n", "FormatFlagsConversionMismatchException": "\nUnchecked exception thrown when a conversion and flag are incompatible.\n", "FormatterClosedException": "\nUnchecked exception thrown when the formatter has been closed.\n", "IllegalFormatCodePointException": "\nUnchecked exception thrown when a character with an invalid Unicode code\n point as defined by Character.isValidCodePoint(int) is passed to the\n Formatter.\n", "IllegalFormatConversionException": "\nUnchecked exception thrown when the argument corresponding to the format\n specifier is of an incompatible type.\n", "IllegalFormatException": "\nUnchecked exception thrown when a format string contains an illegal syntax\n or a format specifier that is incompatible with the given arguments.\n", "IllegalFormatFlagsException": "\nUnchecked exception thrown when an illegal combination flags is given.\n", "IllegalFormatPrecisionException": "\nUnchecked exception thrown when the precision is a negative value other than\n -1, the conversion does not support a precision, or the value is\n otherwise unsupported.\n", "IllegalFormatWidthException": "\nUnchecked exception thrown when the format width is a negative value other\n than -1 or is otherwise unsupported.\n", "IllformedLocaleException": "\nThrown by methods in Locale and Locale.Builder to\n indicate that an argument is not a well-formed BCP 47 tag.\n", "InputMismatchException": "\nThrown by a Scanner to indicate that the token\n retrieved does not match the pattern for the expected type, or\n that the token is out of range for the expected type.\n", "InvalidPropertiesFormatException": "\nThrown to indicate that an operation could not complete because\n the input did not conform to the appropriate XML document type\n for a collection of properties, as per the Properties\n specification.\n", "MissingFormatArgumentException": "\nUnchecked exception thrown when there is a format specifier which does not\n have a corresponding argument or if an argument index refers to an argument\n that does not exist.\n", "MissingFormatWidthException": "\nUnchecked exception thrown when the format width is required.\n", "MissingResourceException": "\nSignals that a resource is missing.\n", "NoSuchElementException": "\nThrown by various accessor methods to indicate that the element being requested\n does not exist.\n", "TooManyListenersException": "\n\n The  TooManyListenersException  Exception is used as part of\n the Java Event model to annotate and implement a unicast special case of\n a multicast Event Source.\n", "UnknownFormatConversionException": "\nUnchecked exception thrown when an unknown conversion is given.\n", "UnknownFormatFlagsException": "\nUnchecked exception thrown when an unknown flag is given.\n", "ServiceConfigurationError": "\nError thrown when something goes wrong while locating, loading, or\n instantiating a service provider.\n", "BlockingDeque<E>": "\nA Deque that additionally supports blocking operations that wait\n for the deque to become non-empty when retrieving an element, and wait for\n space to become available in the deque when storing an element.\n", "BlockingQueue<E>": "\nA Queue that additionally supports operations that wait for\n the queue to become non-empty when retrieving an element, and wait\n for space to become available in the queue when storing an element.\n", "Callable<V>": "\nA task that returns a result and may throw an exception.\n", "CompletableFuture.AsynchronousCompletionTask": "\nA marker interface identifying asynchronous tasks produced by\n async methods.\n", "CompletionService<V>": "\nA service that decouples the production of new asynchronous tasks\n from the consumption of the results of completed tasks.\n", "CompletionStage<T>": "\nA stage of a possibly asynchronous computation, that performs an\n action or computes a value when another CompletionStage completes.\n", "ConcurrentMap<K,\u200bV>": "\nA Map providing thread safety and atomicity guarantees.\n", "ConcurrentNavigableMap<K,\u200bV>": "\nA ConcurrentMap supporting NavigableMap operations,\n and recursively so for its navigable sub-maps.\n", "Delayed": "\nA mix-in style interface for marking objects that should be\n acted upon after a given delay.\n", "Executor": "\nAn object that executes submitted Runnable tasks.\n", "ExecutorService": "\nAn Executor that provides methods to manage termination and\n methods that can produce a Future for tracking progress of\n one or more asynchronous tasks.\n", "Flow.Processor<T,\u200bR>": "\nA component that acts as both a Subscriber and Publisher.\n", "Flow.Publisher<T>": "\nA producer of items (and related control messages) received by\n Subscribers.\n", "Flow.Subscriber<T>": "\nA receiver of messages.\n", "Flow.Subscription": "\nMessage control linking a Flow.Publisher and Flow.Subscriber.\n", "ForkJoinPool.ForkJoinWorkerThreadFactory": "\nFactory for creating new ForkJoinWorkerThreads.\n", "ForkJoinPool.ManagedBlocker": "\nInterface for extending managed parallelism for tasks running\n in ForkJoinPools.\n", "Future<V>": "\nA Future represents the result of an asynchronous\n computation.\n", "RejectedExecutionHandler": "\nA handler for tasks that cannot be executed by a ThreadPoolExecutor.\n", "RunnableFuture<V>": "\nA Future that is Runnable.\n", "RunnableScheduledFuture<V>": "\nA ScheduledFuture that is Runnable.\n", "ScheduledExecutorService": "\nAn ExecutorService that can schedule commands to run after a given\n delay, or to execute periodically.\n", "ScheduledFuture<V>": "\nA delayed result-bearing action that can be cancelled.\n", "ThreadFactory": "\nAn object that creates new threads on demand.\n", "TransferQueue<E>": "\nA BlockingQueue in which producers may wait for consumers\n to receive elements.\n", "AbstractExecutorService": "\nProvides default implementations of ExecutorService\n execution methods.\n", "ArrayBlockingQueue<E>": "\nA bounded blocking queue backed by an\n array.\n", "CompletableFuture<T>": "\nA Future that may be explicitly completed (setting its\n value and status), and may be used as a CompletionStage,\n supporting dependent functions and actions that trigger upon its\n completion.\n", "ConcurrentHashMap<K,\u200bV>": "\nA hash table supporting full concurrency of retrievals and\n high expected concurrency for updates.\n", "ConcurrentHashMap.KeySetView<K,\u200bV>": "\nA view of a ConcurrentHashMap as a Set of keys, in\n which additions may optionally be enabled by mapping to a\n common value.\n", "ConcurrentLinkedDeque<E>": "\nAn unbounded concurrent deque based on linked nodes.\n", "ConcurrentLinkedQueue<E>": "\nAn unbounded thread-safe queue based on linked nodes.\n", "ConcurrentSkipListMap<K,\u200bV>": "\nA scalable concurrent ConcurrentNavigableMap implementation.\n", "ConcurrentSkipListSet<E>": "\nA scalable concurrent NavigableSet implementation based on\n a ConcurrentSkipListMap.\n", "CopyOnWriteArrayList<E>": "\nA thread-safe variant of ArrayList in which all mutative\n operations (add, set, and so on) are implemented by\n making a fresh copy of the underlying array.\n", "CopyOnWriteArraySet<E>": "\nA Set that uses an internal CopyOnWriteArrayList\n for all of its operations.\n", "CountDownLatch": "\nA synchronization aid that allows one or more threads to wait until\n a set of operations being performed in other threads completes.\n", "CountedCompleter<T>": "\nA ForkJoinTask with a completion action performed when\n triggered and there are no remaining pending actions.\n", "CyclicBarrier": "\nA synchronization aid that allows a set of threads to all wait for\n each other to reach a common barrier point.\n", "DelayQueue<E extends Delayed>": "\nAn unbounded blocking queue of\n Delayed elements, in which an element can only be taken\n when its delay has expired.\n", "Exchanger<V>": "\nA synchronization point at which threads can pair and swap elements\n within pairs.\n", "ExecutorCompletionService<V>": "\nA CompletionService that uses a supplied Executor\n to execute tasks.\n", "Executors": "\nFactory and utility methods for Executor, ExecutorService, ScheduledExecutorService, ThreadFactory, and Callable classes defined in this\n package.\n", "Flow": "\nInterrelated interfaces and static methods for establishing\n flow-controlled components in which Publishers\n produce items consumed by one or more Subscribers, each managed by a Subscription.\n", "ForkJoinPool": "\nAn ExecutorService for running ForkJoinTasks.\n", "ForkJoinTask<V>": "\nAbstract base class for tasks that run within a ForkJoinPool.\n", "ForkJoinWorkerThread": "\nA thread managed by a ForkJoinPool, which executes\n ForkJoinTasks.\n", "FutureTask<V>": "\nA cancellable asynchronous computation.\n", "LinkedBlockingDeque<E>": "\nAn optionally-bounded blocking deque based on\n linked nodes.\n", "LinkedBlockingQueue<E>": "\nAn optionally-bounded blocking queue based on\n linked nodes.\n", "LinkedTransferQueue<E>": "\nAn unbounded TransferQueue based on linked nodes.\n", "Phaser": "\nA reusable synchronization barrier, similar in functionality to\n CyclicBarrier and CountDownLatch but supporting\n more flexible usage.\n", "PriorityBlockingQueue<E>": "\nAn unbounded blocking queue that uses\n the same ordering rules as class PriorityQueue and supplies\n blocking retrieval operations.\n", "RecursiveAction": "\nA recursive resultless ForkJoinTask.\n", "RecursiveTask<V>": "\nA recursive result-bearing ForkJoinTask.\n", "ScheduledThreadPoolExecutor": "\nA ThreadPoolExecutor that can additionally schedule\n commands to run after a given delay, or to execute periodically.\n", "Semaphore": "\nA counting semaphore.\n", "SubmissionPublisher<T>": "\nA Flow.Publisher that asynchronously issues submitted\n (non-null) items to current subscribers until it is closed.\n", "SynchronousQueue<E>": "\nA blocking queue in which each insert\n operation must wait for a corresponding remove operation by another\n thread, and vice versa.\n", "ThreadLocalRandom": "\nA random number generator isolated to the current thread.\n", "ThreadPoolExecutor": "\nAn ExecutorService that executes each submitted task using\n one of possibly several pooled threads, normally configured\n using Executors factory methods.\n", "ThreadPoolExecutor.AbortPolicy": "\nA handler for rejected tasks that throws a\n RejectedExecutionException.\n", "ThreadPoolExecutor.CallerRunsPolicy": "\nA handler for rejected tasks that runs the rejected task\n directly in the calling thread of the execute method,\n unless the executor has been shut down, in which case the task\n is discarded.\n", "ThreadPoolExecutor.DiscardOldestPolicy": "\nA handler for rejected tasks that discards the oldest unhandled\n request and then retries execute, unless the executor\n is shut down, in which case the task is discarded.\n", "ThreadPoolExecutor.DiscardPolicy": "\nA handler for rejected tasks that silently discards the\n rejected task.\n", "TimeUnit": "\nA TimeUnit represents time durations at a given unit of\n granularity and provides utility methods to convert across units,\n and to perform timing and delay operations in these units.\n", "BrokenBarrierException": "\nException thrown when a thread tries to wait upon a barrier that is\n in a broken state, or which enters the broken state while the thread\n is waiting.\n", "CancellationException": "\nException indicating that the result of a value-producing task,\n such as a FutureTask, cannot be retrieved because the task\n was cancelled.\n", "CompletionException": "\nException thrown when an error or other exception is encountered\n in the course of completing a result or task.\n", "ExecutionException": "\nException thrown when attempting to retrieve the result of a task\n that aborted by throwing an exception.\n", "RejectedExecutionException": "\nException thrown by an Executor when a task cannot be\n accepted for execution.\n", "TimeoutException": "\nException thrown when a blocking operation times out.\n", "AtomicBoolean": "\nA boolean value that may be updated atomically.\n", "AtomicInteger": "\nAn int value that may be updated atomically.\n", "AtomicIntegerArray": "\nAn int array in which elements may be updated atomically.\n", "AtomicIntegerFieldUpdater<T>": "\nA reflection-based utility that enables atomic updates to\n designated volatile int fields of designated classes.\n", "AtomicLong": "\nA long value that may be updated atomically.\n", "AtomicLongArray": "\nA long array in which elements may be updated atomically.\n", "AtomicLongFieldUpdater<T>": "\nA reflection-based utility that enables atomic updates to\n designated volatile long fields of designated classes.\n", "AtomicMarkableReference<V>": "\nAn AtomicMarkableReference maintains an object reference\n along with a mark bit, that can be updated atomically.\n", "AtomicReference<V>": "\nAn object reference that may be updated atomically.\n", "AtomicReferenceArray<E>": "\nAn array of object references in which elements may be updated\n atomically.\n", "AtomicReferenceFieldUpdater<T,\u200bV>": "\nA reflection-based utility that enables atomic updates to\n designated volatile reference fields of designated\n classes.\n", "AtomicStampedReference<V>": "\nAn AtomicStampedReference maintains an object reference\n along with an integer \"stamp\", that can be updated atomically.\n", "DoubleAccumulator": "\nOne or more variables that together maintain a running double\n value updated using a supplied function.\n", "DoubleAdder": "\nOne or more variables that together maintain an initially zero\n double sum.\n", "LongAccumulator": "\nOne or more variables that together maintain a running long\n value updated using a supplied function.\n", "LongAdder": "\nOne or more variables that together maintain an initially zero\n long sum.\n", "Condition": "\nCondition factors out the Object monitor\n methods (wait, notify\n and notifyAll) into distinct objects to\n give the effect of having multiple wait-sets per object, by\n combining them with the use of arbitrary Lock implementations.\n", "Lock": "\nLock implementations provide more extensive locking\n operations than can be obtained using synchronized methods\n and statements.\n", "ReadWriteLock": "\nA ReadWriteLock maintains a pair of associated locks, one for read-only operations and one for writing.\n", "AbstractOwnableSynchronizer": "\nA synchronizer that may be exclusively owned by a thread.\n", "AbstractQueuedLongSynchronizer": "\nA version of AbstractQueuedSynchronizer in\n which synchronization state is maintained as a long.\n", "AbstractQueuedSynchronizer": "\nProvides a framework for implementing blocking locks and related\n synchronizers (semaphores, events, etc) that rely on\n first-in-first-out (FIFO) wait queues.\n", "LockSupport": "\nBasic thread blocking primitives for creating locks and other\n synchronization classes.\n", "ReentrantLock": "\nA reentrant mutual exclusion Lock with the same basic\n behavior and semantics as the implicit monitor lock accessed using\n synchronized methods and statements, but with extended\n capabilities.\n", "ReentrantReadWriteLock": "\nAn implementation of ReadWriteLock supporting similar\n semantics to ReentrantLock.\n", "ReentrantReadWriteLock.ReadLock": "\nThe lock returned by method ReadWriteLock.readLock().\n", "ReentrantReadWriteLock.WriteLock": "\nThe lock returned by method ReadWriteLock.writeLock().\n", "StampedLock": "\nA capability-based lock with three modes for controlling read/write\n access.\n", "BiConsumer<T,\u200bU>": "\nRepresents an operation that accepts two input arguments and returns no\n result.\n", "BiFunction<T,\u200bU,\u200bR>": "\nRepresents a function that accepts two arguments and produces a result.\n", "BinaryOperator<T>": "\nRepresents an operation upon two operands of the same type, producing a result\n of the same type as the operands.\n", "BiPredicate<T,\u200bU>": "\nRepresents a predicate (boolean-valued function) of two arguments.\n", "BooleanSupplier": "\nRepresents a supplier of boolean-valued results.\n", "Consumer<T>": "\nRepresents an operation that accepts a single input argument and returns no\n result.\n", "DoubleBinaryOperator": "\nRepresents an operation upon two double-valued operands and producing a\n double-valued result.\n", "DoubleConsumer": "\nRepresents an operation that accepts a single double-valued argument and\n returns no result.\n", "DoubleFunction<R>": "\nRepresents a function that accepts a double-valued argument and produces a\n result.\n", "DoublePredicate": "\nRepresents a predicate (boolean-valued function) of one double-valued\n argument.\n", "DoubleSupplier": "\nRepresents a supplier of double-valued results.\n", "DoubleToIntFunction": "\nRepresents a function that accepts a double-valued argument and produces an\n int-valued result.\n", "DoubleToLongFunction": "\nRepresents a function that accepts a double-valued argument and produces a\n long-valued result.\n", "DoubleUnaryOperator": "\nRepresents an operation on a single double-valued operand that produces\n a double-valued result.\n", "Function<T,\u200bR>": "\nRepresents a function that accepts one argument and produces a result.\n", "IntBinaryOperator": "\nRepresents an operation upon two int-valued operands and producing an\n int-valued result.\n", "IntConsumer": "\nRepresents an operation that accepts a single int-valued argument and\n returns no result.\n", "IntFunction<R>": "\nRepresents a function that accepts an int-valued argument and produces a\n result.\n", "IntPredicate": "\nRepresents a predicate (boolean-valued function) of one int-valued\n argument.\n", "IntSupplier": "\nRepresents a supplier of int-valued results.\n", "IntToDoubleFunction": "\nRepresents a function that accepts an int-valued argument and produces a\n double-valued result.\n", "IntToLongFunction": "\nRepresents a function that accepts an int-valued argument and produces a\n long-valued result.\n", "IntUnaryOperator": "\nRepresents an operation on a single int-valued operand that produces\n an int-valued result.\n", "LongBinaryOperator": "\nRepresents an operation upon two long-valued operands and producing a\n long-valued result.\n", "LongConsumer": "\nRepresents an operation that accepts a single long-valued argument and\n returns no result.\n", "LongFunction<R>": "\nRepresents a function that accepts a long-valued argument and produces a\n result.\n", "LongPredicate": "\nRepresents a predicate (boolean-valued function) of one long-valued\n argument.\n", "LongSupplier": "\nRepresents a supplier of long-valued results.\n", "LongToDoubleFunction": "\nRepresents a function that accepts a long-valued argument and produces a\n double-valued result.\n", "LongToIntFunction": "\nRepresents a function that accepts a long-valued argument and produces an\n int-valued result.\n", "LongUnaryOperator": "\nRepresents an operation on a single long-valued operand that produces\n a long-valued result.\n", "ObjDoubleConsumer<T>": "\nRepresents an operation that accepts an object-valued and a\n double-valued argument, and returns no result.\n", "ObjIntConsumer<T>": "\nRepresents an operation that accepts an object-valued and a\n int-valued argument, and returns no result.\n", "ObjLongConsumer<T>": "\nRepresents an operation that accepts an object-valued and a\n long-valued argument, and returns no result.\n", "Predicate<T>": "\nRepresents a predicate (boolean-valued function) of one argument.\n", "Supplier<T>": "\nRepresents a supplier of results.\n", "ToDoubleBiFunction<T,\u200bU>": "\nRepresents a function that accepts two arguments and produces a double-valued\n result.\n", "ToDoubleFunction<T>": "\nRepresents a function that produces a double-valued result.\n", "ToIntBiFunction<T,\u200bU>": "\nRepresents a function that accepts two arguments and produces an int-valued\n result.\n", "ToIntFunction<T>": "\nRepresents a function that produces an int-valued result.\n", "ToLongBiFunction<T,\u200bU>": "\nRepresents a function that accepts two arguments and produces a long-valued\n result.\n", "ToLongFunction<T>": "\nRepresents a function that produces a long-valued result.\n", "UnaryOperator<T>": "\nRepresents an operation on a single operand that produces a result of the\n same type as its operand.\n", "Pack200.Packer": "Deprecated, for removal: This API element is subject to removal in a future version.\nThis interface is deprecated, and is planned for removal in a\n             future release.\n", "Pack200.Unpacker": "Deprecated, for removal: This API element is subject to removal in a future version.\nThis interface is deprecated, and is planned for removal in a\n             future release.\n", "Attributes": "\nThe Attributes class maps Manifest attribute names to associated string\n values.\n/\nThis interface represents a collection of attributes.\n/\nInterface for a list of XML attributes.\n", "Attributes.Name": "\nThe Attributes.Name class represents an attribute name stored in\n this Map.\n", "JarEntry": "\nThis class is used to represent a JAR file entry.\n", "JarFile": "\nThe JarFile class is used to read the contents of a jar file\n from any file that can be opened with java.io.RandomAccessFile.\n", "JarInputStream": "\nThe JarInputStream class is used to read the contents of\n a JAR file from any input stream.\n", "JarOutputStream": "\nThe JarOutputStream class is used to write the contents\n of a JAR file to any output stream.\n", "Manifest": "\nThe Manifest class is used to maintain Manifest entry names and their\n associated Attributes.\n/\nA representation of the XML Manifest element as defined in\n the \n W3C Recommendation for XML-Signature Syntax and Processing.\n", "Pack200": "Deprecated, for removal: This API element is subject to removal in a future version.\nThis class is deprecated, and is planned for removal in a future\n             release.\n", "JarException": "\nSignals that an error of some sort has occurred while reading from\n or writing to a JAR file.\n", "MatchResult": "\nThe result of a match operation.\n", "Matcher": "\nAn engine that performs match operations on a character sequence by interpreting a Pattern.\n", "Pattern": "\nA compiled representation of a regular expression.\n", "PatternSyntaxException": "\nUnchecked exception thrown to indicate a syntax error in a\n regular-expression pattern.\n", "AbstractResourceBundleProvider": "\nAbstractResourceBundleProvider is an abstract class that provides\n the basic support for a provider implementation class for\n ResourceBundleProvider.\n", "LocaleServiceProvider": "\n\n This is the super class of all the locale sensitive service provider\n interfaces (SPIs).\n", "BaseStream<T,\u200bS extends BaseStream<T,\u200bS>>": "\nBase interface for streams, which are sequences of elements supporting\n sequential and parallel aggregate operations.\n", "Collector<T,\u200bA,\u200bR>": "\nA mutable reduction operation that\n accumulates input elements into a mutable result container, optionally transforming\n the accumulated result into a final representation after all input elements\n have been processed.\n", "DoubleStream": "\nA sequence of primitive double-valued elements supporting sequential and parallel\n aggregate operations.\n", "DoubleStream.Builder": "\nA mutable builder for a DoubleStream.\n", "IntStream": "\nA sequence of primitive int-valued elements supporting sequential and parallel\n aggregate operations.\n", "IntStream.Builder": "\nA mutable builder for an IntStream.\n", "LongStream": "\nA sequence of primitive long-valued elements supporting sequential and parallel\n aggregate operations.\n", "LongStream.Builder": "\nA mutable builder for a LongStream.\n", "Stream<T>": "\nA sequence of elements supporting sequential and parallel aggregate\n operations.\n", "Stream.Builder<T>": "\nA mutable builder for a Stream.\n", "Collectors": "\nImplementations of Collector that implement various useful reduction\n operations, such as accumulating elements into collections, summarizing\n elements according to various criteria, etc.\n", "StreamSupport": "\nLow-level utility methods for creating and manipulating streams.\n", "Collector.Characteristics": "\nCharacteristics indicating properties of a Collector, which can\n be used to optimize reduction implementations.\n", "Checksum": "\nAn interface representing a data checksum.\n", "Adler32": "\nA class that can be used to compute the Adler-32 checksum of a data\n stream.\n", "CheckedInputStream": "\nAn input stream that also maintains a checksum of the data being read.\n", "CheckedOutputStream": "\nAn output stream that also maintains a checksum of the data being\n written.\n", "CRC32": "\nA class that can be used to compute the CRC-32 of a data stream.\n", "CRC32C": "\nA class that can be used to compute the CRC-32C of a data stream.\n", "Deflater": "\nThis class provides support for general purpose compression using the\n popular ZLIB compression library.\n", "DeflaterInputStream": "\nImplements an input stream filter for compressing data in the \"deflate\"\n compression format.\n", "DeflaterOutputStream": "\nThis class implements an output stream filter for compressing data in\n the \"deflate\" compression format.\n", "GZIPInputStream": "\nThis class implements a stream filter for reading compressed data in\n the GZIP file format.\n", "GZIPOutputStream": "\nThis class implements a stream filter for writing compressed data in\n the GZIP file format.\n", "Inflater": "\nThis class provides support for general purpose decompression using the\n popular ZLIB compression library.\n", "InflaterInputStream": "\nThis class implements a stream filter for uncompressing data in the\n \"deflate\" compression format.\n", "InflaterOutputStream": "\nImplements an output stream filter for uncompressing data stored in the\n \"deflate\" compression format.\n", "ZipEntry": "\nThis class is used to represent a ZIP file entry.\n", "ZipFile": "\nThis class is used to read entries from a zip file.\n", "ZipInputStream": "\nThis class implements an input stream filter for reading files in the\n ZIP file format.\n", "ZipOutputStream": "\nThis class implements an output stream filter for writing files in the\n ZIP file format.\n", "DataFormatException": "\nSignals that a data format error has occurred.\n", "ZipException": "\nSignals that a Zip exception of some sort has occurred.\n", "ZipError": "\nSignals that an unrecoverable error has occurred.\n", "SecretKey": "\nA secret (symmetric) key.\n", "Cipher": "\nThis class provides the functionality of a cryptographic cipher for\n encryption and decryption.\n", "CipherInputStream": "\nA CipherInputStream is composed of an InputStream and a Cipher so\n that read() methods return data that are read in from the\n underlying InputStream but have been additionally processed by the\n Cipher.\n", "CipherOutputStream": "\nA CipherOutputStream is composed of an OutputStream and a Cipher so\n that write() methods first process the data before writing them out\n to the underlying OutputStream.\n", "CipherSpi": "\nThis class defines the Service Provider Interface (SPI)\n for the Cipher class.\n", "EncryptedPrivateKeyInfo": "\nThis class implements the EncryptedPrivateKeyInfo type\n as defined in PKCS #8.\n", "ExemptionMechanism": "\nThis class provides the functionality of an exemption mechanism, examples\n of which are key recovery, key weakening, and\n key escrow.\n", "ExemptionMechanismSpi": "\nThis class defines the Service Provider Interface (SPI)\n for the ExemptionMechanism class.\n", "KeyAgreement": "\nThis class provides the functionality of a key agreement (or key\n exchange) protocol.\n", "KeyAgreementSpi": "\nThis class defines the Service Provider Interface (SPI)\n for the KeyAgreement class.\n", "KeyGenerator": "\nThis class provides the functionality of a secret (symmetric) key generator.\n", "KeyGeneratorSpi": "\nThis class defines the Service Provider Interface (SPI)\n for the KeyGenerator class.\n", "Mac": "\nThis class provides the functionality of a \"Message Authentication Code\"\n (MAC) algorithm.\n", "MacSpi": "\nThis class defines the Service Provider Interface (SPI)\n for the Mac class.\n", "NullCipher": "\nThe NullCipher class is a class that provides an\n \"identity cipher\" -- one that does not transform the plain text.\n", "SealedObject": "\nThis class enables a programmer to create an object and protect its\n confidentiality with a cryptographic algorithm.\n", "SecretKeyFactory": "\nThis class represents a factory for secret keys.\n", "SecretKeyFactorySpi": "\nThis class defines the Service Provider Interface (SPI)\n for the SecretKeyFactory class.\n", "AEADBadTagException": "\nThis exception is thrown when a Cipher operating in\n an AEAD mode (such as GCM/CCM) is unable to verify the supplied\n authentication tag.\n", "BadPaddingException": "\nThis exception is thrown when a particular padding mechanism is\n expected for the input data but the data is not padded properly.\n", "ExemptionMechanismException": "\nThis is the generic ExemptionMechanism exception.\n", "IllegalBlockSizeException": "\nThis exception is thrown when the length of data provided to a block\n cipher is incorrect, i.e., does not match the block size of the cipher.\n", "NoSuchPaddingException": "\nThis exception is thrown when a particular padding mechanism is\n requested but is not available in the environment.\n", "ShortBufferException": "\nThis exception is thrown when an output buffer provided by the user\n is too short to hold the operation result.\n", "DHKey": "\nThe interface to a Diffie-Hellman key.\n", "DHPrivateKey": "\nThe interface to a Diffie-Hellman private key.\n", "DHPublicKey": "\nThe interface to a Diffie-Hellman public key.\n", "PBEKey": "\nThe interface to a PBE key.\n", "ChaCha20ParameterSpec": "\nThis class specifies the parameters used with the\n ChaCha20\n algorithm.\n", "DESedeKeySpec": "\nThis class specifies a DES-EDE (\"triple-DES\") key.\n", "DESKeySpec": "\nThis class specifies a DES key.\n", "DHGenParameterSpec": "\nThis class specifies the set of parameters used for generating\n Diffie-Hellman (system) parameters for use in Diffie-Hellman key\n agreement.\n", "DHParameterSpec": "\nThis class specifies the set of parameters used with the Diffie-Hellman\n algorithm, as specified in PKCS #3: Diffie-Hellman Key-Agreement\n Standard.\n", "DHPrivateKeySpec": "\nThis class specifies a Diffie-Hellman private key with its associated\n parameters.\n", "DHPublicKeySpec": "\nThis class specifies a Diffie-Hellman public key with its associated\n parameters.\n", "GCMParameterSpec": "\nSpecifies the set of parameters required by a Cipher using the Galois/Counter Mode (GCM) mode.\n", "IvParameterSpec": "\nThis class specifies an initialization vector (IV).\n", "OAEPParameterSpec": "\nThis class specifies the set of parameters used with OAEP Padding,\n as defined in the\n PKCS#1 v2.2 standard.\n", "PBEKeySpec": "\nA user-chosen password that can be used with password-based encryption\n (PBE).\n", "PBEParameterSpec": "\nThis class specifies the set of parameters used with password-based\n encryption (PBE), as defined in the\n PKCS #5\n standard.\n", "PSource": "\nThis class specifies the source for encoding input P in OAEP Padding,\n as defined in the\n PKCS#1 v2.2 standard.\n", "PSource.PSpecified": "\nThis class is used to explicitly specify the value for\n encoding input P in OAEP Padding.\n", "RC2ParameterSpec": "\nThis class specifies the parameters used with the\n RC2\n algorithm.\n", "RC5ParameterSpec": "\nThis class specifies the parameters used with the\n RC5\n algorithm.\n", "SecretKeySpec": "\nThis class specifies a secret key in a provider-independent fashion.\n", "ServerSocketFactory": "\nThis class creates server sockets.\n", "SocketFactory": "\nThis class creates sockets.\n", "HandshakeCompletedListener": "\nThis interface is implemented by any class which wants to receive\n notifications about the completion of an SSL protocol handshake\n on a given SSL connection.\n", "HostnameVerifier": "\nThis class is the base interface for hostname verification.\n", "KeyManager": "\nThis is the base interface for JSSE key managers.\n", "ManagerFactoryParameters": "\nThis class is the base interface for providing\n algorithm-specific information to a KeyManagerFactory or\n TrustManagerFactory.\n", "SSLSession": "\nIn SSL, sessions are used to describe an ongoing relationship between\n two entities.\n", "SSLSessionBindingListener": "\nThis interface is implemented by objects which want to know when\n they are being bound or unbound from a SSLSession.\n", "SSLSessionContext": "\nA SSLSessionContext represents a set of\n SSLSessions associated with a single entity.\n", "TrustManager": "\nThis is the base interface for JSSE trust managers.\n", "X509KeyManager": "\nInstances of this interface manage which X509 certificate-based\n key pairs are used to authenticate the local side of a secure\n socket.\n", "X509TrustManager": "\nInstance of this interface manage which X509 certificates\n may be used to authenticate the remote side of a secure\n socket.\n", "CertPathTrustManagerParameters": "\nA wrapper for CertPathParameters.\n", "ExtendedSSLSession": "\nExtends the SSLSession interface to support additional\n session attributes.\n", "HandshakeCompletedEvent": "\nThis event indicates that an SSL handshake completed on a given\n SSL connection.\n", "HttpsURLConnection": "\nHttpsURLConnection extends HttpURLConnection\n with support for https-specific features.\n", "KeyManagerFactory": "\nThis class acts as a factory for key managers based on a\n source of key material.\n", "KeyManagerFactorySpi": "\nThis class defines the Service Provider Interface (SPI)\n for the KeyManagerFactory class.\n", "KeyStoreBuilderParameters": "\nA parameters object for X509KeyManagers that encapsulates a List\n of KeyStore.Builders.\n", "SNIHostName": "\nInstances of this class represent a server name of type\n host_name in a Server Name\n Indication (SNI) extension.\n", "SNIMatcher": "\nInstances of this class represent a matcher that performs match\n operations on an SNIServerName instance.\n", "SNIServerName": "\nInstances of this class represent a server name in a Server Name\n Indication (SNI) extension.\n", "SSLContext": "\nInstances of this class represent a secure socket protocol\n implementation which acts as a factory for secure socket\n factories or SSLEngines.\n", "SSLContextSpi": "\nThis class defines the Service Provider Interface (SPI)\n for the SSLContext class.\n", "SSLEngine": "\nA class which enables secure communications using protocols such as\n the Secure Sockets Layer (SSL) or\n  IETF RFC 2246 \"Transport\n Layer Security\" (TLS)  protocols, but is transport independent.\n", "SSLEngineResult": "\nAn encapsulation of the result state produced by\n SSLEngine I/O calls.\n", "SSLParameters": "\nEncapsulates parameters for an SSL/TLS/DTLS connection.\n", "SSLPermission": "\nThis class is for various network permissions.\n", "SSLServerSocket": "\nThis class extends ServerSocket and\n provides secure server sockets using protocols such as the Secure\n Sockets Layer (SSL) or Transport Layer Security (TLS) protocols.\n", "SSLServerSocketFactory": "\nSSLServerSocketFactorys create\n SSLServerSockets.\n", "SSLSessionBindingEvent": "\nThis event is propagated to a SSLSessionBindingListener.\n", "SSLSocket": "\nThis class extends Socket and provides secure\n sockets using protocols such as the \"Secure\n Sockets Layer\" (SSL) or IETF \"Transport Layer Security\" (TLS) protocols.\n", "SSLSocketFactory": "\nSSLSocketFactorys create SSLSockets.\n", "StandardConstants": "\nStandard constants definitions\n", "TrustManagerFactory": "\nThis class acts as a factory for trust managers based on a\n source of trust material.\n", "TrustManagerFactorySpi": "\nThis class defines the Service Provider Interface (SPI)\n for the TrustManagerFactory class.\n", "X509ExtendedKeyManager": "\nAbstract class that provides for extension of the X509KeyManager\n interface.\n", "X509ExtendedTrustManager": "\nExtensions to the X509TrustManager interface to support\n SSL/TLS/DTLS connection sensitive trust management.\n", "SSLEngineResult.HandshakeStatus": "\nAn SSLEngineResult enum describing the current\n handshaking state of this SSLEngine.\n", "SSLEngineResult.Status": "\nAn SSLEngineResult enum describing the overall result\n of the SSLEngine operation.\n", "SSLException": "\nIndicates some kind of error detected by an SSL subsystem.\n", "SSLHandshakeException": "\nIndicates that the client and server could not negotiate the\n desired level of security.\n", "SSLKeyException": "\nReports a bad SSL key.\n", "SSLPeerUnverifiedException": "\nIndicates that the peer's identity has not been verified.\n", "SSLProtocolException": "\nReports an error in the operation of the SSL protocol.\n", "Destroyable": "\nObjects such as credentials may optionally implement this interface\n to provide the capability to destroy its contents.\n", "Refreshable": "\nObjects such as credentials may optionally implement this\n interface to provide the capability to refresh itself.\n", "AuthPermission": "\nThis class is for authentication permissions.\n", "PrivateCredentialPermission": "\nThis class is used to protect access to private Credentials\n belonging to a particular Subject.\n", "Subject": "\n A Subject represents a grouping of related information\n for a single entity, such as a person.\n", "SubjectDomainCombiner": "\nA SubjectDomainCombiner updates ProtectionDomains\n with Principals from the Subject associated with this\n SubjectDomainCombiner.\n", "DestroyFailedException": "\nSignals that a destroy operation failed.\n", "RefreshFailedException": "\nSignals that a refresh operation failed.\n", "Callback": "\n Implementations of this interface are passed to a\n CallbackHandler, allowing underlying security services\n the ability to interact with a calling application to retrieve specific\n authentication data such as usernames and passwords, or to display\n certain information, such as error and warning messages.\n", "CallbackHandler": "\n An application implements a CallbackHandler and passes\n it to underlying security services so that they may interact with\n the application to retrieve specific authentication data,\n such as usernames and passwords, or to display certain information,\n such as error and warning messages.\n", "ChoiceCallback": "\n Underlying security services instantiate and pass a\n ChoiceCallback to the handle\n method of a CallbackHandler to display a list of choices\n and to retrieve the selected choice(s).\n", "ConfirmationCallback": "\n Underlying security services instantiate and pass a\n ConfirmationCallback to the handle\n method of a CallbackHandler to ask for YES/NO,\n OK/CANCEL, YES/NO/CANCEL or other similar confirmations.\n", "LanguageCallback": "\n Underlying security services instantiate and pass a\n LanguageCallback to the handle\n method of a CallbackHandler to retrieve the Locale\n used for localizing text.\n", "NameCallback": "\n Underlying security services instantiate and pass a\n NameCallback to the handle\n method of a CallbackHandler to retrieve name information.\n", "PasswordCallback": "\n Underlying security services instantiate and pass a\n PasswordCallback to the handle\n method of a CallbackHandler to retrieve password information.\n", "TextInputCallback": "\n Underlying security services instantiate and pass a\n TextInputCallback to the handle\n method of a CallbackHandler to retrieve generic text\n information.\n", "TextOutputCallback": "\n Underlying security services instantiate and pass a\n TextOutputCallback to the handle\n method of a CallbackHandler to display information messages,\n warning messages and error messages.\n", "UnsupportedCallbackException": "\nSignals that a CallbackHandler does not\n recognize a particular Callback.\n", "Configuration.Parameters": "\nThis represents a marker interface for Configuration parameters.\n", "AppConfigurationEntry": "\nThis class represents a single LoginModule entry\n configured for the application specified in the\n getAppConfigurationEntry(String appName)\n method in the Configuration class.\n", "AppConfigurationEntry.LoginModuleControlFlag": "\nThis class represents whether or not a LoginModule\n is REQUIRED, REQUISITE, SUFFICIENT or OPTIONAL.\n", "ConfigurationSpi": "\nThis class defines the Service Provider Interface (SPI)\n for the Configuration class.\n", "LoginContext": "\n The LoginContext class describes the basic methods used\n to authenticate Subjects and provides a way to develop an\n application independent of the underlying authentication technology.\n", "AccountException": "\nA generic account exception.\n", "AccountExpiredException": "\nSignals that a user account has expired.\n", "AccountLockedException": "\nSignals that an account was locked.\n", "AccountNotFoundException": "\nSignals that an account was not found.\n", "CredentialException": "\nA generic credential exception.\n", "CredentialExpiredException": "\nSignals that a Credential has expired.\n", "CredentialNotFoundException": "\nSignals that a credential was not found.\n", "FailedLoginException": "\nSignals that user authentication failed.\n", "LoginException": "\nThis is the basic login exception.\n", "X500Principal": "\n This class represents an X.500 Principal.\n", "X500PrivateCredential": "\n This class represents an X500PrivateCredential.\n", "javax.annotation.processing": "\nFacilities for declaring annotation processors and for\n allowing annotation processors to communicate with an annotation processing\n tool environment.\n/\nFacilities for declaring annotation processors and for\n allowing annotation processors to communicate with an annotation processing\n tool environment.\n", "javax.lang.model": "\nClasses and hierarchies of packages used to model the Java\n programming language.\n/\nClasses and hierarchies of packages used to model the Java\n programming language.\n", "javax.lang.model.element": "\nInterfaces used to model elements of the Java programming language.\n/\nInterfaces used to model elements of the Java programming language.\n", "javax.lang.model.type": "\nInterfaces used to model Java programming language types.\n/\nInterfaces used to model Java programming language types.\n", "javax.lang.model.util": "\nUtilities to assist in the processing of\n program elements and\n types.\n/\nUtilities to assist in the processing of\n program elements and\n types.\n", "javax.tools": "\nProvides interfaces for tools which can be invoked from a program,\n for example, compilers.\n/\nProvides interfaces for tools which can be invoked from a program,\n for example, compilers.\n", "Completion": "\nA suggested completion for an\n annotation.\n", "Filer": "\nThis interface supports the creation of new files by an annotation\n processor.\n", "Messager": "\nA Messager provides the way for an annotation processor to\n report error messages, warnings, and other notices.\n", "ProcessingEnvironment": "\nAn annotation processing tool framework will provide an annotation processor with an object\n implementing this interface so the processor can use facilities\n provided by the framework to write new files, report error\n messages, and find other utilities.\n", "Processor": "\nThe interface for an annotation processor.\n/\nThe interface for an annotation processor.\n", "RoundEnvironment": "\nAn annotation processing tool framework will provide an annotation processor with an object\n implementing this interface so that the processor can query for\n information about a round of annotation processing.\n", "AbstractProcessor": "\nAn abstract annotation processor designed to be a convenient\n superclass for most concrete annotation processors.\n", "Completions": "\nUtility class for assembling Completion objects.\n", "FilerException": "\nIndicates a Filer detected an attempt to open a file that\n would violate the guarantees provided by the Filer.\n", "Generated": "\nThe Generated annotation is used to mark source code that has been generated.\n", "SupportedAnnotationTypes": "\nAn annotation used to indicate what annotation types an annotation\n processor supports.\n", "SupportedOptions": "\nAn annotation used to indicate what options an annotation processor\n supports.\n", "SupportedSourceVersion": "\nAn annotation used to indicate the latest source version an\n annotation processor supports.\n", "AnnotatedConstruct": "\nRepresents a construct that can be annotated.\n", "SourceVersion": "\nSource versions of the Java\u2122 programming language.\n", "UnknownEntityException": "\nSuperclass of exceptions which indicate that an unknown kind of\n entity was encountered.\n", "AnnotationMirror": "\nRepresents an annotation.\n", "AnnotationValue": "\nRepresents a value of an annotation type element.\n/Deprecated, for removal: This API element is subject to removal in a future version.\nThe declarations in this package have been superseded by those\n   in the package jdk.javadoc.doclet.\n", "AnnotationValueVisitor<R,\u200bP>": "\nA visitor of the values of annotation type elements, using a\n variant of the visitor design pattern.\n", "Element": "\nRepresents a program element such as a module, package, class, or method.\n/\nInterface to describe a structural piece of a document.\n/\nAn element as described in a DTD using the ELEMENT construct.\n/\nThe Element interface represents an element in an HTML or XML\n document.\n", "ElementVisitor<R,\u200bP>": "\nA visitor of program elements, in the style of the visitor design\n pattern.\n", "ExecutableElement": "\nRepresents a method, constructor, or initializer (static or\n instance) of a class or interface, including annotation type\n elements.\n", "ModuleElement": "\nRepresents a module program element.\n", "ModuleElement.Directive": "\nRepresents a directive within the declaration of this\n module.\n", "ModuleElement.DirectiveVisitor<R,\u200bP>": "\nA visitor of module directives, in the style of the visitor design\n pattern.\n", "ModuleElement.ExportsDirective": "\nAn exported package of a module.\n", "ModuleElement.OpensDirective": "\nAn opened package of a module.\n", "ModuleElement.ProvidesDirective": "\nAn implementation of a service provided by a module.\n", "ModuleElement.RequiresDirective": "\nA dependency of a module.\n", "ModuleElement.UsesDirective": "\nA reference to a service used by a module.\n", "Name": "\nAn immutable sequence of characters.\n/\nThe Name interface represents a generic name -- an ordered\n sequence of components.\n/\nAnnotation that overrides the default name for an element (for example, when\n the default package for an event is not appropriate).\n", "PackageElement": "\nRepresents a package program element.\n", "Parameterizable": "\nA mixin interface for an element that has type parameters.\n", "QualifiedNameable": "\nA mixin interface for an element that has a qualified name.\n", "TypeElement": "\nRepresents a class or interface program element.\n", "TypeParameterElement": "\nRepresents a formal type parameter of a generic class, interface, method,\n or constructor element.\n", "VariableElement": "\nRepresents a field, enum constant, method or constructor\n parameter, local variable, resource variable, or exception\n parameter.\n", "ElementKind": "\nThe kind of an element.\n", "ModuleElement.DirectiveKind": "\nThe kind of a directive.\n", "NestingKind": "\nThe nesting kind of a type element.\n", "UnknownAnnotationValueException": "\nIndicates that an unknown kind of annotation value was encountered.\n", "UnknownDirectiveException": "\nIndicates that an unknown kind of module directive was encountered.\n", "UnknownElementException": "\nIndicates that an unknown kind of element was encountered.\n", "ArrayType": "\nRepresents an array type.\n/\nProvides access to the class of an array and the type of\n its components in the target VM.\n", "DeclaredType": "\nRepresents a declared type, either a class type or an interface type.\n", "ErrorType": "\nRepresents a class or interface type that cannot be properly modeled.\n", "ExecutableType": "\nRepresents the type of an executable.\n", "IntersectionType": "\nRepresents an intersection type.\n", "NoType": "\nA pseudo-type used where no actual type is appropriate.\n", "NullType": "\nRepresents the null type.\n", "PrimitiveType": "\nRepresents a primitive type.\n/\nThe type associated with non-object values in a target VM.\n", "ReferenceType": "\nRepresents a reference type.\n/\nThe type of an object in a target VM.\n", "TypeMirror": "\nRepresents a type in the Java programming language.\n", "TypeVariable": "\nRepresents a type variable.\n/Deprecated, for removal: This API element is subject to removal in a future version.\nThe declarations in this package have been superseded by those\n   in the package jdk.javadoc.doclet.\n", "TypeVisitor<R,\u200bP>": "\nA visitor of types, in the style of the\n visitor design pattern.\n", "UnionType": "\nRepresents a union type.\n", "TypeKind": "\nThe kind of a type mirror.\n", "MirroredTypeException": "\nThrown when an application attempts to access the Class object\n corresponding to a TypeMirror.\n", "MirroredTypesException": "\nThrown when an application attempts to access a sequence of Class objects each corresponding to a TypeMirror.\n", "UnknownTypeException": "\nIndicates that an unknown kind of type was encountered.\n", "Elements": "\nUtility methods for operating on program elements.\n", "Types": "\nUtility methods for operating on types.\n/\nThe class that defines the constants that are used to identify generic\n SQL types, called JDBC types.\n", "AbstractAnnotationValueVisitor6<R,\u200bP>": "\nA skeletal visitor for annotation values with default behavior\n appropriate for the RELEASE_6\n source version.\n", "AbstractAnnotationValueVisitor7<R,\u200bP>": "\nA skeletal visitor for annotation values with default behavior\n appropriate for the RELEASE_7\n source version.\n", "AbstractAnnotationValueVisitor8<R,\u200bP>": "\nA skeletal visitor for annotation values with default behavior\n appropriate for the RELEASE_8\n source version.\n", "AbstractAnnotationValueVisitor9<R,\u200bP>": "\nA skeletal visitor for annotation values with default behavior\n appropriate for source versions RELEASE_9 through RELEASE_12.\n", "AbstractElementVisitor6<R,\u200bP>": "\nA skeletal visitor of program elements with default behavior\n appropriate for the RELEASE_6\n source version.\n", "AbstractElementVisitor7<R,\u200bP>": "\nA skeletal visitor of program elements with default behavior\n appropriate for the RELEASE_7\n source version.\n", "AbstractElementVisitor8<R,\u200bP>": "\nA skeletal visitor of program elements with default behavior\n appropriate for the RELEASE_8\n source version.\n", "AbstractElementVisitor9<R,\u200bP>": "\nA skeletal visitor of program elements with default behavior\n appropriate for source versions RELEASE_9 through RELEASE_12.\n", "AbstractTypeVisitor6<R,\u200bP>": "\nA skeletal visitor of types with default behavior appropriate for\n the RELEASE_6\n source version.\n", "AbstractTypeVisitor7<R,\u200bP>": "\nA skeletal visitor of types with default behavior appropriate for\n the RELEASE_7\n source version.\n", "AbstractTypeVisitor8<R,\u200bP>": "\nA skeletal visitor of types with default behavior appropriate for\n the RELEASE_8\n source version.\n", "AbstractTypeVisitor9<R,\u200bP>": "\nA skeletal visitor of types with default behavior appropriate for\n source versions RELEASE_9 through\n RELEASE_12.\n", "ElementFilter": "\nFilters for selecting just the elements of interest from a\n collection of elements.\n", "ElementKindVisitor6<R,\u200bP>": "\nA visitor of program elements based on their kind with default behavior appropriate for the RELEASE_6 source version.\n", "ElementKindVisitor7<R,\u200bP>": "\nA visitor of program elements based on their kind with default behavior appropriate for the RELEASE_7 source version.\n", "ElementKindVisitor8<R,\u200bP>": "\nA visitor of program elements based on their kind with default behavior appropriate for the RELEASE_8 source version.\n", "ElementKindVisitor9<R,\u200bP>": "\nA visitor of program elements based on their kind with default behavior appropriate for source\n versions RELEASE_9 through RELEASE_12.\n", "ElementScanner6<R,\u200bP>": "\nA scanning visitor of program elements with default behavior\n appropriate for the RELEASE_6\n source version.\n", "ElementScanner7<R,\u200bP>": "\nA scanning visitor of program elements with default behavior\n appropriate for the RELEASE_7\n source version.\n", "ElementScanner8<R,\u200bP>": "\nA scanning visitor of program elements with default behavior\n appropriate for the RELEASE_8\n source version.\n", "ElementScanner9<R,\u200bP>": "\nA scanning visitor of program elements with default behavior\n appropriate for source versions RELEASE_9 through RELEASE_12.\n", "SimpleAnnotationValueVisitor6<R,\u200bP>": "\nA simple visitor for annotation values with default behavior\n appropriate for the RELEASE_6\n source version.\n", "SimpleAnnotationValueVisitor7<R,\u200bP>": "\nA simple visitor for annotation values with default behavior\n appropriate for the RELEASE_7\n source version.\n", "SimpleAnnotationValueVisitor8<R,\u200bP>": "\nA simple visitor for annotation values with default behavior\n appropriate for the RELEASE_8\n source version.\n", "SimpleAnnotationValueVisitor9<R,\u200bP>": "\nA simple visitor for annotation values with default behavior\n appropriate for source versions RELEASE_9 through RELEASE_12.\n", "SimpleElementVisitor6<R,\u200bP>": "\nA simple visitor of program elements with default behavior\n appropriate for the RELEASE_6\n source version.\n", "SimpleElementVisitor7<R,\u200bP>": "\nA simple visitor of program elements with default behavior\n appropriate for the RELEASE_7\n source version.\n", "SimpleElementVisitor8<R,\u200bP>": "\nA simple visitor of program elements with default behavior\n appropriate for the RELEASE_8\n source version.\n", "SimpleElementVisitor9<R,\u200bP>": "\nA simple visitor of program elements with default behavior\n appropriate for source versions RELEASE_9 through RELEASE_12.\n", "SimpleTypeVisitor6<R,\u200bP>": "\nA simple visitor of types with default behavior appropriate for the\n RELEASE_6 source version.\n", "SimpleTypeVisitor7<R,\u200bP>": "\nA simple visitor of types with default behavior appropriate for the\n RELEASE_7 source version.\n", "SimpleTypeVisitor8<R,\u200bP>": "\nA simple visitor of types with default behavior appropriate for the\n RELEASE_8 source version.\n", "SimpleTypeVisitor9<R,\u200bP>": "\nA simple visitor of types with default behavior appropriate for\n source versions RELEASE_9 through\n RELEASE_12.\n", "TypeKindVisitor6<R,\u200bP>": "\nA visitor of types based on their kind with\n default behavior appropriate for the RELEASE_6 source version.\n", "TypeKindVisitor7<R,\u200bP>": "\nA visitor of types based on their kind with\n default behavior appropriate for the RELEASE_7 source version.\n", "TypeKindVisitor8<R,\u200bP>": "\nA visitor of types based on their kind with\n default behavior appropriate for the RELEASE_8 source version.\n", "TypeKindVisitor9<R,\u200bP>": "\nA visitor of types based on their kind with\n default behavior appropriate for source versions RELEASE_9 through RELEASE_12.\n", "Elements.Origin": "\nThe origin of an element or other language model\n item.\n", "Diagnostic<S>": "\nInterface for diagnostics from tools.\n", "DiagnosticListener<S>": "\nInterface for receiving diagnostics from tools.\n", "DocumentationTool": "\nInterface to invoke Java\u2122 programming language documentation tools from\n programs.\n/\u00a0", "DocumentationTool.DocumentationTask": "\nInterface representing a future for a documentation task.\n", "FileObject": "\nFile abstraction for tools.\n", "JavaCompiler": "\nInterface to invoke Java\u2122 programming language compilers from\n programs.\n/\u00a0", "JavaCompiler.CompilationTask": "\nInterface representing a future for a compilation task.\n", "JavaFileManager": "\nFile manager for tools operating on Java\u2122 programming language\n source and class files.\n", "JavaFileManager.Location": "\nInterface for locations of file objects.\n", "JavaFileObject": "\nFile abstraction for tools operating on Java\u2122 programming language\n source and class files.\n", "OptionChecker": "\nInterface for recognizing options.\n", "StandardJavaFileManager": "\nFile manager based on java.io.File and java.nio.file.Path.\n", "StandardJavaFileManager.PathFactory": "\nFactory to create Path objects from strings.\n", "Tool": "\nCommon interface for tools that can be invoked from a program.\n/\u00a0/\u00a0/\u00a0", "DiagnosticCollector<S>": "\nProvides an easy way to collect diagnostics in a list.\n", "ForwardingFileObject<F extends FileObject>": "\nForwards calls to a given file object.\n", "ForwardingJavaFileManager<M extends JavaFileManager>": "\nForwards calls to a given file manager.\n", "ForwardingJavaFileObject<F extends JavaFileObject>": "\nForwards calls to a given file object.\n", "SimpleJavaFileObject": "\nProvides simple implementations for most methods in JavaFileObject.\n", "Diagnostic.Kind": "\nKinds of diagnostics, for example, error or warning.\n/Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "DocumentationTool.Location": "\nLocations specific to DocumentationTool.\n", "JavaFileObject.Kind": "\nKinds of JavaFileObjects.\n", "StandardLocation": "\nStandard locations of file objects.\n", "java.awt.datatransfer": "\nProvides interfaces and classes for transferring data between and within\n applications.\n/\nProvides interfaces and classes for transferring data between and within\n applications.\n", "ClipboardOwner": "\nDefines the interface for classes that will provide data to a clipboard.\n", "FlavorListener": "\nDefines an object which listens for FlavorEvents.\n", "FlavorMap": "\nA two-way Map between \"natives\" (Strings), which correspond to\n platform-specific data formats, and \"flavors\" (DataFlavors), which correspond\n to platform-independent MIME types.\n", "FlavorTable": "\nA FlavorMap which relaxes the traditional 1-to-1 restriction of a Map.\n", "Transferable": "\nDefines the interface for classes that can be used to provide data for a\n transfer operation.\n", "Clipboard": "\nA class that implements a mechanism to transfer data using cut/copy/paste\n operations.\n", "DataFlavor": "\nA DataFlavor provides meta information about data.\n", "FlavorEvent": "\nFlavorEvent is used to notify interested parties that available\n DataFlavors have changed in the Clipboard (the event source).\n", "StringSelection": "\nA Transferable which implements the capability required to transfer a\n String.\n", "SystemFlavorMap": "\nThe SystemFlavorMap is a configurable map between \"natives\" (Strings), which\n correspond to platform-specific data formats, and \"flavors\" (DataFlavors),\n which correspond to platform-independent MIME types.\n", "MimeTypeParseException": "\nA class to encapsulate MimeType parsing related exceptions.\n", "UnsupportedFlavorException": "\nSignals that the requested data is not supported in this flavor.\n", "java.applet": "\nProvides the classes necessary to create an applet and the classes an applet\n uses to communicate with its applet context.\n/\nProvides the classes necessary to create an applet and the classes an applet\n uses to communicate with its applet context.\n", "java.awt": "\nContains all of the classes for creating user interfaces and for painting\n graphics and images.\n/\nContains all of the classes for creating user interfaces and for painting\n graphics and images.\n", "java.awt.color": "\nProvides classes for color spaces.\n/\nProvides classes for color spaces.\n", "java.awt.desktop": "\nProvides interfaces and classes for interaction with various desktop\n capabilities.\n/\nProvides interfaces and classes for interaction with various desktop\n capabilities.\n", "java.awt.dnd": "\nDrag and Drop is a direct manipulation gesture found in many Graphical User\n Interface systems that provides a mechanism to transfer information between\n two entities logically associated with presentation elements in the GUI.\n/\nDrag and Drop is a direct manipulation gesture found in many Graphical User\n Interface systems that provides a mechanism to transfer information between\n two entities logically associated with presentation elements in the GUI.\n", "java.awt.event": "\nProvides interfaces and classes for dealing with different types of events\n fired by AWT components.\n/\nProvides interfaces and classes for dealing with different types of events\n fired by AWT components.\n", "java.awt.font": "\nProvides classes and interface relating to fonts.\n/\nProvides classes and interface relating to fonts.\n", "java.awt.geom": "\nProvides the Java 2D classes for defining and performing operations on\n objects related to two-dimensional geometry.\n/\nProvides the Java 2D classes for defining and performing operations on\n objects related to two-dimensional geometry.\n", "java.awt.im": "\nProvides classes and interfaces for the input method framework.\n/\nProvides classes and interfaces for the input method framework.\n", "java.awt.im.spi": "\nProvides interfaces that enable the development of input methods that can be\n used with any Java runtime environment.\n/\nProvides interfaces that enable the development of input methods that can be\n used with any Java runtime environment.\n", "java.awt.image": "\nProvides classes for creating and modifying images.\n/\nProvides classes for creating and modifying images.\n", "java.awt.image.renderable": "\nProvides classes and interfaces for producing rendering-independent images.\n/\nProvides classes and interfaces for producing rendering-independent images.\n", "java.awt.print": "\nProvides classes and interfaces for a general printing API.\n/\nProvides classes and interfaces for a general printing API.\n", "java.beans": "\nContains classes related to developing beans -- components based on\n the JavaBeans\u2122 architecture.\n/\nContains classes related to developing beans -- components based on\n the JavaBeans\u2122 architecture.\n", "java.beans.beancontext": "\nProvides classes and interfaces relating to bean context.\n/\nProvides classes and interfaces relating to bean context.\n", "javax.accessibility": "\nDefines a contract between user-interface components and an assistive\n technology that provides access to those components.\n/\nDefines a contract between user-interface components and an assistive\n technology that provides access to those components.\n", "javax.imageio": "\nThe main package of the Java Image I/O API.\n/\nThe main package of the Java Image I/O API.\n", "javax.imageio.event": "\nA package of the Java Image I/O API dealing with synchronous notification of\n events during the reading and writing of images.\n/\nA package of the Java Image I/O API dealing with synchronous notification of\n events during the reading and writing of images.\n", "javax.imageio.metadata": "\nA package of the Java Image I/O API dealing with reading and writing\n metadata.\n/\nA package of the Java Image I/O API dealing with reading and writing\n metadata.\n", "javax.imageio.plugins.bmp": "\nPackage containing the public classes used by the built-in BMP plug-in.\n/\nPackage containing the public classes used by the built-in BMP plug-in.\n", "javax.imageio.plugins.jpeg": "\nClasses supporting the built-in JPEG plug-in.\n/\nClasses supporting the built-in JPEG plug-in.\n", "javax.imageio.plugins.tiff": "\nPublic classes used by the built-in TIFF plug-ins.\n/\nPublic classes used by the built-in TIFF plug-ins.\n", "javax.imageio.spi": "\nA package of the Java Image I/O API containing the plug-in interfaces for\n readers, writers, transcoders, and streams, and a runtime registry.\n/\nA package of the Java Image I/O API containing the plug-in interfaces for\n readers, writers, transcoders, and streams, and a runtime registry.\n", "javax.imageio.stream": "\nA package of the Java Image I/O API dealing with low-level I/O from files and\n streams.\n/\nA package of the Java Image I/O API dealing with low-level I/O from files and\n streams.\n", "javax.print": "\nProvides the principal classes and interfaces for the Java\u2122 Print\n Service API.\n/\nProvides the principal classes and interfaces for the Java\u2122 Print\n Service API.\n", "javax.print.attribute": "\nProvides classes and interfaces that describe the types of Java\u2122 Print\n Service attributes and how they can be collected into attribute sets.\n/\nProvides classes and interfaces that describe the types of Java\u2122 Print\n Service attributes and how they can be collected into attribute sets.\n", "javax.print.attribute.standard": "\nPackage javax.print.attribute.standard contains classes for specific\n printing attributes.\n/\nPackage javax.print.attribute.standard contains classes for specific\n printing attributes.\n", "javax.print.event": "\nPackage javax.print.event contains event classes and listener\n interfaces.\n/\nPackage javax.print.event contains event classes and listener\n interfaces.\n", "javax.sound.midi": "\nProvides interfaces and classes for I/O, sequencing, and synthesis of MIDI\n (Musical Instrument Digital Interface) data.\n/\nProvides interfaces and classes for I/O, sequencing, and synthesis of MIDI\n (Musical Instrument Digital Interface) data.\n", "javax.sound.midi.spi": "\nSupplies interfaces for service providers to implement when offering new MIDI\n devices, MIDI file readers and writers, or sound bank readers.\n/\nSupplies interfaces for service providers to implement when offering new MIDI\n devices, MIDI file readers and writers, or sound bank readers.\n", "javax.sound.sampled": "\nProvides interfaces and classes for capture, processing, and playback of\n sampled audio data.\n/\nProvides interfaces and classes for capture, processing, and playback of\n sampled audio data.\n", "javax.sound.sampled.spi": "\nSupplies abstract classes for service providers to subclass when offering new\n audio devices, sound file readers and writers, or audio format converters.\n/\nSupplies abstract classes for service providers to subclass when offering new\n audio devices, sound file readers and writers, or audio format converters.\n", "javax.swing": "\nProvides a set of \"lightweight\" (all-Java language) components\n that, to the maximum degree possible, work the same on all platforms.\n/\nProvides a set of \"lightweight\" (all-Java language) components\n that, to the maximum degree possible, work the same on all platforms.\n", "javax.swing.border": "\nProvides classes and interface for drawing specialized borders around a Swing\n component.\n/\nProvides classes and interface for drawing specialized borders around a Swing\n component.\n", "javax.swing.colorchooser": "\nContains classes and interfaces used by the JColorChooser component.\n/\nContains classes and interfaces used by the JColorChooser component.\n", "javax.swing.event": "\nProvides for events fired by Swing components.\n/\nProvides for events fired by Swing components.\n", "javax.swing.filechooser": "\nContains classes and interfaces used by the JFileChooser component.\n/\nContains classes and interfaces used by the JFileChooser component.\n", "javax.swing.plaf": "\nProvides one interface and many abstract classes that Swing uses to provide\n its pluggable look-and-feel capabilities.\n/\nProvides one interface and many abstract classes that Swing uses to provide\n its pluggable look-and-feel capabilities.\n", "javax.swing.plaf.basic": "\nProvides user interface objects built according to the Basic look and feel.\n/\nProvides user interface objects built according to the Basic look and feel.\n", "javax.swing.plaf.metal": "\nProvides user interface objects built according to the Java look and feel\n (once codenamed Metal), which is the default look and feel.\n/\nProvides user interface objects built according to the Java look and feel\n (once codenamed Metal), which is the default look and feel.\n", "javax.swing.plaf.multi": "\nProvides user interface objects that combine two or more look and feels.\n/\nProvides user interface objects that combine two or more look and feels.\n", "javax.swing.plaf.nimbus": "\nProvides user interface objects built according to the cross-platform Nimbus\n look and feel.\n/\nProvides user interface objects built according to the cross-platform Nimbus\n look and feel.\n", "javax.swing.plaf.synth": "\nSynth is a skinnable look and feel in which all painting is delegated.\n/\nSynth is a skinnable look and feel in which all painting is delegated.\n", "javax.swing.table": "\nProvides classes and interfaces for dealing with javax.swing.JTable.\n/\nProvides classes and interfaces for dealing with javax.swing.JTable.\n", "javax.swing.text": "\nProvides classes and interfaces that deal with editable and noneditable text\n components.\n/\nProvides classes and interfaces that deal with editable and noneditable text\n components.\n", "javax.swing.text.html": "\nProvides the class HTMLEditorKit and supporting classes for creating\n HTML text editors.\n/\nProvides the class HTMLEditorKit and supporting classes for creating\n HTML text editors.\n", "javax.swing.text.html.parser": "\nProvides the default HTML parser, along with support classes.\n/\nProvides the default HTML parser, along with support classes.\n", "javax.swing.text.rtf": "\nProvides a class (RTFEditorKit) for creating Rich-Text-Format text\n editors.\n/\nProvides a class (RTFEditorKit) for creating Rich-Text-Format text\n editors.\n", "javax.swing.tree": "\nProvides classes and interfaces for dealing with javax.swing.JTree.\n/\nProvides classes and interfaces for dealing with javax.swing.JTree.\n", "javax.swing.undo": "\nAllows developers to provide support for undo/redo in applications such as\n text editors.\n/\nAllows developers to provide support for undo/redo in applications such as\n text editors.\n", "AccessibilityProvider": "\nService Provider Interface (SPI) for Assistive Technology.\n/\nService Provider Interface (SPI) for Assistive Technology.\n/\nService Provider Interface (SPI) for Assistive Technology.\n", "AudioFileReader": "\nProvider for audio file reading services.\n/\nProvider for audio file reading services.\n/\nProvider for audio file reading services.\n", "AudioFileWriter": "\nProvider for audio file writing services.\n/\nProvider for audio file writing services.\n/\nProvider for audio file writing services.\n", "FormatConversionProvider": "\nA format conversion provider provides format conversion services from one or\n more input formats to one or more output formats.\n/\nA format conversion provider provides format conversion services from one or\n more input formats to one or more output formats.\n/\nA format conversion provider provides format conversion services from one or\n more input formats to one or more output formats.\n", "ImageInputStreamSpi": "\nThe service provider interface (SPI) for\n ImageInputStreams.\n/\nThe service provider interface (SPI) for\n ImageInputStreams.\n/\nThe service provider interface (SPI) for\n ImageInputStreams.\n", "ImageOutputStreamSpi": "\nThe service provider interface (SPI) for\n ImageOutputStreams.\n/\nThe service provider interface (SPI) for\n ImageOutputStreams.\n/\nThe service provider interface (SPI) for\n ImageOutputStreams.\n", "ImageReaderSpi": "\nThe service provider interface (SPI) for ImageReaders.\n/\nThe service provider interface (SPI) for ImageReaders.\n/\nThe service provider interface (SPI) for ImageReaders.\n", "ImageTranscoderSpi": "\nThe service provider interface (SPI) for ImageTranscoders.\n/\nThe service provider interface (SPI) for ImageTranscoders.\n/\nThe service provider interface (SPI) for ImageTranscoders.\n", "ImageWriterSpi": "\nThe service provider interface (SPI) for ImageWriters.\n/\nThe service provider interface (SPI) for ImageWriters.\n/\nThe service provider interface (SPI) for ImageWriters.\n", "InputMethodDescriptor": "\nDefines methods that provide sufficient information about an input method\n to enable selection and loading of that input method.\n/\nDefines methods that provide sufficient information about an input method\n to enable selection and loading of that input method.\n/\nDefines methods that provide sufficient information about an input method\n to enable selection and loading of that input method.\n", "MidiDeviceProvider": "\nA MidiDeviceProvider is a factory or provider for a particular type\n of MIDI device.\n/\nA MidiDeviceProvider is a factory or provider for a particular type\n of MIDI device.\n/\nA MidiDeviceProvider is a factory or provider for a particular type\n of MIDI device.\n", "MidiFileReader": "\nA MidiFileReader supplies MIDI file-reading services.\n/\nA MidiFileReader supplies MIDI file-reading services.\n/\nA MidiFileReader supplies MIDI file-reading services.\n", "MidiFileWriter": "\nA MidiFileWriter supplies MIDI file-writing services.\n/\nA MidiFileWriter supplies MIDI file-writing services.\n/\nA MidiFileWriter supplies MIDI file-writing services.\n", "MixerProvider": "\nA provider or factory for a particular mixer type.\n/\nA provider or factory for a particular mixer type.\n/\nA provider or factory for a particular mixer type.\n", "PrintServiceLookup": "\nImplementations of this class provide lookup services for print services\n (typically equivalent to printers) of a particular type.\n/\nImplementations of this class provide lookup services for print services\n (typically equivalent to printers) of a particular type.\n/\nImplementations of this class provide lookup services for print services\n (typically equivalent to printers) of a particular type.\n", "SoundbankReader": "\nA SoundbankReader supplies soundbank file-reading services.\n/\nA SoundbankReader supplies soundbank file-reading services.\n/\nA SoundbankReader supplies soundbank file-reading services.\n", "StreamPrintServiceFactory": "\nA StreamPrintServiceFactory is the factory for\n StreamPrintService instances, which can print to an output stream in\n a particular document format described as a mime type.\n/\nA StreamPrintServiceFactory is the factory for\n StreamPrintService instances, which can print to an output stream in\n a particular document format described as a mime type.\n/\nA StreamPrintServiceFactory is the factory for\n StreamPrintService instances, which can print to an output stream in\n a particular document format described as a mime type.\n", "AppletContext": "Deprecated.\nThe Applet API is deprecated, no replacement.\n", "AppletStub": "Deprecated.\nThe Applet API is deprecated, no replacement.\n", "AudioClip": "Deprecated.\nThe Applet API is deprecated, no replacement.\n", "Applet": "Deprecated.\nThe Applet API is deprecated, no replacement.\n", "ActiveEvent": "\nAn interface for events that know how to dispatch themselves.\n", "Adjustable": "\nThe interface for objects which have an adjustable numeric value\n contained within a bounded range of values.\n", "Composite": "\nThe Composite interface, along with\n CompositeContext, defines the methods to compose a draw\n primitive with the underlying graphics area.\n", "CompositeContext": "\nThe CompositeContext interface defines the encapsulated\n and optimized environment for a compositing operation.\n", "ItemSelectable": "\nThe interface for objects which contain a set of items for\n which zero or more can be selected.\n", "KeyEventDispatcher": "\nA KeyEventDispatcher cooperates with the current KeyboardFocusManager in the\n targeting and dispatching of all KeyEvents.\n", "KeyEventPostProcessor": "\nA KeyEventPostProcessor cooperates with the current KeyboardFocusManager\n in the final resolution of all unconsumed KeyEvents.\n", "LayoutManager": "\nDefines the interface for classes that know how to lay out\n Containers.\n", "LayoutManager2": "\nDefines an interface for classes that know how to layout Containers\n based on a layout constraints object.\n", "MenuContainer": "\nThe super class of all menu related containers.\n", "Paint": "\nThis Paint interface defines how color patterns\n can be generated for Graphics2D operations.\n", "PaintContext": "\nThe PaintContext interface defines the encapsulated\n and optimized environment to generate color patterns in device\n space for fill or stroke operations on a\n Graphics2D.\n", "PrintGraphics": "\nAn abstract class which provides a print graphics context for a page.\n", "SecondaryLoop": "\nA helper interface to run the nested event loop.\n", "Shape": "\nThe Shape interface provides definitions for objects\n that represent some form of geometric shape.\n", "Stroke": "\nThe Stroke interface allows a\n Graphics2D object to obtain a Shape that is the\n decorated outline, or stylistic representation of the outline,\n of the specified Shape.\n", "Transparency": "\nThe Transparency interface defines the common transparency\n modes for implementing classes.\n", "AlphaComposite": "\nThe AlphaComposite class implements basic alpha\n compositing rules for combining source and destination colors\n to achieve blending and transparency effects with graphics and\n images.\n", "AWTEvent": "\nThe root event class for all AWT events.\n", "AWTEventMulticaster": "\nAWTEventMulticaster implements efficient and thread-safe multi-cast\n event dispatching for the AWT events defined in the java.awt.event\n package.\n", "AWTKeyStroke": "\nAn AWTKeyStroke represents a key action on the\n keyboard, or equivalent input device.\n", "AWTPermission": "\nThis class is for AWT permissions.\n", "BasicStroke": "\nThe BasicStroke class defines a basic set of rendering\n attributes for the outlines of graphics primitives, which are rendered\n with a Graphics2D object that has its Stroke attribute set to\n this BasicStroke.\n", "BorderLayout": "\nA border layout lays out a container, arranging and resizing\n its components to fit in five regions:\n north, south, east, west, and center.\n", "BufferCapabilities": "\nCapabilities and properties of buffers.\n", "BufferCapabilities.FlipContents": "\nA type-safe enumeration of the possible back buffer contents after\n page-flipping\n", "Button": "\nThis class creates a labeled button.\n", "Canvas": "\nA Canvas component represents a blank rectangular\n area of the screen onto which the application can draw or from\n which the application can trap input events from the user.\n", "CardLayout": "\nA CardLayout object is a layout manager for a\n container.\n", "Checkbox": "\nA check box is a graphical component that can be in either an\n \"on\" (true) or \"off\" (false) state.\n", "CheckboxGroup": "\nThe CheckboxGroup class is used to group together\n a set of Checkbox buttons.\n", "CheckboxMenuItem": "\nThis class represents a check box that can be included in a menu.\n", "Choice": "\nThe Choice class presents a pop-up menu of choices.\n", "Color": "\nThe Color class is used to encapsulate colors in the default\n sRGB color space or colors in arbitrary color spaces identified by a\n ColorSpace.\n", "Component": "\nA component is an object having a graphical representation\n that can be displayed on the screen and that can interact with the\n user.\n", "ComponentOrientation": "\nThe ComponentOrientation class encapsulates the language-sensitive\n orientation that is to be used to order the elements of a component\n or of text.\n", "Container": "\nA generic Abstract Window Toolkit(AWT) container object is a component\n that can contain other AWT components.\n", "ContainerOrderFocusTraversalPolicy": "\nA FocusTraversalPolicy that determines traversal order based on the order\n of child Components in a Container.\n", "Cursor": "\nA class to encapsulate the bitmap representation of the mouse cursor.\n", "DefaultFocusTraversalPolicy": "\nA FocusTraversalPolicy that determines traversal order based on the order\n of child Components in a Container.\n", "DefaultKeyboardFocusManager": "\nThe default KeyboardFocusManager for AWT applications.\n", "Desktop": "\nThe Desktop class allows interact with various desktop capabilities.\n", "Dialog": "\nA Dialog is a top-level window with a title and a border\n that is typically used to take some form of input from the user.\n", "Dimension": "\nThe Dimension class encapsulates the width and\n height of a component (in integer precision) in a single object.\n", "DisplayMode": "\nThe DisplayMode class encapsulates the bit depth, height,\n width, and refresh rate of a GraphicsDevice.\n", "Event": "Deprecated.\nIt is recommended that AWTEvent and its subclasses be\n             used instead\n/\nThe Event interface is used to provide contextual information\n about an event to the handler processing the event.\n/\nAn occurrence in a target VM that is of interest to a debugger.\n/\nBase class for events, to be subclassed in order to define events and their\n fields.\n", "EventQueue": "\nEventQueue is a platform-independent class\n that queues events, both from the underlying peer classes\n and from trusted application classes.\n/\nManager of incoming debugger events for a target VM.\n", "FileDialog": "\nThe FileDialog class displays a dialog window\n from which the user can select a file.\n", "FlowLayout": "\nA flow layout arranges components in a directional flow, much\n like lines of text in a paragraph.\n", "FocusTraversalPolicy": "\nA FocusTraversalPolicy defines the order in which Components with a\n particular focus cycle root are traversed.\n", "Font": "\nThe Font class represents fonts, which are used to\n render text in a visible way.\n", "FontMetrics": "\nThe FontMetrics class defines a font metrics object, which\n encapsulates information about the rendering of a particular font on a\n particular screen.\n", "Frame": "\nA Frame is a top-level window with a title and a border.\n", "GradientPaint": "\nThe GradientPaint class provides a way to fill\n a Shape with a linear color gradient pattern.\n", "Graphics": "\nThe Graphics class is the abstract base class for\n all graphics contexts that allow an application to draw onto\n components that are realized on various devices, as well as\n onto off-screen images.\n", "Graphics2D": "\nThis Graphics2D class extends the\n Graphics class to provide more sophisticated\n control over geometry, coordinate transformations, color management,\n and text layout.\n", "GraphicsConfigTemplate": "\nThe GraphicsConfigTemplate class is used to obtain a valid\n GraphicsConfiguration.\n", "GraphicsConfiguration": "\nThe GraphicsConfiguration class describes the\n characteristics of a graphics destination such as a printer or monitor.\n", "GraphicsDevice": "\nThe GraphicsDevice class describes the graphics devices\n that might be available in a particular graphics environment.\n", "GraphicsEnvironment": "\nThe GraphicsEnvironment class describes the collection\n of GraphicsDevice objects and Font objects\n available to a Java(tm) application on a particular platform.\n", "GridBagConstraints": "\nThe GridBagConstraints class specifies constraints\n for components that are laid out using the\n GridBagLayout class.\n", "GridBagLayout": "\nThe GridBagLayout class is a flexible layout\n manager that aligns components vertically, horizontally or along their\n baseline without requiring that the components be of the same size.\n", "GridBagLayoutInfo": "\nThe GridBagLayoutInfo is an utility class for\n GridBagLayout layout manager.\n", "GridLayout": "\nThe GridLayout class is a layout manager that\n lays out a container's components in a rectangular grid.\n", "Image": "\nThe abstract class Image is the superclass of all\n classes that represent graphical images.\n", "ImageCapabilities": "\nCapabilities and properties of images.\n", "Insets": "\nAn Insets object is a representation of the borders\n of a container.\n", "JobAttributes": "\nA set of attributes which control a print job.\n", "JobAttributes.DefaultSelectionType": "\nA type-safe enumeration of possible default selection states.\n", "JobAttributes.DestinationType": "\nA type-safe enumeration of possible job destinations.\n", "JobAttributes.DialogType": "\nA type-safe enumeration of possible dialogs to display to the user.\n", "JobAttributes.MultipleDocumentHandlingType": "\nA type-safe enumeration of possible multiple copy handling states.\n", "JobAttributes.SidesType": "\nA type-safe enumeration of possible multi-page impositions.\n", "KeyboardFocusManager": "\nThe KeyboardFocusManager is responsible for managing the active and focused\n Windows, and the current focus owner.\n", "Label": "\nA Label object is a component for placing text in a\n container.\n/\nAnnotation that sets a human-readable name for an element (for example,\n \"Maximum Throughput\").\n", "LinearGradientPaint": "\nThe LinearGradientPaint class provides a way to fill\n a Shape with a linear color gradient pattern.\n", "List": "\nThe List component presents the user with a\n scrolling list of text items.\n", "MediaTracker": "\nThe MediaTracker class is a utility class to track\n the status of a number of media objects.\n", "Menu": "\nA Menu object is a pull-down menu component\n that is deployed from a menu bar.\n", "MenuBar": "\nThe MenuBar class encapsulates the platform's\n concept of a menu bar bound to a frame.\n", "MenuComponent": "\nThe abstract class MenuComponent is the superclass\n of all menu-related components.\n", "MenuItem": "\nAll items in a menu must belong to the class\n MenuItem, or one of its subclasses.\n", "MenuShortcut": "\nThe MenuShortcut class represents a keyboard accelerator\n for a MenuItem.\n", "MouseInfo": "\nMouseInfo  provides methods for getting information about the mouse,\n such as mouse pointer location and the number of mouse buttons.\n", "MultipleGradientPaint": "\nThis is the superclass for Paints which use a multiple color\n gradient to fill in their raster.\n", "PageAttributes": "\nA set of attributes which control the output of a printed page.\n", "PageAttributes.ColorType": "\nA type-safe enumeration of possible color states.\n", "PageAttributes.MediaType": "\nA type-safe enumeration of possible paper sizes.\n", "PageAttributes.OrientationRequestedType": "\nA type-safe enumeration of possible orientations.\n", "PageAttributes.OriginType": "\nA type-safe enumeration of possible origins.\n", "PageAttributes.PrintQualityType": "\nA type-safe enumeration of possible print qualities.\n", "Panel": "\nPanel is the simplest container class.\n", "Point": "\nA point representing a location in (x,y) coordinate space,\n specified in integer precision.\n", "PointerInfo": "\nA class that describes the pointer position.\n", "Polygon": "\nThe Polygon class encapsulates a description of a\n closed, two-dimensional region within a coordinate space.\n", "PopupMenu": "\nA class that implements a menu which can be dynamically popped up\n at a specified position within a component.\n", "PrintJob": "\nAn abstract class which initiates and executes a print job.\n", "RadialGradientPaint": "\nThe RadialGradientPaint class provides a way to fill a shape with\n a circular radial color gradient pattern.\n", "Rectangle": "\nA Rectangle specifies an area in a coordinate space that is\n enclosed by the Rectangle object's upper-left point\n (x,y)\n in the coordinate space, its width, and its height.\n", "RenderingHints": "\nThe RenderingHints class defines and manages collections of\n keys and associated values which allow an application to provide input\n into the choice of algorithms used by other classes which perform\n rendering and image manipulation services.\n", "RenderingHints.Key": "\nDefines the base type of all keys used along with the\n RenderingHints class to control various\n algorithm choices in the rendering and imaging pipelines.\n", "Robot": "\nThis class is used to generate native system input events\n for the purposes of test automation, self-running demos, and\n other applications where control of the mouse and keyboard\n is needed.\n", "Scrollbar": "\nThe Scrollbar class embodies a scroll bar, a\n familiar user-interface object.\n", "ScrollPane": "\nA container class which implements automatic horizontal and/or\n vertical scrolling for a single child component.\n", "ScrollPaneAdjustable": "\nThis class represents the state of a horizontal or vertical\n scrollbar of a ScrollPane.\n", "SplashScreen": "\nThe splash screen can be displayed at application startup, before the\n Java Virtual Machine (JVM) starts.\n", "SystemColor": "\nA class to encapsulate symbolic colors representing the color of\n native GUI objects on a system.\n", "SystemTray": "\nThe SystemTray class represents the system tray for a\n desktop.\n", "Taskbar": "\nThe Taskbar class allows a Java application to interact with\n the system task area (taskbar, Dock, etc.).\n", "TextArea": "\nA TextArea object is a multi-line region\n that displays text.\n", "TextComponent": "\nThe TextComponent class is the superclass of\n any component that allows the editing of some text.\n", "TextField": "\nA TextField object is a text component\n that allows for the editing of a single line of text.\n", "TexturePaint": "\nThe TexturePaint class provides a way to fill a\n Shape with a texture that is specified as\n a BufferedImage.\n", "Toolkit": "\nThis class is the abstract superclass of all actual\n implementations of the Abstract Window Toolkit.\n", "TrayIcon": "\nA TrayIcon object represents a tray icon that can be\n added to the system tray.\n", "Window": "\nA Window object is a top-level window with no borders and no\n menubar.\n", "Component.BaselineResizeBehavior": "\nEnumeration of the common ways the baseline of a component can\n change as the size changes.\n", "Desktop.Action": "\nRepresents an action type.\n", "Dialog.ModalExclusionType": "\nAny top-level window can be marked not to be blocked by modal\n dialogs.\n", "Dialog.ModalityType": "\nModal dialogs block all input to some top-level windows.\n", "GraphicsDevice.WindowTranslucency": "\nKinds of translucency supported by the underlying system.\n", "MultipleGradientPaint.ColorSpaceType": "\nThe color space in which to perform the gradient interpolation.\n", "MultipleGradientPaint.CycleMethod": "\nThe method to use when painting outside the gradient bounds.\n", "Taskbar.Feature": "\nList of provided features.\n", "Taskbar.State": "\nKinds of available window progress states.\n", "TrayIcon.MessageType": "\nThe message type determines which icon will be displayed in the\n caption of the message, and a possible system sound a message\n may generate upon showing.\n", "Window.Type": "\nEnumeration of available window types.\n", "AWTException": "\nSignals that an Abstract Window Toolkit exception has occurred.\n", "FontFormatException": "\nThrown by method createFont in the Font class to indicate\n that the specified font is bad.\n", "HeadlessException": "\nThrown when code that is dependent on a keyboard, display, or mouse\n is called in an environment that does not support a keyboard, display,\n or mouse.\n", "IllegalComponentStateException": "\nSignals that an AWT component is not in an appropriate state for\n the requested operation.\n", "AWTError": "\nThrown when a serious Abstract Window Toolkit error has occurred.\n", "ColorSpace": "\nThis abstract class is used to serve as a color space tag to identify the\n specific color space of a Color object or, via a ColorModel\n object, of an Image, a BufferedImage, or a\n GraphicsDevice.\n", "ICC_ColorSpace": "\nThe ICC_ColorSpace class is an implementation of the abstract\n ColorSpace class.\n", "ICC_Profile": "\nA representation of color profile data for device independent and device\n dependent color spaces based on the International Color Consortium\n Specification ICC.1:2001-12, File Format for Color Profiles, (see\n  http://www.color.org).\n", "ICC_ProfileGray": "\nThe ICC_ProfileGray class is a subclass of the ICC_Profile\n class that represents profiles which meet the following criteria: the color\n space type of the profile is TYPE_GRAY and the profile includes the\n grayTRCTag and mediaWhitePointTag tags.\n", "ICC_ProfileRGB": "\nThe ICC_ProfileRGB class is a subclass of the ICC_Profile\n class that represents profiles which meet the following criteria: the\n profile's color space type is RGB, and the profile includes the\n redColorantTag, greenColorantTag, blueColorantTag,\n redTRCTag, greenTRCTag, blueTRCTag,\n mediaWhitePointTag tags.\n", "CMMException": "\nThis exception is thrown if the native CMM returns an error.\n", "ProfileDataException": "\nThis exception is thrown when an error occurs in accessing or processing an\n ICC_Profile object.\n", "AboutHandler": "\nAn implementer receives notification when the app is asked to show its about\n dialog.\n", "AppForegroundListener": "\nImplementors are notified when the app becomes the foreground app and when it\n is no longer the foreground app.\n", "AppHiddenListener": "\nImplementors are notified when the app is hidden or shown by the user.\n", "AppReopenedListener": "\nImplementors receive notification when the app has been asked to open again.\n", "OpenFilesHandler": "\nAn implementor is notified when the application is asked to open a list of files.\n", "OpenURIHandler": "\nAn implementor is notified when the application is asked to open a URI.\n", "PreferencesHandler": "\nAn implementor is notified when the app is asked to show its preferences UI.\n", "PrintFilesHandler": "\nAn implementor can respond to requests to print documents that the app has been registered to handle.\n", "QuitHandler": "\nAn implementor determines if requests to quit this application should proceed or cancel.\n", "QuitResponse": "\nUsed to respond to a request to quit the application.\n", "ScreenSleepListener": "\nImplementors receive notification when the displays attached to the system have entered power save sleep.\n", "SystemEventListener": "\nCommon interface for all event listener sub-types.\n", "SystemSleepListener": "\nImplementors receive notification as the system is entering sleep, and after\n the system wakes.\n", "UserSessionListener": "\nImplementors receive notification when the user session changes.\n", "AboutEvent": "\nEvent sent when the application is asked to open its about window.\n", "AppEvent": "\nAppEvents are sent to listeners and handlers installed on the\n Desktop instance of the current desktop context.\n", "AppForegroundEvent": "\nEvent sent when the application has become the foreground app, and when it is\n no longer the foreground app.\n", "AppHiddenEvent": "\nEvent sent when the application has been hidden or shown.\n", "AppReopenedEvent": "\nEvent sent when the application is asked to re-open itself.\n", "FilesEvent": "\nAuxiliary event containing a list of files.\n", "OpenFilesEvent": "\nEvent sent when the app is asked to open a list of files.\n", "OpenURIEvent": "\nEvent sent when the app is asked to open a URI.\n", "PreferencesEvent": "\nEvent sent when the application is asked to open its preferences window.\n", "PrintFilesEvent": "\nEvent sent when the app is asked to print a list of files.\n", "QuitEvent": "\nEvent sent when the application is asked to quit.\n", "ScreenSleepEvent": "\nEvent sent when the displays attached to the system enter and exit power save\n sleep.\n", "SystemSleepEvent": "\nEvent sent when the system enters and exits power save sleep.\n", "UserSessionEvent": "\nEvent sent when the user session has been changed.\n", "QuitStrategy": "\nThe strategy used to shut down the application, if Sudden Termination is not enabled.\n", "UserSessionEvent.Reason": "\nKinds of available reasons of user session change.\n", "Autoscroll": "\nDuring DnD operations it is possible that a user may wish to drop the\n subject of the operation on a region of a scrollable GUI control that is\n not currently visible to the user.\n", "DragGestureListener": "\nThe listener interface for receiving drag gesture events.\n", "DragSourceListener": "\nThe DragSourceListener defines the\n event interface for originators of\n Drag and Drop operations to track the state of the user's gesture, and to\n provide appropriate \"drag over\"\n feedback to the user throughout the\n Drag and Drop operation.\n", "DragSourceMotionListener": "\nA listener interface for receiving mouse motion events during a drag\n operation.\n", "DropTargetListener": "\nThe DropTargetListener interface\n is the callback interface used by the\n DropTarget class to provide\n notification of DnD operations that involve\n the subject DropTarget.\n", "DnDConstants": "\nThis class contains constant values representing\n the type of action(s) to be performed by a Drag and Drop operation.\n", "DragGestureEvent": "\nA DragGestureEvent is passed\n to DragGestureListener's\n dragGestureRecognized() method\n when a particular DragGestureRecognizer detects that a\n platform dependent drag initiating gesture has occurred\n on the Component that it is tracking.\n", "DragGestureRecognizer": "\nThe DragGestureRecognizer is an\n abstract base class for the specification\n of a platform-dependent listener that can be associated with a particular\n Component in order to\n identify platform-dependent drag initiating gestures.\n", "DragSource": "\nThe DragSource is the entity responsible\n for the initiation of the Drag\n and Drop operation, and may be used in a number of scenarios:\n \n 1 default instance per JVM for the lifetime of that JVM.\n", "DragSourceAdapter": "\nAn abstract adapter class for receiving drag source events.\n", "DragSourceContext": "\nThe DragSourceContext class is responsible for managing the\n initiator side of the Drag and Drop protocol.\n", "DragSourceDragEvent": "\nThe DragSourceDragEvent is\n delivered from the DragSourceContextPeer,\n via the DragSourceContext, to the DragSourceListener\n registered with that DragSourceContext and with its associated\n DragSource.\n", "DragSourceDropEvent": "\nThe DragSourceDropEvent is delivered\n from the DragSourceContextPeer,\n via the DragSourceContext, to the dragDropEnd\n method of DragSourceListeners registered with that\n DragSourceContext and with its associated\n DragSource.\n", "DragSourceEvent": "\nThis class is the base class for\n DragSourceDragEvent and\n DragSourceDropEvent.\n", "DropTarget": "\nThe DropTarget is associated\n with a Component when that Component\n wishes\n to accept drops during Drag and Drop operations.\n", "DropTarget.DropTargetAutoScroller": "\nthis protected nested class implements autoscrolling\n", "DropTargetAdapter": "\nAn abstract adapter class for receiving drop target events.\n", "DropTargetContext": "\nA DropTargetContext is created\n whenever the logical cursor associated\n with a Drag and Drop operation coincides with the visible geometry of\n a Component associated with a DropTarget.\n", "DropTargetDragEvent": "\nThe DropTargetDragEvent is delivered to a\n DropTargetListener via its\n dragEnter() and dragOver() methods.\n", "DropTargetDropEvent": "\nThe DropTargetDropEvent is delivered\n via the DropTargetListener drop() method.\n", "DropTargetEvent": "\nThe DropTargetEvent is the base\n class for both the DropTargetDragEvent\n and the DropTargetDropEvent.\n", "MouseDragGestureRecognizer": "\nThis abstract subclass of DragGestureRecognizer\n defines a DragGestureRecognizer\n for mouse-based gestures.\n", "InvalidDnDOperationException": "\nThis exception is thrown by various methods in the java.awt.dnd package.\n", "ActionListener": "\nThe listener interface for receiving action events.\n", "AdjustmentListener": "\nThe listener interface for receiving adjustment events.\n", "AWTEventListener": "\nThe listener interface for receiving notification of events\n dispatched to objects that are instances of Component or\n MenuComponent or their subclasses.\n", "ComponentListener": "\nThe listener interface for receiving component events.\n", "ContainerListener": "\nThe listener interface for receiving container events.\n", "FocusListener": "\nThe listener interface for receiving keyboard focus events on\n a component.\n", "HierarchyBoundsListener": "\nThe listener interface for receiving ancestor moved and resized events.\n", "HierarchyListener": "\nThe listener interface for receiving hierarchy changed events.\n", "InputMethodListener": "\nThe listener interface for receiving input method events.\n", "ItemListener": "\nThe listener interface for receiving item events.\n", "KeyListener": "\nThe listener interface for receiving keyboard events (keystrokes).\n", "MouseListener": "\nThe listener interface for receiving \"interesting\" mouse events\n (press, release, click, enter, and exit) on a component.\n", "MouseMotionListener": "\nThe listener interface for receiving mouse motion events on a component.\n", "MouseWheelListener": "\nThe listener interface for receiving mouse wheel events on a component.\n", "TextListener": "\nThe listener interface for receiving text events.\n", "WindowFocusListener": "\nThe listener interface for receiving WindowEvents, including\n WINDOW_GAINED_FOCUS and WINDOW_LOST_FOCUS events.\n", "WindowListener": "\nThe listener interface for receiving window events.\n", "WindowStateListener": "\nThe listener interface for receiving window state events.\n", "ActionEvent": "\nA semantic event which indicates that a component-defined action occurred.\n", "AdjustmentEvent": "\nThe adjustment event emitted by Adjustable objects like\n Scrollbar and ScrollPane.\n", "AWTEventListenerProxy": "\nA class which extends the EventListenerProxy\n specifically for adding an AWTEventListener\n for a specific event mask.\n", "ComponentAdapter": "\nAn abstract adapter class for receiving component events.\n", "ComponentEvent": "\nA low-level event which indicates that a component moved, changed\n size, or changed visibility (also, the root class for the other\n component-level events).\n", "ContainerAdapter": "\nAn abstract adapter class for receiving container events.\n", "ContainerEvent": "\nA low-level event which indicates that a container's contents\n changed because a component was added or removed.\n", "FocusAdapter": "\nAn abstract adapter class for receiving keyboard focus events.\n", "FocusEvent": "\nA low-level event which indicates that a Component has gained or lost the\n input focus.\n", "HierarchyBoundsAdapter": "\nAn abstract adapter class for receiving ancestor moved and resized events.\n", "HierarchyEvent": "\nAn event which indicates a change to the Component\n hierarchy to which Component belongs.\n", "InputEvent": "\nThe root event class for all component-level input events.\n", "InputMethodEvent": "\nInput method events contain information about text that is being\n composed using an input method.\n", "InvocationEvent": "\nAn event which executes the run() method on a Runnable\n  when dispatched by the AWT event dispatcher thread.\n", "ItemEvent": "\nA semantic event which indicates that an item was selected or deselected.\n", "KeyAdapter": "\nAn abstract adapter class for receiving keyboard events.\n", "KeyEvent": "\nAn event which indicates that a keystroke occurred in a component.\n", "MouseAdapter": "\nAn abstract adapter class for receiving mouse events.\n", "MouseEvent": "\nAn event which indicates that a mouse action occurred in a component.\n/\nThe MouseEvent interface provides specific contextual\n information associated with Mouse events.\n", "MouseMotionAdapter": "\nAn abstract adapter class for receiving mouse motion events.\n", "MouseWheelEvent": "\nAn event which indicates that the mouse wheel was rotated in a component.\n", "PaintEvent": "\nThe component-level paint event.\n", "TextEvent": "\nA semantic event which indicates that an object's text changed.\n", "WindowAdapter": "\nAn abstract adapter class for receiving window events.\n", "WindowEvent": "\nA low-level event that indicates that a window has changed its status.\n", "FocusEvent.Cause": "\nThis enum represents the cause of a FocusEvent- the reason why it\n occurred.\n", "MultipleMaster": "\nThe MultipleMaster interface represents Type 1\n Multiple Master fonts.\n", "OpenType": "\nThe OpenType interface represents OpenType and\n TrueType fonts.\n", "FontRenderContext": "\nThe FontRenderContext class is a container for the\n   information needed to correctly measure text.\n", "GlyphJustificationInfo": "\nThe GlyphJustificationInfo class represents information\n about the justification properties of a glyph.\n", "GlyphMetrics": "\nThe GlyphMetrics class represents information for a\n single glyph.\n", "GlyphVector": "\nA GlyphVector object is a collection of glyphs\n containing geometric information for the placement of each glyph\n in a transformed coordinate space which corresponds to the\n device on which the GlyphVector is ultimately\n displayed.\n", "GraphicAttribute": "\nThis class is used with the CHAR_REPLACEMENT attribute.\n", "ImageGraphicAttribute": "\nThe ImageGraphicAttribute class is an implementation of\n GraphicAttribute which draws images in\n a TextLayout.\n", "LayoutPath": "\nLayoutPath provides a mapping between locations relative to the\n baseline and points in user space.\n", "LineBreakMeasurer": "\nThe LineBreakMeasurer class allows styled text to be\n broken into lines (or segments) that fit within a particular visual\n advance.\n", "LineMetrics": "\nThe LineMetrics class allows access to the\n metrics needed to layout characters along a line\n and to layout of a set of lines.\n", "NumericShaper": "\nThe NumericShaper class is used to convert Latin-1 (European)\n digits to other Unicode decimal digits.\n", "ShapeGraphicAttribute": "\nThe ShapeGraphicAttribute class is an implementation of\n GraphicAttribute that draws shapes in a TextLayout.\n", "TextAttribute": "\nThe TextAttribute class defines attribute keys and\n attribute values used for text rendering.\n", "TextHitInfo": "\nThe TextHitInfo class represents a character position in a\n text model, and a bias, or \"side,\" of the character.\n", "TextLayout": "\nTextLayout is an immutable graphical representation of styled\n character data.\n", "TextLayout.CaretPolicy": "\nDefines a policy for determining the strong caret location.\n", "TextMeasurer": "\nThe TextMeasurer class provides the primitive operations\n needed for line break: measuring up to a given advance, determining the\n advance of a range of characters, and generating a\n TextLayout for a range of characters.\n", "TransformAttribute": "\nThe TransformAttribute class provides an immutable\n wrapper for a transform so that it is safe to use as an attribute.\n", "NumericShaper.Range": "\nA NumericShaper.Range represents a Unicode range of a\n script having its own decimal digits.\n", "PathIterator": "\nThe PathIterator interface provides the mechanism\n for objects that implement the Shape\n interface to return the geometry of their boundary by allowing\n a caller to retrieve the path of that boundary a segment at a\n time.\n", "AffineTransform": "\nThe AffineTransform class represents a 2D affine transform\n that performs a linear mapping from 2D coordinates to other 2D\n coordinates that preserves the \"straightness\" and\n \"parallelness\" of lines.\n", "Arc2D": "\nArc2D is the abstract superclass for all objects that\n store a 2D arc defined by a framing rectangle,\n start angle, angular extent (length of the arc), and a closure type\n (OPEN, CHORD, or PIE).\n", "Arc2D.Double": "\nThis class defines an arc specified in double precision.\n", "Arc2D.Float": "\nThis class defines an arc specified in float precision.\n", "Area": "\nAn Area object stores and manipulates a\n resolution-independent description of an enclosed area of\n 2-dimensional space.\n", "CubicCurve2D": "\nThe CubicCurve2D class defines a cubic parametric curve\n segment in (x,y) coordinate space.\n", "CubicCurve2D.Double": "\nA cubic parametric curve segment specified with\n double coordinates.\n", "CubicCurve2D.Float": "\nA cubic parametric curve segment specified with\n float coordinates.\n", "Dimension2D": "\nThe Dimension2D class is to encapsulate a width\n and a height dimension.\n", "Ellipse2D": "\nThe Ellipse2D class describes an ellipse that is defined\n by a framing rectangle.\n", "Ellipse2D.Double": "\nThe Double class defines an ellipse specified\n in double precision.\n", "Ellipse2D.Float": "\nThe Float class defines an ellipse specified\n in float precision.\n", "FlatteningPathIterator": "\nThe FlatteningPathIterator class returns a flattened view of\n another PathIterator object.\n", "GeneralPath": "\nThe GeneralPath class represents a geometric path\n constructed from straight lines, and quadratic and cubic\n (B\u00e9zier) curves.\n", "Line2D": "\nThis Line2D represents a line segment in (x,y)\n coordinate space.\n", "Line2D.Double": "\nA line segment specified with double coordinates.\n", "Line2D.Float": "\nA line segment specified with float coordinates.\n", "Path2D": "\nThe Path2D class provides a simple, yet flexible\n shape which represents an arbitrary geometric path.\n", "Path2D.Double": "\nThe Double class defines a geometric path with\n coordinates stored in double precision floating point.\n", "Path2D.Float": "\nThe Float class defines a geometric path with\n coordinates stored in single precision floating point.\n", "Point2D": "\nThe Point2D class defines a point representing a location\n in (x,y) coordinate space.\n", "Point2D.Double": "\nThe Double class defines a point specified in\n double precision.\n", "Point2D.Float": "\nThe Float class defines a point specified in float\n precision.\n", "QuadCurve2D": "\nThe QuadCurve2D class defines a quadratic parametric curve\n segment in (x,y) coordinate space.\n", "QuadCurve2D.Double": "\nA quadratic parametric curve segment specified with\n double coordinates.\n", "QuadCurve2D.Float": "\nA quadratic parametric curve segment specified with\n float coordinates.\n", "Rectangle2D": "\nThe Rectangle2D class describes a rectangle\n defined by a location (x,y) and dimension\n (w x h).\n", "Rectangle2D.Double": "\nThe Double class defines a rectangle specified in\n double coordinates.\n", "Rectangle2D.Float": "\nThe Float class defines a rectangle specified in float\n coordinates.\n", "RectangularShape": "\nRectangularShape is the base class for a number of\n Shape objects whose geometry is defined by a rectangular frame.\n", "RoundRectangle2D": "\nThe RoundRectangle2D class defines a rectangle with\n rounded corners defined by a location (x,y), a\n dimension (w x h), and the width and height of an arc\n with which to round the corners.\n", "RoundRectangle2D.Double": "\nThe Double class defines a rectangle with rounded\n corners all specified in double coordinates.\n", "RoundRectangle2D.Float": "\nThe Float class defines a rectangle with rounded\n corners all specified in float coordinates.\n", "IllegalPathStateException": "\nThe IllegalPathStateException represents an\n exception that is thrown if an operation is performed on a path\n that is in an illegal state with respect to the particular\n operation being performed, such as appending a path segment\n to a GeneralPath without an initial moveto.\n", "NoninvertibleTransformException": "\nThe NoninvertibleTransformException class represents\n an exception that is thrown if an operation is performed requiring\n the inverse of an AffineTransform object but the\n AffineTransform is in a non-invertible state.\n", "InputMethodRequests": "\nInputMethodRequests defines the requests that a text editing component\n has to handle in order to work with input methods.\n", "InputContext": "\nProvides methods to control text input facilities such as input\n methods and keyboard layouts.\n", "InputMethodHighlight": "\nAn InputMethodHighlight is used to describe the highlight\n attributes of text being composed.\n", "InputSubset": "\nDefines additional Unicode subsets for use by input methods.\n", "InputMethod": "\nDefines the interface for an input method that supports complex text input.\n", "InputMethodContext": "\nProvides methods that input methods\n can use to communicate with their client components or to request\n other services.\n", "BufferedImageOp": "\nThis interface describes single-input/single-output\n operations performed on BufferedImage objects.\n", "ImageConsumer": "\nThe interface for objects expressing interest in image data through\n the ImageProducer interfaces.\n", "ImageObserver": "\nAn asynchronous update interface for receiving notifications about\n Image information as the Image is constructed.\n", "ImageProducer": "\nThe interface for objects which can produce the image data for Images.\n", "MultiResolutionImage": "\nThis interface is designed to be an optional additional API supported by\n some implementations of Image to allow them to provide\n alternate images for various rendering resolutions.\n", "RasterOp": "\nThis interface describes single-input/single-output\n operations performed on Raster objects.\n", "RenderedImage": "\nRenderedImage is a common interface for objects which contain\n or can produce image data in the form of Rasters.\n", "TileObserver": "\nAn interface for objects that wish to be informed when tiles\n of a WritableRenderedImage become modifiable by some writer via\n a call to getWritableTile, and when they become unmodifiable via\n the last call to releaseWritableTile.\n", "WritableRenderedImage": "\nWritableRenderedImage is a common interface for objects which\n contain or can produce image data in the form of Rasters and\n which can be modified and/or written over.\n", "AbstractMultiResolutionImage": "\nThis class provides default implementations of several Image methods\n for classes that want to implement the MultiResolutionImage\n interface.\n", "AffineTransformOp": "\nThis class uses an affine transform to perform a linear mapping from\n 2D coordinates in the source image or Raster to 2D coordinates\n in the destination image or Raster.\n", "AreaAveragingScaleFilter": "\nAn ImageFilter class for scaling images using a simple area averaging\n algorithm that produces smoother results than the nearest neighbor\n algorithm.\n", "BandCombineOp": "\nThis class performs an arbitrary linear combination of the bands\n in a Raster, using a specified matrix.\n", "BandedSampleModel": "\nThis class represents image data which is stored in a band interleaved\n  fashion and for\n  which each sample of a pixel occupies one data element of the DataBuffer.\n", "BaseMultiResolutionImage": "\nThis class is an array-based implementation of\n the AbstractMultiResolutionImage class.\n", "BufferedImage": "\nThe BufferedImage subclass describes an Image with an accessible buffer of image data.\n", "BufferedImageFilter": "\nThe BufferedImageFilter class subclasses an\n ImageFilter to provide a simple means of\n using a single-source/single-destination image operator\n (BufferedImageOp) to filter a BufferedImage\n in the Image Producer/Consumer/Observer\n paradigm.\n", "BufferStrategy": "\nThe BufferStrategy class represents the mechanism with which\n to organize complex memory on a particular Canvas or\n Window.\n", "ByteLookupTable": "\nThis class defines a lookup table object.\n", "ColorConvertOp": "\nThis class performs a pixel-by-pixel color conversion of the data in\n the source image.\n", "ColorModel": "\nThe ColorModel abstract class encapsulates the\n methods for translating a pixel value to color components\n (for example, red, green, and blue) and an alpha component.\n", "ComponentColorModel": "\nA ColorModel class that works with pixel values that\n represent color and alpha information as separate samples and that\n store each sample in a separate data element.\n", "ComponentSampleModel": "\nThis class represents image data which is stored such that each sample\n  of a pixel occupies one data element of the DataBuffer.\n", "ConvolveOp": "\nThis class implements a convolution from the source\n to the destination.\n", "CropImageFilter": "\nAn ImageFilter class for cropping images.\n", "DataBuffer": "\nThis class exists to wrap one or more data arrays.\n", "DataBufferByte": "\nThis class extends DataBuffer and stores data internally as bytes.\n", "DataBufferDouble": "\nThis class extends DataBuffer and stores data internally\n in double form.\n", "DataBufferFloat": "\nThis class extends DataBuffer and stores data internally\n in float form.\n", "DataBufferInt": "\nThis class extends DataBuffer and stores data internally\n as integers.\n", "DataBufferShort": "\nThis class extends DataBuffer and stores data internally as shorts.\n", "DataBufferUShort": "\nThis class extends DataBuffer and stores data internally as\n shorts.\n", "DirectColorModel": "\nThe DirectColorModel class is a ColorModel\n class that works with pixel values that represent RGB\n color and alpha information as separate samples and that pack all\n samples for a single pixel into a single int, short, or byte quantity.\n", "FilteredImageSource": "\nThis class is an implementation of the ImageProducer interface which\n takes an existing image and a filter object and uses them to produce\n image data for a new filtered version of the original image.\n", "ImageFilter": "\nThis class implements a filter for the set of interface methods that\n are used to deliver data from an ImageProducer to an ImageConsumer.\n", "IndexColorModel": "\nThe IndexColorModel class is a ColorModel\n class that works with pixel values consisting of a\n single sample that is an index into a fixed colormap in the default\n sRGB color space.\n", "Kernel": "\nThe Kernel class defines a matrix that describes how a\n specified pixel and its surrounding pixels affect the value\n computed for the pixel's position in the output image of a filtering\n operation.\n", "LookupOp": "\nThis class implements a lookup operation from the source\n to the destination.\n", "LookupTable": "\nThis abstract class defines a lookup table object.\n", "MemoryImageSource": "\nThis class is an implementation of the ImageProducer interface which\n uses an array to produce pixel values for an Image.\n", "MultiPixelPackedSampleModel": "\nThe MultiPixelPackedSampleModel class represents\n one-banded images and can pack multiple one-sample\n pixels into one data element.\n", "PackedColorModel": "\nThe PackedColorModel class is an abstract\n ColorModel class that works with pixel values which represent\n color and alpha information as separate samples and which pack all\n samples for a single pixel into a single int, short, or byte quantity.\n", "PixelGrabber": "\nThe PixelGrabber class implements an ImageConsumer which can be attached\n to an Image or ImageProducer object to retrieve a subset of the pixels\n in that image.\n", "PixelInterleavedSampleModel": "\nThis class represents image data which is stored in a pixel interleaved\n  fashion and for\n  which each sample of a pixel occupies one data element of the DataBuffer.\n", "Raster": "\nA class representing a rectangular array of pixels.\n", "ReplicateScaleFilter": "\nAn ImageFilter class for scaling images using the simplest algorithm.\n", "RescaleOp": "\nThis class performs a pixel-by-pixel rescaling of the data in the\n source image by multiplying the sample values for each pixel by a scale\n factor and then adding an offset.\n", "RGBImageFilter": "\nThis class provides an easy way to create an ImageFilter which modifies\n the pixels of an image in the default RGB ColorModel.\n", "SampleModel": "\nThis abstract class defines an interface for extracting samples of pixels\n  in an image.\n", "ShortLookupTable": "\nThis class defines a lookup table object.\n", "SinglePixelPackedSampleModel": "\nThis class represents pixel data packed such that the N samples which make\n  up a single pixel are stored in a single data array element, and each data\n  data array element holds samples for only one pixel.\n", "VolatileImage": "\nVolatileImage is an image which can lose its\n contents at any time due to circumstances beyond the control of the\n application (e.g., situations caused by the operating system or by\n other applications).\n", "WritableRaster": "\nThis class extends Raster to provide pixel writing capabilities.\n", "ImagingOpException": "\nThe ImagingOpException is thrown if one of the\n BufferedImageOp or RasterOp filter methods cannot\n process the image.\n", "RasterFormatException": "\nThe RasterFormatException is thrown if there is\n invalid layout information in the Raster.\n", "ContextualRenderedImageFactory": "\nContextualRenderedImageFactory provides an interface for the\n functionality that may differ between instances of\n RenderableImageOp.\n", "RenderableImage": "\nA RenderableImage is a common interface for rendering-independent\n images (a notion which subsumes resolution independence).\n", "RenderedImageFactory": "\nThe RenderedImageFactory interface (often abbreviated RIF) is\n intended to be implemented by classes that wish to act as factories\n to produce different renderings, for example by executing a series\n of BufferedImageOps on a set of sources, depending on a specific\n set of parameters, properties, and rendering hints.\n", "ParameterBlock": "\nA ParameterBlock encapsulates all the information about sources and\n parameters (Objects) required by a RenderableImageOp, or other\n classes that process images.\n", "RenderableImageOp": "\nThis class handles the renderable aspects of an operation with help\n from its associated instance of a ContextualRenderedImageFactory.\n", "RenderableImageProducer": "\nAn adapter class that implements ImageProducer to allow the\n asynchronous production of a RenderableImage.\n", "RenderContext": "\nA RenderContext encapsulates the information needed to produce a\n specific rendering from a RenderableImage.\n", "Pageable": "\nThe Pageable implementation represents a set of\n pages to be printed.\n", "Printable": "\nThe Printable interface is implemented\n by the print methods of the current\n page painter, which is called by the printing\n system to render a page.\n", "PrinterGraphics": "\nThe PrinterGraphics interface is implemented by\n Graphics objects that are passed to\n Printable objects to render a page.\n", "Book": "\nThe Book class provides a representation of a document in\n which pages may have different page formats and page painters.\n", "PageFormat": "\nThe PageFormat class describes the size and\n orientation of a page to be printed.\n", "Paper": "\nThe Paper class describes the physical characteristics of\n a piece of paper.\n", "PrinterJob": "\nThe PrinterJob class is the principal class that controls\n printing.\n", "PrinterAbortException": "\nThe PrinterAbortException class is a subclass of\n PrinterException and is used to indicate that a user\n or application has terminated the print job while it was in\n the process of printing.\n", "PrinterException": "\nThe PrinterException class and its subclasses are used\n to indicate that an exceptional condition has occurred in the print\n system.\n", "PrinterIOException": "\nThe PrinterIOException class is a subclass of\n PrinterException and is used to indicate that an IO error\n of some sort has occurred while printing.\n", "AppletInitializer": "Deprecated.\nThe Applet API is deprecated.\n", "BeanInfo": "\nUse the BeanInfo interface\n to create a BeanInfo class\n and provide explicit information about the methods,\n properties, events, and other features of your beans.\n", "Customizer": "\nA customizer class provides a complete custom GUI for customizing\n a target Java Bean.\n", "DesignMode": "\n\n This interface is intended to be implemented by, or delegated from, instances\n of java.beans.beancontext.BeanContext, in order to propagate to its nested hierarchy\n of java.beans.beancontext.BeanContextChild instances, the current \"designTime\" property.\n", "ExceptionListener": "\nAn ExceptionListener is notified of internal exceptions.\n", "PropertyChangeListener": "\nA \"PropertyChange\" event gets fired whenever a bean changes a \"bound\"\n property.\n", "PropertyEditor": "\nA PropertyEditor class provides support for GUIs that want to\n allow users to edit a property value of a given type.\n", "VetoableChangeListener": "\nA VetoableChange event gets fired whenever a bean changes a \"constrained\"\n property.\n", "Visibility": "\nUnder some circumstances a bean may be run on servers where a GUI\n is not available.\n", "BeanDescriptor": "\nA BeanDescriptor provides global information about a \"bean\",\n including its Java class, its displayName, etc.\n", "Beans": "\nThis class provides some general purpose beans control methods.\n", "DefaultPersistenceDelegate": "\nThe DefaultPersistenceDelegate is a concrete implementation of\n the abstract PersistenceDelegate class and\n is the delegate used by default for classes about\n which no information is available.\n", "Encoder": "\nAn Encoder is a class which can be used to create\n files or streams that encode the state of a collection of\n JavaBeans in terms of their public APIs.\n", "EventHandler": "\nThe EventHandler class provides\n support for dynamically generating event listeners whose methods\n execute a simple statement involving an incoming event object\n and a target object.\n", "EventSetDescriptor": "\nAn EventSetDescriptor describes a group of events that a given Java\n bean fires.\n", "Expression": "\nAn Expression object represents a primitive expression\n in which a single method is applied to a target and a set of\n arguments to return a result - as in \"a.getFoo()\".\n", "FeatureDescriptor": "\nThe FeatureDescriptor class is the common baseclass for PropertyDescriptor,\n EventSetDescriptor, and MethodDescriptor, etc.\n", "IndexedPropertyChangeEvent": "\nAn \"IndexedPropertyChange\" event gets delivered whenever a component that\n conforms to the JavaBeans\u2122 specification (a \"bean\") changes a bound\n indexed property.\n", "IndexedPropertyDescriptor": "\nAn IndexedPropertyDescriptor describes a property that acts like an\n array and has an indexed read and/or indexed write method to access\n specific elements of the array.\n", "Introspector": "\nThe Introspector class provides a standard way for tools to learn about\n the properties, events, and methods supported by a target Java Bean.\n", "MethodDescriptor": "\nA MethodDescriptor describes a particular method that a Java Bean\n supports for external access from other components.\n", "ParameterDescriptor": "\nThe ParameterDescriptor class allows bean implementors to provide\n additional information on each of their parameters, beyond the\n low level type information provided by the java.lang.reflect.Method\n class.\n", "PersistenceDelegate": "\nThe PersistenceDelegate class takes the responsibility\n for expressing the state of an instance of a given class\n in terms of the methods in the class's public API.\n", "PropertyChangeEvent": "\nA \"PropertyChange\" event gets delivered whenever a bean changes a \"bound\"\n or \"constrained\" property.\n", "PropertyChangeListenerProxy": "\nA class which extends the EventListenerProxy\n specifically for adding a PropertyChangeListener\n with a \"bound\" property.\n", "PropertyChangeSupport": "\nThis is a utility class that can be used by beans that support bound\n properties.\n", "PropertyDescriptor": "\nA PropertyDescriptor describes one property that a Java Bean\n exports via a pair of accessor methods.\n", "PropertyEditorManager": "\nThe PropertyEditorManager can be used to locate a property editor for\n any given type name.\n", "PropertyEditorSupport": "\nThis is a support class to help build property editors.\n", "SimpleBeanInfo": "\nThis is a support class to make it easier for people to provide\n BeanInfo classes.\n", "Statement": "\nA Statement object represents a primitive statement\n in which a single method is applied to a target and\n a set of arguments - as in \"a.setFoo(b)\".\n/\nThe object used for executing a static SQL statement\n and returning the results it produces.\n", "VetoableChangeListenerProxy": "\nA class which extends the EventListenerProxy\n specifically for adding a VetoableChangeListener\n with a \"constrained\" property.\n", "VetoableChangeSupport": "\nThis is a utility class that can be used by beans that support constrained\n properties.\n", "XMLDecoder": "\nThe XMLDecoder class is used to read XML documents\n created using the XMLEncoder and is used just like\n the ObjectInputStream.\n", "XMLEncoder": "\nThe XMLEncoder class is a complementary alternative to\n the ObjectOutputStream and can used to generate\n a textual representation of a JavaBean in the same\n way that the ObjectOutputStream can\n be used to create binary representation of Serializable\n objects.\n", "IntrospectionException": "\nThrown when an exception happens during Introspection.\n/\nAn exception occurred during the introspection of an MBean.\n", "PropertyVetoException": "\nA PropertyVetoException is thrown when a proposed change to a\n property represents an unacceptable value.\n", "BeanProperty": "\nAn annotation used to specify some property-related information for the\n automatically generated BeanInfo classes.\n", "ConstructorProperties": "\nAn annotation on a constructor that shows how the parameters of\n   that constructor correspond to the constructed object's getter\n   methods.\n", "JavaBean": "\nAn annotation used to specify some class-related information\n for the automatically generated BeanInfo classes.\n", "Transient": "\nIndicates that an attribute called \"transient\"\n should be declared with the given value\n when the Introspector constructs\n a PropertyDescriptor or EventSetDescriptor\n classes associated with the annotated code element.\n", "BeanContext": "\n\n The BeanContext acts a logical hierarchical container for JavaBeans.\n", "BeanContextChild": "\n\n JavaBeans wishing to be nested within, and obtain a reference to their\n execution environment, or context, as defined by the BeanContext\n sub-interface shall implement this interface.\n", "BeanContextChildComponentProxy": "\n\n This interface is implemented by\n BeanContextChildren that have an AWT Component\n associated with them.\n", "BeanContextContainerProxy": "\n\n This interface is implemented by BeanContexts' that have an AWT Container\n associated with them.\n", "BeanContextMembershipListener": "\n\n Compliant BeanContexts fire events on this interface when the state of\n the membership of the BeanContext changes.\n", "BeanContextProxy": "\n\n This interface is implemented by a JavaBean that does\n not directly have a BeanContext(Child) associated with\n it (via implementing that interface or a subinterface thereof),\n but has a public BeanContext(Child) delegated from it.\n", "BeanContextServiceProvider": "\n\n One of the primary functions of a BeanContext is to act a as rendezvous\n between JavaBeans, and BeanContextServiceProviders.\n", "BeanContextServiceProviderBeanInfo": "\nA BeanContextServiceProvider implementor who wishes to provide explicit\n information about the services their bean may provide shall implement a\n BeanInfo class that implements this BeanInfo subinterface and provides\n explicit information about the methods, properties, events, etc, of their\n services.\n", "BeanContextServiceRevokedListener": "\nThe listener interface for receiving\n BeanContextServiceRevokedEvent objects.\n", "BeanContextServices": "\n\n The BeanContextServices interface provides a mechanism for a BeanContext\n to expose generic \"services\" to the BeanContextChild objects within.\n", "BeanContextServicesListener": "\nThe listener interface for receiving\n BeanContextServiceAvailableEvent objects.\n", "BeanContextChildSupport": "\n\n This is a general support class to provide support for implementing the\n BeanContextChild protocol.\n", "BeanContextEvent": "\n\nBeanContextEvent is the abstract root event class\n for all events emitted\n from, and pertaining to the semantics of, a BeanContext.\n", "BeanContextMembershipEvent": "\nA BeanContextMembershipEvent encapsulates\n the list of children added to, or removed from,\n the membership of a particular BeanContext.\n", "BeanContextServiceAvailableEvent": "\n\n This event type is used by the BeanContextServicesListener in order to\n identify the service being registered.\n", "BeanContextServiceRevokedEvent": "\n\n This event type is used by the\n BeanContextServiceRevokedListener in order to\n identify the service being revoked.\n", "BeanContextServicesSupport": "\n\n This helper class provides a utility implementation of the\n java.beans.beancontext.BeanContextServices interface.\n", "BeanContextServicesSupport.BCSSServiceProvider": "\nsubclasses may subclass this nested class to add behaviors for\n each BeanContextServicesProvider.\n", "BeanContextSupport": "\nThis helper class provides a utility implementation of the\n java.beans.beancontext.BeanContext interface.\n", "BeanContextSupport.BCSIterator": "\nprotected final subclass that encapsulates an iterator but implements\n a noop remove() method.\n", "Accessible": "\nInterface Accessible is the main interface for the accessibility\n package.\n/\nProvides information on the accessibility of a type or type component.\n", "AccessibleAction": "\nThe AccessibleAction interface should be supported by any object that\n can perform one or more actions.\n", "AccessibleComponent": "\nThe AccessibleComponent interface should be supported by any object\n that is rendered on the screen.\n", "AccessibleEditableText": "\nThe AccessibleEditableText interface should be implemented by all\n classes that present editable textual information on the display.\n", "AccessibleExtendedComponent": "\nThe AccessibleExtendedComponent interface should be supported by any\n object that is rendered on the screen.\n", "AccessibleExtendedTable": "\nClass AccessibleExtendedTable provides extended information about a\n user-interface component that presents data in a two-dimensional table\n format.\n", "AccessibleExtendedText": "\nThe AccessibleExtendedText interface contains additional methods not\n provided by the AccessibleText interface.\n", "AccessibleHypertext": "\nThe AccessibleHypertext class is the base class for all classes that\n present hypertext information on the display.\n", "AccessibleIcon": "\nThe AccessibleIcon interface should be supported by any object that\n has an associated icon (e.g., buttons).\n", "AccessibleKeyBinding": "\nThe AccessibleKeyBinding interface should be supported by any object\n that has a keyboard bindings such as a keyboard mnemonic and/or keyboard\n shortcut which can be used to select the object.\n", "AccessibleSelection": "\nThis AccessibleSelection interface provides the standard mechanism\n for an assistive technology to determine what the current selected children\n are, as well as modify the selection set.\n", "AccessibleStreamable": "\nThe AccessibleStreamable interface should be implemented by the\n AccessibleContext of any component that presents the raw stream\n behind a component on the display screen.\n", "AccessibleTable": "\nClass AccessibleTable describes a user-interface component that\n presents data in a two-dimensional table format.\n", "AccessibleTableModelChange": "\nThe AccessibleTableModelChange interface describes a change to the\n table model.\n", "AccessibleText": "\nThe AccessibleText interface should be implemented by all classes\n that present textual information on the display.\n", "AccessibleValue": "\nThe AccessibleValue interface should be supported by any object that\n supports a numerical value (e.g., a scroll bar).\n", "AccessibleAttributeSequence": "\nThis class collects together the span of text that share the same contiguous\n set of attributes, along with that set of attributes.\n", "AccessibleBundle": "\nBase class used to maintain a strongly typed enumeration.\n", "AccessibleContext": "\nAccessibleContext represents the minimum information all accessible\n objects return.\n", "AccessibleHyperlink": "\nEncapsulation of a link, or set of links (e.g. client side imagemap) in a\n Hypertext document\n", "AccessibleRelation": "\nClass AccessibleRelation describes a relation between the object that\n implements the AccessibleRelation and one or more other objects.\n", "AccessibleRelationSet": "\nClass AccessibleRelationSet determines a component's relation set.\n", "AccessibleResourceBundle": "Deprecated.\nThis class is deprecated as of version 1.3 of the Java Platform\n", "AccessibleRole": "\nClass AccessibleRole determines the role of a component.\n", "AccessibleState": "\nClass AccessibleState describes a component's particular state.\n", "AccessibleStateSet": "\nClass AccessibleStateSet determines a component's state set.\n", "AccessibleTextSequence": "\nThis class collects together key details of a span of text.\n", "\nBMP\n": "yes\n      yes\n      none\n      BMP\n     metadata format\n\n", "\nGIF\n": "yes\n      yes\n      GIF plug-in notes\n GIF\n     metadata format\n\n", "JPEG\n": "yes\n      yes\n      none\n      \n     JPEG metadata format\n\n", "PNG\n": "yes\n      yes\n      none\n      PNG\n     metadata format\n\n", "\n\n     TIFF\n": "yes\n      yes\n      \nTIFF plug-in\n     notes\n \nTIFF\n     metadata format\n\n", "\n\n     WBMP\n": "yes\n      yes\n      none\n      \n     WBMP metadata format\n", "IIOParamController": "\nAn interface to be implemented by objects that can determine the\n settings of an IIOParam object, either by putting up a\n GUI to obtain values from a user, or by other means.\n", "ImageTranscoder": "\nAn interface providing metadata transcoding capability.\n", "IIOImage": "\nA simple container class to aggregate an image, a set of\n thumbnail (preview) images, and an object representing metadata\n associated with the image.\n", "IIOParam": "\nA superclass of all classes describing how streams should be\n decoded or encoded.\n", "ImageIO": "\nA class containing static convenience methods for locating\n ImageReaders and ImageWriters, and\n performing simple encoding and decoding.\n", "ImageReader": "\nAn abstract superclass for parsing and decoding of images.\n", "ImageReadParam": "\nA class describing how a stream is to be decoded.\n", "ImageTypeSpecifier": "\nA class that allows the format of an image (in particular, its\n SampleModel and ColorModel) to be\n specified in a convenient manner.\n", "ImageWriteParam": "\nA class describing how a stream is to be encoded.\n", "ImageWriter": "\nAn abstract superclass for encoding and writing images.\n", "IIOException": "\nAn exception class used for signaling run-time failure of reading\n and writing operations.\n", "IIOReadProgressListener": "\nAn interface used by ImageReader implementations to\n notify callers of their image and thumbnail reading methods of\n progress.\n", "IIOReadUpdateListener": "\nAn interface used by ImageReader implementations to\n notify callers of their image and thumbnail reading methods of\n pixel updates.\n", "IIOReadWarningListener": "\nAn interface used by ImageReader implementations to\n notify callers of their image and thumbnail reading methods of\n warnings (non-fatal errors).\n", "IIOWriteProgressListener": "\nAn interface used by ImageWriter implementations to notify\n callers of their image writing methods of progress.\n", "IIOWriteWarningListener": "\nAn interface used by ImageWriter implementations to\n notify callers of their image and thumbnail reading methods of\n warnings (non-fatal errors).\n", "IIOMetadataController": "\nAn interface to be implemented by objects that can determine the\n settings of an IIOMetadata object, either by putting\n up a GUI to obtain values from a user, or by other means.\n", "IIOMetadataFormat": "\nAn object describing the structure of metadata documents returned\n from IIOMetadata.getAsTree and passed to\n IIOMetadata.setFromTree and mergeTree.\n", "IIOMetadata": "\nAn abstract class to be extended by objects that represent metadata\n (non-image data) associated with images and streams.\n", "IIOMetadataFormatImpl": "\nA concrete class providing a reusable implementation of the\n IIOMetadataFormat interface.\n", "IIOMetadataNode": "\nA class representing a node in a meta-data tree, which implements\n the org.w3c.dom.Element interface and additionally allows\n for the storage of non-textual objects via the\n getUserObject and setUserObject methods.\n", "IIOInvalidTreeException": "\nAn IIOInvalidTreeException is thrown when an attempt\n by an IIOMetadata object to parse a tree of\n IIOMetadataNodes fails.\n", "BMPImageWriteParam": "\nA subclass of ImageWriteParam for encoding images in\n the BMP format.\n", "JPEGHuffmanTable": "\nA class encapsulating a single JPEG Huffman table.\n", "JPEGImageReadParam": "\nThis class adds the ability to set JPEG quantization and Huffman\n tables when using the built-in JPEG reader plug-in.\n", "JPEGImageWriteParam": "\nThis class adds the ability to set JPEG quantization and Huffman\n tables when using the built-in JPEG writer plug-in, and to request that\n optimized Huffman tables be computed for an image.\n", "JPEGQTable": "\nA class encapsulating a single JPEG quantization table.\n", "BaselineTIFFTagSet": "\nA class representing the set of tags found in the baseline TIFF\n specification as well as some common additional tags.\n", "ExifGPSTagSet": "\nA class representing the tags found in an Exif GPS Info IFD.\n", "ExifInteroperabilityTagSet": "\nA class representing the tags found in an Exif Interoperability IFD.\n", "ExifParentTIFFTagSet": "\nA class containing the TIFF tags used to reference the Exif and GPS IFDs.\n", "ExifTIFFTagSet": "\nA class representing the tags found in an Exif IFD.\n", "FaxTIFFTagSet": "\nA class representing the extra tags found in a\n TIFF-F (RFC 2036) file.\n", "GeoTIFFTagSet": "\nA class representing the tags found in a GeoTIFF IFD.\n", "TIFFDirectory": "\nA convenience class for simplifying interaction with TIFF native\n image metadata.\n", "TIFFField": "\nA class representing a field in a TIFF 6.0 Image File Directory.\n", "TIFFImageReadParam": "\nA subclass of ImageReadParam allowing control over\n the TIFF reading process.\n", "TIFFTag": "\nA class defining the notion of a TIFF tag.\n", "TIFFTagSet": "\nA class representing a set of TIFF tags.\n", "RegisterableService": "\nAn optional interface that may be provided by service provider\n objects that will be registered with a\n ServiceRegistry.\n", "ServiceRegistry.Filter": "\nA simple filter interface used by\n ServiceRegistry.getServiceProviders to select\n providers matching an arbitrary criterion.\n", "IIORegistry": "\nA registry for Image I/O service provider instances.\n", "IIOServiceProvider": "\nA superinterface for functionality common to all Image I/O service\n provider interfaces (SPIs).\n", "ImageReaderWriterSpi": "\nA superclass containing instance variables and methods common to\n ImageReaderSpi and ImageWriterSpi.\n", "ServiceRegistry": "\nA registry for service provider instances for Image I/O service types.\n", "ImageInputStream": "\nA seekable input stream interface for use by\n ImageReaders.\n", "ImageOutputStream": "\nA seekable output stream interface for use by\n ImageWriters.\n", "FileCacheImageInputStream": "\nAn implementation of ImageInputStream that gets its\n input from a regular InputStream.\n", "FileCacheImageOutputStream": "\nAn implementation of ImageOutputStream that writes its\n output to a regular OutputStream.\n", "FileImageInputStream": "\nAn implementation of ImageInputStream that gets its\n input from a File or RandomAccessFile.\n", "FileImageOutputStream": "\nAn implementation of ImageOutputStream that writes its\n output directly to a File or\n RandomAccessFile.\n", "IIOByteBuffer": "\nA class representing a mutable reference to an array of bytes and\n an offset and length within that array.\n", "ImageInputStreamImpl": "\nAn abstract class implementing the ImageInputStream interface.\n", "ImageOutputStreamImpl": "\nAn abstract class implementing the ImageOutputStream interface.\n", "MemoryCacheImageInputStream": "\nAn implementation of ImageInputStream that gets its\n input from a regular InputStream.\n", "MemoryCacheImageOutputStream": "\nAn implementation of ImageOutputStream that writes its\n output to a regular OutputStream.\n", "AttributeException": "\nInterface AttributeException is a mixin interface which a subclass of\n PrintException can implement to report an error\n condition involving one or more printing attributes that a particular Print\n Service instance does not support.\n", "CancelablePrintJob": "\nThis interface is used by a printing application to cancel a print job.\n", "Doc": "\nInterface Doc specifies the interface for an object that supplies one\n piece of print data for a Print Job.\n/Deprecated, for removal: This API element is subject to removal in a future version.\nThe declarations in this package have been superseded by those\n   in the package jdk.javadoc.doclet.\n", "DocPrintJob": "\nThis interface represents a print job that can print a specified document\n with a set of job attributes.\n", "FlavorException": "\nInterface FlavorException is a mixin interface which a subclass of\n PrintException can implement to report an error\n condition involving a doc flavor or flavors (class DocFlavor).\n", "MultiDoc": "\nInterface MultiDoc specifies the interface for an object that\n supplies more than one piece of print data for a Print Job.\n", "MultiDocPrintJob": "\nObtained from a MultiDocPrintService, a MultiDocPrintJob can\n print a specified collection of documents as a single print job with a set of\n job attributes.\n", "MultiDocPrintService": "\nInterface MultiPrintService is the factory for a\n MultiDocPrintJob.\n", "PrintService": "\nInterface PrintService is the factory for a DocPrintJob.\n", "URIException": "\nInterface URIException is a mixin interface which a subclass of\n PrintException can implement to report an error\n condition involving a URI address.\n", "DocFlavor": "\nClass DocFlavor encapsulates an object that specifies the format in\n which print data is supplied to a DocPrintJob.\n", "DocFlavor.BYTE_ARRAY": "\nClass DocFlavor.BYTE_ARRAY provides predefined static constant\n DocFlavor objects for example doc flavors using a byte array\n (byte[]) as the print data representation class.\n", "DocFlavor.CHAR_ARRAY": "\nClass DocFlavor.CHAR_ARRAY provides predefined static constant\n DocFlavor objects for example doc flavors using a character array\n (char[]) as the print data representation class.\n", "DocFlavor.INPUT_STREAM": "\nClass DocFlavor.INPUT_STREAM provides predefined static constant\n DocFlavor objects for example doc flavors using a byte stream\n (java.io.InputStream) as the print data\n representation class.\n", "DocFlavor.READER": "\nClass DocFlavor.READER provides predefined static constant\n DocFlavor objects for example doc flavors using a character\n stream (java.io.Reader) as the print data\n representation class.\n", "DocFlavor.SERVICE_FORMATTED": "\nClass DocFlavor.SERVICE_FORMATTED provides predefined static\n constant DocFlavor objects for example doc flavors for service\n formatted print data.\n", "DocFlavor.STRING": "\nClass DocFlavor.STRING provides predefined static constant\n DocFlavor objects for example doc flavors using a string\n (java.lang.String) as the print data representation class.\n", "DocFlavor.URL": "\nClass DocFlavor.URL provides predefined static constant\n DocFlavor objects.\n", "ServiceUI": "\nThis class is a collection of UI convenience methods which provide a\n graphical user dialog for browsing print services looked up through the Java\n Print Service API.\n", "ServiceUIFactory": "\nServices may optionally provide UIs which allow different styles of\n interaction in different roles.\n", "SimpleDoc": "\nThis class is an implementation of interface Doc that can be used in\n many common printing requests.\n", "StreamPrintService": "\nThis class extends PrintService and represents a print service that\n prints data in different formats to a client-provided output stream.\n", "PrintException": "\nClass PrintException encapsulates a printing-related error condition\n that occurred while using a Print Service instance.\n", "Attribute": "\nInterface Attribute is the base interface implemented by any and\n every printing attribute class to indicate that the class represents a\n printing attribute.\n/\nRepresents an MBean attribute by associating its name with its value.\n/\nThis interface represents an attribute associated with a named object.\n/\nAn interface that contains information about an attribute.\n", "AttributeSet": "\nInterface AttributeSet specifies the interface for a set of printing\n attributes.\n/\nA collection of unique attributes.\n", "DocAttribute": "\nInterface DocAttribute is a tagging interface which a printing\n attribute class implements to indicate the attribute denotes a setting for a\n doc.\n", "DocAttributeSet": "\nInterface DocAttributeSet specifies the interface for a set of doc\n attributes, i.e. printing attributes that implement interface\n DocAttribute.\n", "PrintJobAttribute": "\nPrintJobAttribute is a tagging interface which a printing attribute\n class implements to indicate the attribute describes the status of a Print\n Job or some other characteristic of a Print Job.\n", "PrintJobAttributeSet": "\nInterface PrintJobAttributeSet specifies the interface for a set of\n print job attributes, i.e. printing attributes that implement interface\n PrintJobAttribute.\n", "PrintRequestAttribute": "\nInterface PrintRequestAttribute is a tagging interface which a\n printing attribute class implements to indicate the attribute denotes a\n requested setting for a print job.\n", "PrintRequestAttributeSet": "\nInterface PrintRequestAttributeSet specifies the interface for a set\n of print request attributes, i.e. printing attributes that implement\n interface PrintRequestAttribute.\n", "PrintServiceAttribute": "\nInterface PrintServiceAttribute is a tagging interface which a\n printing attribute class implements to indicate the attribute describes the\n status of a Print Service or some other characteristic of a Print Service.\n", "PrintServiceAttributeSet": "\nInterface PrintServiceAttributeSet specifies the interface for a set\n of print job attributes, i.e. printing attributes that implement interface\n PrintServiceAttribute.\n", "SupportedValuesAttribute": "\nInterface SupportedValuesAttribute is a tagging interface which a\n printing attribute class implements to indicate the attribute describes the\n supported values for another attribute.\n", "AttributeSetUtilities": "\nClass AttributeSetUtilities provides static methods for manipulating\n AttributeSets.\n", "DateTimeSyntax": "\nClass DateTimeSyntax is an abstract base class providing the common\n implementation of all attributes whose value is a date and time.\n", "EnumSyntax": "\nClass EnumSyntax is an abstract base class providing the common\n implementation of all \"type safe enumeration\" objects.\n", "HashAttributeSet": "\nClass HashAttributeSet provides an AttributeSet\n implementation with characteristics of a hash map.\n", "HashDocAttributeSet": "\nClass HashDocAttributeSet provides an attribute set which inherits\n its implementation from class HashAttributeSet and\n enforces the semantic restrictions of interface\n DocAttributeSet.\n", "HashPrintJobAttributeSet": "\nClass HashPrintJobAttributeSet provides an attribute set which\n inherits its implementation from class\n HashAttributeSet and enforces the semantic\n restrictions of interface PrintJobAttributeSet.\n", "HashPrintRequestAttributeSet": "\nClass HashPrintRequestAttributeSet inherits its implementation from\n class HashAttributeSet and enforces the semantic\n restrictions of interface\n PrintRequestAttributeSet.\n", "HashPrintServiceAttributeSet": "\nClass HashPrintServiceAttributeSet provides an attribute set which\n inherits its implementation from class\n HashAttributeSet and enforces the semantic\n restrictions of interface\n PrintServiceAttributeSet.\n", "IntegerSyntax": "\nClass IntegerSyntax is an abstract base class providing the common\n implementation of all attributes with integer values.\n", "ResolutionSyntax": "\nClass ResolutionSyntax is an abstract base class providing the common\n implementation of all attributes denoting a printer resolution.\n", "SetOfIntegerSyntax": "\nClass SetOfIntegerSyntax is an abstract base class providing the\n common implementation of all attributes whose value is a set of nonnegative\n integers.\n", "Size2DSyntax": "\nClass Size2DSyntax is an abstract base class providing the common\n implementation of all attributes denoting a size in two dimensions.\n", "TextSyntax": "\nClass TextSyntax is an abstract base class providing the common\n implementation of all attributes whose value is a string.\n", "URISyntax": "\nClass URISyntax is an abstract base class providing the common\n implementation of all attributes whose value is a Uniform Resource Identifier\n (URI).\n", "UnmodifiableSetException": "\nThrown to indicate that the requested operation cannot be performed because\n the set is unmodifiable.\n", "Compression\n": "X\n      \u00a0\n      \u00a0\n      \u00a0\n      \u00a0\n   ", "DocumentName\n": "X\n      \u00a0\n      \u00a0\n      \u00a0\n      \u00a0\n   ", "Chromaticity\n": "X\n      X\n      X\n      \u00a0\n      \u00a0\n   ", "Copies\n": "\u00a0\n      X\n      X\n      \u00a0\n      CopiesSupported\n", "Finishings\n": "X\n      X\n      X\n      \u00a0\n      \u00a0\n   ", "JobHoldUntil\n": "\u00a0\n      X\n      X\n      \u00a0\n      \u00a0\n   ", "JobImpressions\n": "\u00a0\n      X\n      X\n      \u00a0\n      JobImpressionsSupported\n", "JobKOctets\n": "\u00a0\n      X\n      X\n      \u00a0\n      JobKOctetsSupported\n", "JobMediaSheets\n": "\u00a0\n      X\n      X\n      \u00a0\n      JobMediaSheetsSupported\n", "JobName\n": "\u00a0\n      X\n      X\n      \u00a0\n      \u00a0\n   ", "JobPriority\n": "\u00a0\n      X\n      X\n      \u00a0\n      JobPrioritySupported\n", "JobSheets\n": "\u00a0\n      X\n      X\n      \u00a0\n      \u00a0\n   ", "Media\n": "X\n      X\n      X\n      \u00a0\n      \u00a0\n   ", "MediaSize\n": "\u00a0\n      \u00a0\n      \u00a0\n      \u00a0\n      \u00a0\n   ", "\n     MultipleDocumentHandling\n": "\u00a0\n      X\n      X\n      \u00a0\n      \u00a0\n   ", "NumberUp\n": "X\n      X\n      X\n      \u00a0\n      NumberUpSupported\n", "\n     OrientationRequested\n": "X\n      X\n      X\n      \u00a0\n      \u00a0\n   ", "PageRanges\n": "X\n      X\n      X\n      \u00a0\n      \u00a0\n   ", "\n     PresentationDirection\n": "X\n      X\n      X\n      \u00a0\n      \u00a0\n   ", "PrinterResolution\n": "X\n      X\n      X\n      \u00a0\n      \u00a0\n   ", "PrintQuality\n": "X\n      X\n      X\n      \u00a0\n      \u00a0\n   ", "RequestingUserName\n": "\u00a0\n      X\n      X\n      \u00a0\n      \u00a0\n   ", "SheetCollate\n": "X\n      X\n      X\n      \u00a0\n      \u00a0\n   ", "Sides\n": "X\n      X\n      X\n      \u00a0\n      \u00a0\n   ", "\n     DateTimeAtCompleted\n": "\u00a0\n      \u00a0\n      X\n      \u00a0\n      \u00a0\n   ", "DateTimeAtCreation\n": "\u00a0\n      \u00a0\n      X\n      \u00a0\n      \u00a0\n   ", "\n     DateTimeAtProcessing\n": "\u00a0\n      \u00a0\n      X\n      \u00a0\n      \u00a0\n   ", "\n     JobImpressionsCompleted\n": "\u00a0\n      \u00a0\n      X\n      \u00a0\n      \u00a0\n   ", "\n     JobKOctetsProcessed\n": "\u00a0\n      \u00a0\n      X\n      \u00a0\n      \u00a0\n   ", "\n     JobMediaSheetsCompleted\n": "\u00a0\n      \u00a0\n      X\n      \u00a0\n      \u00a0\n   ", "\n     JobMessageFromOperator\n": "\u00a0\n      \u00a0\n      X\n      \u00a0\n      \u00a0\n   ", "\n     JobOriginatingUserName\n": "\u00a0\n      \u00a0\n      X\n      \u00a0\n      \u00a0\n   ", "JobState\n": "\u00a0\n      \u00a0\n      X\n      \u00a0\n      \u00a0\n   ", "JobStateReasons\n\n     Contains zero or more --\n     ": "\u00a0\n      \u00a0\n      X\n      \u00a0\n      \u00a0\n   ", "-- JobStateReason\n": "\u00a0\n      \u00a0\n      \u00a0\n      \u00a0\n      \u00a0\n   ", "NumberOfDocuments\n": "\u00a0\n      \u00a0\n      X\n      \u00a0\n      \u00a0\n   ", "\n     NumberOfInterveningJobs\n": "\u00a0\n      \u00a0\n      X\n      \u00a0\n      \u00a0\n   ", "\n     OutputDeviceAssigned\n": "\u00a0\n      \u00a0\n      X\n      \u00a0\n      \u00a0\n   ", "ColorSupported\n": "\u00a0\n      \u00a0\n      \u00a0\n      X\n      \u00a0\n   ", "PagesPerMinute\n": "\u00a0\n      \u00a0\n      \u00a0\n      X\n      \u00a0\n   ", "\n     PagesPerMinuteColor\n": "\u00a0\n      \u00a0\n      \u00a0\n      X\n      \u00a0\n   ", "\n     PDLOverrideSupported\n": "\u00a0\n      \u00a0\n      \u00a0\n      X\n      \u00a0\n   ", "\n     PrinterIsAcceptingJobs\n": "\u00a0\n      \u00a0\n      \u00a0\n      X\n      \u00a0\n   ", "PrinterInfo\n": "\u00a0\n      \u00a0\n      \u00a0\n      X\n      \u00a0\n   ", "PrinterLocation\n": "\u00a0\n      \u00a0\n      \u00a0\n      X\n      \u00a0\n   ", "\n     PrinterMessageFromOperator\n": "\u00a0\n      \u00a0\n      \u00a0\n      X\n      \u00a0\n   ", "\n     PrinterMakeAndModel\n": "\u00a0\n      \u00a0\n      \u00a0\n      X\n      \u00a0\n   ", "PrinterMoreInfo\n": "\u00a0\n      \u00a0\n      \u00a0\n      X\n      \u00a0\n   ", "\n     PrinterMoreInfoManufacturer\n": "\u00a0\n      \u00a0\n      \u00a0\n      X\n      \u00a0\n   ", "PrinterName\n": "\u00a0\n      \u00a0\n      \u00a0\n      X\n      \u00a0\n   ", "PrinterState\n": "\u00a0\n      \u00a0\n      \u00a0\n      X\n      \u00a0\n   ", "\n     PrinterStateReasons\n\n     Contains zero or more --\n     ": "\u00a0\n      \u00a0\n      \u00a0\n      X\n      \u00a0\n   ", "-- \n     PrinterStateReason\n": "\u00a0\n      \u00a0\n      \u00a0\n      \u00a0\n      \u00a0\n   ", "-- Severity\n": "\u00a0\n      \u00a0\n      \u00a0\n      \u00a0\n      \u00a0\n   ", "QueuedJobCount\n": "\u00a0\n      \u00a0\n      \u00a0\n      X\n      \u00a0\n   ", "\n     ReferenceUriSchemesSupported\n": "\u00a0\n      \u00a0\n      \u00a0\n      \u00a0\n      \u00a0\n ", "Chromaticity": "\nClass Chromaticity is a printing attribute class, an enumeration,\n that specifies monochrome or color printing.\n", "ColorSupported": "\nClass ColorSupported is a printing attribute class, an enumeration,\n that identifies whether the device is capable of any type of color printing\n at all, including highlight color as well as full process color.\n", "Compression": "\nClass Compression is a printing attribute class, an enumeration, that\n specifies how print data is compressed.\n", "Copies": "\nClass Copies is an integer valued printing attribute class that\n specifies the number of copies to be printed.\n", "CopiesSupported": "\nClass CopiesSupported is a printing attribute class, a set of\n integers, that gives the supported values for a Copies\n attribute.\n", "DateTimeAtCompleted": "\nClass DateTimeAtCompleted is a printing attribute class, a date-time\n attribute, that indicates the date and time at which the Print Job completed\n (or was canceled or aborted).\n", "DateTimeAtCreation": "\nClass DateTimeAtCreation is a printing attribute class, a date-time\n attribute, that indicates the date and time at which the Print Job was\n created.\n", "DateTimeAtProcessing": "\nClass DateTimeAtProcessing is a printing attribute class, a date-time\n attribute, that indicates the date and time at which the Print Job first\n began processing.\n", "Destination": "\nClass Destination is a printing attribute class, a URI, that\n is used to indicate an alternate destination for the spooled printer\n formatted data.\n", "DialogOwner": "\nAn attribute class used to support requesting a print or page setup dialog\n be kept displayed on top of all windows or some specific window.\n", "DialogTypeSelection": "\nClass DialogTypeSelection is a printing attribute class, an\n enumeration, that indicates the user dialog type to be used for specifying\n printing options.\n", "DocumentName": "\nClass DocumentName is a printing attribute class, a text attribute,\n that specifies the name of a document.\n", "Fidelity": "\nClass Fidelity is a printing attribute class, an enumeration, that\n indicates whether total fidelity to client supplied print request attributes\n is required.\n", "Finishings": "\nClass Finishings is a printing attribute class, an enumeration, that\n identifies whether the printer applies a finishing operation of some kind of\n binding to each copy of each printed document in the job.\n", "JobHoldUntil": "\nClass JobHoldUntil is a printing attribute class, a date-time\n attribute, that specifies the exact date and time at which the job must\n become a candidate for printing.\n", "JobImpressions": "\nClass JobImpressions is an integer valued printing attribute class\n that specifies the total size in number of impressions of the document(s)\n being submitted.\n", "JobImpressionsCompleted": "\nClass JobImpressionsCompleted is an integer valued printing attribute\n class that specifies the number of impressions completed for the job so far.\n", "JobImpressionsSupported": "\nClass JobImpressionsSupported is a printing attribute class, a set of\n integers, that gives the supported values for a\n JobImpressions attribute.\n", "JobKOctets": "\nClass JobKOctets is an integer valued printing attribute class that\n specifies the total size of the document(s) in K octets, i.e., in units of\n 1024 octets requested to be processed in the job.\n", "JobKOctetsProcessed": "\nClass JobKOctetsProcessed is an integer valued printing attribute\n class that specifies the total number of print data octets processed so far\n in K octets, i.e., in units of 1024 octets.\n", "JobKOctetsSupported": "\nClass JobKOctetsSupported is a printing attribute class, a set of\n integers, that gives the supported values for a JobKOctets\n attribute.\n", "JobMediaSheets": "\nClass JobMediaSheets is an integer valued printing attribute class\n that specifies the total number of media sheets to be produced for this job.\n", "JobMediaSheetsCompleted": "\nClass JobMediaSheetsCompleted is an integer valued printing attribute\n class that specifies the number of media sheets which have completed marking\n and stacking for the entire job so far, whether those sheets have been\n processed on one side or on both.\n", "JobMediaSheetsSupported": "\nClass JobMediaSheetsSupported is a printing attribute class, a set of\n integers, that gives the supported values for a\n JobMediaSheets attribute.\n", "JobMessageFromOperator": "\nClass JobMessageFromOperator is a printing attribute class, a text\n attribute, that provides a message from an operator, system administrator, or\n \"intelligent\" process to indicate to the end user the reasons for\n modification or other management action taken on a job.\n", "JobName": "\nClass JobName is a printing attribute class, a text attribute, that\n specifies the name of a print job.\n", "JobOriginatingUserName": "\nClass JobOriginatingUserName is a printing attribute class, a text\n attribute, that contains the name of the end user that submitted the print\n job.\n", "JobPriority": "\nClass JobPriority is an integer valued printing attribute class that\n specifies a print job's priority.\n", "JobPrioritySupported": "\nClass JobPrioritySupported is an integer valued printing attribute\n class that specifies whether a Print Service instance supports the\n JobPriority attribute and the number of different job\n priority levels supported.\n", "JobSheets": "\nClass JobSheets is a printing attribute class, an enumeration, that\n determines which job start and end sheets, if any, must be printed with a\n job.\n", "JobState": "\nJobState is a printing attribute class, an enumeration, that\n identifies the current state of a print job.\n", "JobStateReason": "\nClass JobStateReason is a printing attribute class, an enumeration,\n that provides additional information about the job's current state, i.e.,\n information that augments the value of the job's JobState\n attribute.\n", "JobStateReasons": "\nClass JobStateReasons is a printing attribute class, a set of\n enumeration values, that provides additional information about the job's\n current state, i.e., information that augments the value of the job's\n JobState attribute.\n", "Media": "\nClass Media is a printing attribute class that specifies the medium\n on which to print.\n", "MediaName": "\nClass MediaName is a subclass of Media, a printing attribute\n class (an enumeration) that specifies the media for a print job as a name.\n", "MediaPrintableArea": "\nClass MediaPrintableArea is a printing attribute used to distinguish\n the printable and non-printable areas of media.\n", "MediaSize": "\nClass MediaSize is a two-dimensional size valued printing attribute\n class that indicates the dimensions of the medium in a portrait orientation,\n with the X dimension running along the bottom edge and the Y\n dimension running along the left edge.\n", "MediaSize.Engineering": "\nClass MediaSize.Engineering includes MediaSize\n values for engineering media.\n", "MediaSize.ISO": "\nClass MediaSize.ISO includes MediaSize values\n for ISO media.\n", "MediaSize.JIS": "\nClass MediaSize.JIS includes MediaSize values\n for JIS (Japanese) media.\n", "MediaSize.NA": "\nClass MediaSize.NA includes MediaSize values\n for North American media.\n", "MediaSize.Other": "\nClass MediaSize.Other includes MediaSize values\n for miscellaneous media.\n", "MediaSizeName": "\nClass MediaSizeName is a subclass of Media.\n", "MediaTray": "\nClass MediaTray is a subclass of Media.\n", "MultipleDocumentHandling": "\nClass MultipleDocumentHandling is a printing attribute class, an\n enumeration, that controls finishing operations and the placement of one or\n more print-stream pages into impressions and onto media sheets.\n", "NumberOfDocuments": "\nClass NumberOfDocuments is an integer valued printing attribute that\n indicates the number of individual docs the printer has accepted for this\n job, regardless of whether the docs' print data has reached the printer or\n not.\n", "NumberOfInterveningJobs": "\nClass NumberOfInterveningJobs is an integer valued printing attribute\n that indicates the number of jobs that are ahead of this job in the relative\n chronological order of expected time to complete (i.e., the current scheduled\n order).\n", "NumberUp": "\nClass NumberUp is an integer valued printing attribute class that\n specifies the number of print-stream pages to impose upon a single side of an\n instance of a selected medium.\n", "NumberUpSupported": "\nClass NumberUpSupported is a printing attribute class, a set of\n integers, that gives the supported values for a NumberUp\n attribute.\n", "OrientationRequested": "\nClass OrientationRequested is a printing attribute class, an\n enumeration, that indicates the desired orientation for printed print-stream\n pages; it does not describe the orientation of the client-supplied\n print-stream pages.\n", "OutputDeviceAssigned": "\nClass OutputDeviceAssigned is a printing attribute class, a text\n attribute, that identifies the output device to which the service has\n assigned this job.\n", "PageRanges": "\nClass PageRanges is a printing attribute class, a set of integers,\n that identifies the range(s) of print-stream pages that the Printer object\n uses for each copy of each document which are to be printed.\n", "PagesPerMinute": "\nClass PagesPerMinute is an integer valued printing attribute that\n indicates the nominal number of pages per minute to the nearest whole number\n which may be generated by this printer (e.g., simplex, black-and-white).\n", "PagesPerMinuteColor": "\nClass PagesPerMinuteColor is an integer valued printing attribute\n that indicates the nominal number of pages per minute to the nearest whole\n number which may be generated by this printer when printing color (e.g.,\n simplex, color).\n", "PDLOverrideSupported": "\nClass PDLOverrideSupported is a printing attribute class, an\n enumeration, that expresses the printer's ability to attempt to override\n processing instructions embedded in documents' print data with processing\n instructions specified as attributes outside the print data.\n", "PresentationDirection": "\nClass PresentationDirection is a printing attribute class, an\n enumeration, that is used in conjunction with the NumberUp\n attribute to indicate the layout of multiple print-stream pages to impose\n upon a single side of an instance of a selected medium.\n", "PrinterInfo": "\nClass PrinterInfo is a printing attribute class, a text attribute,\n that provides descriptive information about a printer.\n", "PrinterIsAcceptingJobs": "\nClass PrinterIsAcceptingJobs is a printing attribute class, an\n enumeration, that indicates whether the printer is currently able to accept\n jobs.\n", "PrinterLocation": "\nClass PrinterLocation is a printing attribute class, a text\n attribute, that identifies the location of the device.\n", "PrinterMakeAndModel": "\nClass PrinterMakeAndModel is a printing attribute class, a text\n attribute, that the make and model of the printer.\n", "PrinterMessageFromOperator": "\nClass PrinterMessageFromOperator is a printing attribute class, a\n text attribute, that provides a message from an operator, system\n administrator, or \"intelligent\" process to indicate to the end user\n information about or status of the printer, such as why it is unavailable or\n when it is expected to be available.\n", "PrinterMoreInfo": "\nClass PrinterMoreInfo is a printing attribute class, a URI,\n that is used to obtain more information about this specific printer.\n", "PrinterMoreInfoManufacturer": "\nClass PrinterMoreInfoManufacturer is a printing attribute class, a\n URI, that is used to obtain more information about this type of\n device.\n", "PrinterName": "\nClass PrinterName is a printing attribute class, a text attribute,\n that specifies the name of a printer.\n", "PrinterResolution": "\nClass PrinterResolution is a printing attribute class that specifies\n an exact resolution supported by a printer or to be used for a print job.\n", "PrinterState": "\nClass PrinterState is a printing attribute class, an enumeration,\n that identifies the current state of a printer.\n", "PrinterStateReason": "\nClass PrinterStateReason is a printing attribute class, an\n enumeration, that provides additional information about the printer's current\n state, i.e., information that augments the value of the printer's\n PrinterState attribute.\n", "PrinterStateReasons": "\nClass PrinterStateReasons is a printing attribute class, a set of\n enumeration values, that provides additional information about the printer's\n current state, i.e., information that augments the value of the printer's\n PrinterState attribute.\n", "PrinterURI": "\nClass PrinterURI is a printing attribute class, a URI, that\n specifies the globally unique name of a printer.\n", "PrintQuality": "\nClass PrintQuality is a printing attribute class, an enumeration,\n that specifies the print quality that the printer uses for the job.\n", "QueuedJobCount": "\nClass QueuedJobCount is an integer valued printing attribute that\n indicates the number of jobs in the printer whose JobState\n is either PENDING, PENDING_HELD, PROCESSING, or\n PROCESSING_STOPPED.\n", "ReferenceUriSchemesSupported": "\nClass ReferenceUriSchemesSupported is a printing attribute class an\n enumeration, that indicates a \"URI scheme,\" such as \"http:\" or \"ftp:\", that a\n printer can use to retrieve print data stored at a URI location.\n", "RequestingUserName": "\nClass RequestingUserName is a printing attribute class, a text\n attribute, that specifies the name of the end user that submitted the print\n job.\n", "Severity": "\nClass Severity is a printing attribute class, an enumeration, that\n denotes the severity of a PrinterStateReason\n attribute.\n", "SheetCollate": "\nClass SheetCollate is a printing attribute class, an enumeration,\n that specifies whether or not the media sheets of each copy of each printed\n document in a job are to be in sequence, when multiple copies of the document\n are specified by the Copies attribute.\n", "Sides": "\nClass Sides is a printing attribute class, an enumeration, that\n specifies how print-stream pages are to be imposed upon the sides of an\n instance of a selected medium, i.e., an impression.\n", "PrintJobAttributeListener": "\nImplementations of this interface are attached to a\n DocPrintJob to monitor the status of\n attribute changes associated with the print job.\n", "PrintJobListener": "\nImplementations of this listener interface should be attached to a\n DocPrintJob to monitor the status of the\n printer job.\n", "PrintServiceAttributeListener": "\nImplementations of this listener interface are attached to a\n PrintService to monitor the status of the\n print service.\n", "PrintEvent": "\nClass PrintEvent is the super class of all Print Service API events.\n", "PrintJobAdapter": "\nAn abstract adapter class for receiving print job events.\n", "PrintJobAttributeEvent": "\nClass PrintJobAttributeEvent encapsulates an event a\n PrintService reports to let the client know that one or more printing\n attributes for a PrintJob have changed.\n", "PrintJobEvent": "\nClass PrintJobEvent encapsulates common events a print job reports to\n let a listener know of progress in the processing of the DocPrintJob.\n", "PrintServiceAttributeEvent": "\nClass PrintServiceAttributeEvent encapsulates an event a Print\n Service instance reports to let the client know of changes in the print\n service state.\n", "ControllerEventListener": "\nThe ControllerEventListener interface should be implemented by\n classes whose instances need to be notified when a Sequencer has\n processed a requested type of MIDI control-change event.\n", "MetaEventListener": "\nThe MetaEventListener interface should be implemented by classes\n whose instances need to be notified when a Sequencer has processed a\n MetaMessage.\n", "MidiChannel": "\nA MidiChannel object represents a single MIDI channel.\n", "MidiDevice": "\nMidiDevice is the base interface for all MIDI devices.\n", "MidiDeviceReceiver": "\nMidiDeviceReceiver is a Receiver which represents a MIDI\n input connector of a MidiDevice (see\n MidiDevice.getReceiver()).\n", "MidiDeviceTransmitter": "\nMidiDeviceTransmitter is a Transmitter which represents a\n MIDI input connector of a MidiDevice (see\n MidiDevice.getTransmitter()).\n", "Receiver": "\nA Receiver receives MidiEvent objects and typically does\n something useful in response, such as interpreting them to generate sound or\n raw MIDI output.\n", "Sequencer": "\nA hardware or software device that plays back a MIDI\n sequence is known as a sequencer.\n", "Soundbank": "\nA Soundbank contains a set of Instruments that can be loaded\n into a Synthesizer.\n", "Synthesizer": "\nA Synthesizer generates sound.\n", "Transmitter": "\nA Transmitter sends MidiEvent objects to one or more\n Receivers.\n", "Instrument": "\nAn instrument is a sound-synthesis algorithm with certain parameter settings,\n usually designed to emulate a specific real-world musical instrument or to\n achieve a specific sort of sound effect.\n", "MetaMessage": "\nA MetaMessage is a MidiMessage that is not meaningful to\n synthesizers, but that can be stored in a MIDI file and interpreted by a\n sequencer program.\n", "MidiDevice.Info": "\nA MidiDevice.Info object contains assorted data about a\n MidiDevice, including its name, the company who created it, and\n descriptive text.\n", "MidiEvent": "\nMIDI events contain a MIDI message and a corresponding time-stamp expressed\n in ticks, and can represent the MIDI event information stored in a MIDI file\n or a Sequence object.\n", "MidiFileFormat": "\nA MidiFileFormat object encapsulates a MIDI file's type, as well as\n its length and timing information.\n", "MidiMessage": "\nMidiMessage is the base class for MIDI messages.\n", "MidiSystem": "\nThe MidiSystem class provides access to the installed MIDI system\n resources, including devices such as synthesizers, sequencers, and MIDI input\n and output ports.\n", "Patch": "\nA Patch object represents a location, on a MIDI synthesizer, into\n which a single instrument is stored (loaded).\n", "Sequence": "\nA Sequence is a data structure containing musical information (often\n an entire song or composition) that can be played back by a Sequencer\n object.\n", "Sequencer.SyncMode": "\nA SyncMode object represents one of the ways in which a MIDI\n sequencer's notion of time can be synchronized with a master or slave\n device.\n", "ShortMessage": "\nA ShortMessage contains a MIDI message that has at most two data\n bytes following its status byte.\n", "SoundbankResource": "\nA SoundbankResource represents any audio resource stored in a\n Soundbank.\n", "SysexMessage": "\nA SysexMessage object represents a MIDI system exclusive message.\n", "Track": "\nA MIDI track is an independent stream of MIDI events (time-stamped MIDI data)\n that can be stored along with other tracks in a standard MIDI file.\n", "VoiceStatus": "\nA VoiceStatus object contains information about the current status of\n one of the voices produced by a Synthesizer.\n", "InvalidMidiDataException": "\nAn InvalidMidiDataException indicates that inappropriate MIDI data\n was encountered.\n", "MidiUnavailableException": "\nA MidiUnavailableException is thrown when a requested MIDI component\n cannot be opened or created because it is unavailable.\n", "Clip": "\nThe Clip interface represents a special kind of data line whose audio\n data can be loaded prior to playback, instead of being streamed in real time.\n", "DataLine": "\nDataLine adds media-related functionality to its superinterface,\n Line.\n", "Line": "\nThe Line interface represents a mono or multi-channel audio feed.\n", "LineListener": "\nInstances of classes that implement the LineListener interface can\n register to receive events when a line's status changes.\n", "Mixer": "\nA mixer is an audio device with one or more lines.\n", "Port": "\nPorts are simple lines for input or output of audio to or from audio devices.\n", "SourceDataLine": "\nA source data line is a data line to which data may be written.\n", "TargetDataLine": "\nA target data line is a type of DataLine from which audio data can be\n read.\n", "AudioFileFormat": "\nAn instance of the AudioFileFormat class describes an audio file,\n including the file type, the file's length in bytes, the length in sample\n frames of the audio data contained in the file, and the format of the audio\n data.\n", "AudioFileFormat.Type": "\nAn instance of the Type class represents one of the standard\n types of audio file.\n", "AudioFormat": "\nAudioFormat is the class that specifies a particular arrangement of\n data in a sound stream.\n", "AudioFormat.Encoding": "\nThe Encoding class names the specific type of data representation\n used for an audio stream.\n", "AudioInputStream": "\nAn audio input stream is an input stream with a specified audio format and\n length.\n", "AudioPermission": "\nThe AudioPermission class represents access rights to the audio\n system resources.\n", "AudioSystem": "\nThe AudioSystem class acts as the entry point to the sampled-audio\n system resources.\n", "BooleanControl": "\nA BooleanControl provides the ability to switch between two possible\n settings that affect a line's audio.\n", "BooleanControl.Type": "\nAn instance of the BooleanControl.Type class identifies one kind\n of boolean control.\n", "CompoundControl": "\nA CompoundControl, such as a graphic equalizer, provides control over\n two or more related properties, each of which is itself represented as a\n Control.\n", "CompoundControl.Type": "\nAn instance of the CompoundControl.Type inner class identifies\n one kind of compound control.\n", "Control": "\nLines often have a set of controls, such as gain and pan, that\n affect the audio signal passing through the line.\n/\nThis interface represents an LDAPv3 control as defined in\n RFC 2251.\n", "Control.Type": "\nAn instance of the Type class represents the type of the control.\n", "DataLine.Info": "\nBesides the class information inherited from its superclass,\n DataLine.Info provides additional information specific to data\n lines.\n", "EnumControl": "\nAn EnumControl provides control over a set of discrete possible\n values, each represented by an object.\n", "EnumControl.Type": "\nAn instance of the EnumControl.Type inner class identifies one\n kind of enumerated control.\n", "FloatControl": "\nA FloatControl object provides control over a range of floating-point\n values.\n", "FloatControl.Type": "\nAn instance of the FloatControl.Type inner class identifies one\n kind of float control.\n", "Line.Info": "\nA Line.Info object contains information about a line.\n", "LineEvent": "\nThe LineEvent class encapsulates information that a line sends its\n listeners whenever the line opens, closes, starts, or stops.\n", "LineEvent.Type": "\nThe LineEvent.Type inner class identifies what kind of event occurred on\n a line.\n", "Mixer.Info": "\nThe Mixer.Info class represents information about an audio mixer,\n including the product's name, version, and vendor, along with a textual\n description.\n", "Port.Info": "\nThe Port.Info class extends Line.Info with additional\n information specific to ports, including the port's name and whether it\n is a source or a target for its mixer.\n", "ReverbType": "\nThe ReverbType class provides methods for accessing various\n reverberation settings to be applied to an audio signal.\n", "LineUnavailableException": "\nA LineUnavailableException is an exception indicating that a line\n cannot be opened because it is unavailable.\n", "UnsupportedAudioFileException": "\nAn UnsupportedAudioFileException is an exception indicating that an\n operation failed because a file did not contain valid data of a recognized\n file type and format.\n", "Action": "\nThe Action interface provides a useful extension to the\n ActionListener\n interface in cases where the same functionality may be accessed by\n several controls.\n", "BoundedRangeModel": "\nDefines the data model used by components like Sliders\n and ProgressBars.\n", "ButtonModel": "\nState model for buttons.\n", "CellEditor": "\nThis interface defines the methods any general editor should be able\n to implement.\n", "ComboBoxEditor": "\nThe editor component used for JComboBox components.\n", "ComboBoxModel<E>": "\nA data model for a combo box.\n", "DesktopManager": "\nDesktopManager objects are owned by a JDesktopPane object.\n", "Icon": "\nA small fixed size picture, typically used to decorate components.\n", "JComboBox.KeySelectionManager": "\nThe interface that defines a KeySelectionManager.\n", "ListCellRenderer<E>": "\nIdentifies components that can be used as \"rubber stamps\" to paint\n the cells in a JList.\n", "ListModel<E>": "\nThis interface defines the methods components like JList use\n to get the value of each cell in a list and the length of the list.\n", "ListSelectionModel": "\nThis interface represents the current state of the\n selection for any of the components that display a\n list of values with stable indices.\n", "MenuElement": "\nAny component that can be placed into a menu should implement this interface.\n", "MutableComboBoxModel<E>": "\nA mutable version of ComboBoxModel.\n", "Painter<T>": "\nA painting delegate.\n", "Renderer": "\nDefines the requirements for an object responsible for\n \"rendering\" (displaying) a value.\n", "RootPaneContainer": "\nThis interface is implemented by components that have a single\n JRootPane child: JDialog, JFrame, JWindow, JApplet, JInternalFrame.\n", "Scrollable": "\nAn interface that provides information to a scrolling container\n like JScrollPane.\n", "ScrollPaneConstants": "\nConstants used with the JScrollPane component.\n", "SingleSelectionModel": "\nA model that supports at most one indexed selection.\n", "SpinnerModel": "\nA model for a potentially unbounded sequence of object values.\n", "SwingConstants": "\nA collection of constants generally used for positioning and orienting\n components on the screen.\n", "UIClientPropertyKey": "\nThis interface is used only for tagging keys for client properties for\n JComponent set by UI which needs to be cleared on L&F\n change and serialization.\n", "UIDefaults.ActiveValue": "\nThis class enables one to store an entry in the defaults\n table that's constructed each time it's looked up with one of\n the getXXX(key) methods.\n", "UIDefaults.LazyValue": "\nThis class enables one to store an entry in the defaults\n table that isn't constructed until the first time it's\n looked up with one of the getXXX(key) methods.\n", "WindowConstants": "\nConstants used to control the window-closing operation.\n", "AbstractAction": "\nThis class provides default implementations for the JFC Action\n interface.\n", "AbstractButton": "\nDefines common behaviors for buttons and menu items.\n", "AbstractCellEditor": "\nA base class for CellEditors, providing default\n implementations for the methods in the CellEditor\n interface except getCellEditorValue().\n", "AbstractListModel<E>": "\nThe abstract definition for the data model that provides\n a List with its contents.\n", "AbstractSpinnerModel": "\nThis class provides the ChangeListener part of the\n SpinnerModel interface that should be suitable for most concrete SpinnerModel\n implementations.\n", "ActionMap": "\nActionMap provides mappings from\n Objects\n (called keys or Action names)\n to Actions.\n", "BorderFactory": "\nFactory class for vending standard Border objects.\n", "Box": "\nA lightweight container\n that uses a BoxLayout object as its layout manager.\n", "Box.Filler": "\nAn implementation of a lightweight component that participates in\n layout but has no view.\n", "BoxLayout": "\nA layout manager that allows multiple components to be laid out either\n vertically or horizontally.\n", "ButtonGroup": "\nThis class is used to create a multiple-exclusion scope for\n a set of buttons.\n", "CellRendererPane": "\nThis class is inserted in between cell renderers and the components that\n use them.\n", "ComponentInputMap": "\nA ComponentInputMap is an InputMap\n associated with a particular JComponent.\n", "DebugGraphics": "\nGraphics subclass supporting graphics debugging.\n", "DefaultBoundedRangeModel": "\nA generic implementation of BoundedRangeModel.\n", "DefaultButtonModel": "\nThe default implementation of a Button component's data model.\n", "DefaultCellEditor": "\nThe default editor for table and tree cells.\n", "DefaultComboBoxModel<E>": "\nThe default model for combo boxes.\n", "DefaultDesktopManager": "\nThis is an implementation of the DesktopManager.\n", "DefaultFocusManager": "\nThis class has been obsoleted by the 1.4 focus APIs.\n", "DefaultListCellRenderer": "\nRenders an item in a list.\n", "DefaultListCellRenderer.UIResource": "\nA subclass of DefaultListCellRenderer that implements UIResource.\n", "DefaultListModel<E>": "\nThis class loosely implements the java.util.Vector\n API, in that it implements the 1.1.x version of\n java.util.Vector, has no collection class support,\n and notifies the ListDataListeners when changes occur.\n", "DefaultListSelectionModel": "\nDefault data model for list selections.\n", "DefaultRowSorter<M,\u200bI>": "\nAn implementation of RowSorter that provides sorting and\n filtering around a grid-based data model.\n", "DefaultRowSorter.ModelWrapper<M,\u200bI>": "\nDefaultRowSorter.ModelWrapper is responsible for providing\n the data that gets sorted by DefaultRowSorter.\n", "DefaultSingleSelectionModel": "\nA generic implementation of SingleSelectionModel.\n", "FocusManager": "\nThis class has been obsoleted by the 1.4 focus APIs.\n", "GrayFilter": "\nAn image filter that \"disables\" an image by turning\n it into a grayscale image, and brightening the pixels\n in the image.\n", "GroupLayout": "\nGroupLayout is a LayoutManager that hierarchically\n groups components in order to position them in a Container.\n", "ImageIcon": "\nAn implementation of the Icon interface that paints Icons\n from Images.\n", "InputMap": "\nInputMap provides a binding between an input event (currently only\n KeyStrokes are used) and an Object.\n", "InputVerifier": "\nThis class provides the validation mechanism for Swing components.\n", "InternalFrameFocusTraversalPolicy": "\nA FocusTraversalPolicy which can optionally provide an algorithm for\n determining a JInternalFrame's initial Component.\n", "JApplet": "Deprecated.\nThe Applet API is deprecated, no replacement.\n", "JButton": "\nAn implementation of a \"push\" button.\n", "JCheckBox": "\nAn implementation of a check box -- an item that can be selected or\n deselected, and which displays its state to the user.\n", "JCheckBoxMenuItem": "\nA menu item that can be selected or deselected.\n", "JColorChooser": "\nJColorChooser provides a pane of controls designed to allow\n a user to manipulate and select a color.\n", "JComboBox<E>": "\nA component that combines a button or editable field and a drop-down list.\n", "JComponent": "\nThe base class for all Swing components except top-level containers.\n", "JDesktopPane": "\nA container used to create a multiple-document interface or a virtual desktop.\n", "JDialog": "\nThe main class for creating a dialog window.\n", "JEditorPane": "\nA text component to edit various kinds of content.\n", "JFileChooser": "\nJFileChooser provides a simple mechanism for the user to\n choose a file.\n", "JFormattedTextField": "\nJFormattedTextField extends JTextField adding\n support for formatting arbitrary values, as well as retrieving a particular\n object once the user has edited the text.\n", "JFormattedTextField.AbstractFormatter": "\nInstances of AbstractFormatter are used by\n JFormattedTextField to handle the conversion both\n from an Object to a String, and back from a String to an Object.\n", "JFormattedTextField.AbstractFormatterFactory": "\nInstances of AbstractFormatterFactory are used by\n JFormattedTextField to obtain instances of\n AbstractFormatter which in turn are used to format values.\n", "JFrame": "\nAn extended version of java.awt.Frame that adds support for\n the JFC/Swing component architecture.\n", "JInternalFrame": "\nA lightweight object that provides many of the features of\n a native frame, including dragging, closing, becoming an icon,\n resizing, title display, and support for a menu bar.\n", "JInternalFrame.JDesktopIcon": "\nThis component represents an iconified version of a\n JInternalFrame.\n", "JLabel": "\nA display area for a short text string or an image,\n or both.\n", "JLayer<V extends Component>": "\nJLayer is a universal decorator for Swing components\n which enables you to implement various advanced painting effects as well as\n receive notifications of all AWTEvents generated within its borders.\n", "JLayeredPane": "\nJLayeredPane adds depth to a JFC/Swing container,\n allowing components to overlap each other when needed.\n", "JList<E>": "\nA component that displays a list of objects and allows the user to select\n one or more items.\n", "JList.DropLocation": "\nA subclass of TransferHandler.DropLocation representing\n a drop location for a JList.\n", "JMenu": "\nAn implementation of a menu -- a popup window containing\n JMenuItems that\n is displayed when the user selects an item on the JMenuBar.\n", "JMenuBar": "\nAn implementation of a menu bar.\n", "JMenuItem": "\nAn implementation of an item in a menu.\n", "JOptionPane": "\nJOptionPane makes it easy to pop up a standard dialog box that\n prompts users for a value or informs them of something.\n", "JPanel": "\nJPanel is a generic lightweight container.\n", "JPasswordField": "\nJPasswordField is a lightweight component that allows\n the editing of a single line of text where the view indicates\n something was typed, but does not show the original characters.\n", "JPopupMenu": "\nAn implementation of a popup menu -- a small window that pops up\n and displays a series of choices.\n", "JPopupMenu.Separator": "\nA popup menu-specific separator.\n", "JProgressBar": "\nA component that visually displays the progress of some task.\n", "JRadioButton": "\nAn implementation of a radio button -- an item that can be selected or\n deselected, and which displays its state to the user.\n", "JRadioButtonMenuItem": "\nAn implementation of a radio button menu item.\n", "JRootPane": "\nA lightweight container used behind the scenes by\n JFrame, JDialog, JWindow,\n JApplet, and JInternalFrame.\n", "JScrollBar": "\nAn implementation of a scrollbar.\n", "JScrollPane": "\nProvides a scrollable view of a lightweight component.\n", "JSeparator": "\nJSeparator provides a general purpose component for\n implementing divider lines - most commonly used as a divider\n between menu items that breaks them up into logical groupings.\n", "JSlider": "\nA component that lets the user graphically select a value by sliding\n a knob within a bounded interval.\n", "JSpinner": "\nA single line input field that lets the user select a\n number or an object value from an ordered sequence.\n", "JSpinner.DateEditor": "\nAn editor for a JSpinner whose model is a\n SpinnerDateModel.\n", "JSpinner.DefaultEditor": "\nA simple base class for more specialized editors\n that displays a read-only view of the model's current\n value with a JFormattedTextField.\n", "JSpinner.ListEditor": "\nAn editor for a JSpinner whose model is a\n SpinnerListModel.\n", "JSpinner.NumberEditor": "\nAn editor for a JSpinner whose model is a\n SpinnerNumberModel.\n", "JSplitPane": "\nJSplitPane is used to divide two (and only two)\n Components.\n", "JTabbedPane": "\nA component that lets the user switch between a group of components by\n clicking on a tab with a given title and/or icon.\n", "JTable": "\nThe JTable is used to display and edit regular two-dimensional tables\n of cells.\n", "JTable.DropLocation": "\nA subclass of TransferHandler.DropLocation representing\n a drop location for a JTable.\n", "JTextArea": "\nA JTextArea is a multi-line area that displays plain text.\n", "JTextField": "\nJTextField is a lightweight component that allows the editing\n of a single line of text.\n", "JTextPane": "\nA text component that can be marked up with attributes that are\n represented graphically.\n", "JToggleButton": "\nAn implementation of a two-state button.\n", "JToggleButton.ToggleButtonModel": "\nThe ToggleButton model\n", "JToolBar": "\nJToolBar provides a component that is useful for\n displaying commonly used Actions or controls.\n", "JToolBar.Separator": "\nA toolbar-specific separator.\n", "JToolTip": "\nUsed to display a \"Tip\" for a Component.\n", "JTree": "\nA control that displays a set of hierarchical data as an outline.\n", "JTree.DropLocation": "\nA subclass of TransferHandler.DropLocation representing\n a drop location for a JTree.\n", "JTree.DynamicUtilTreeNode": "\nDynamicUtilTreeNode can wrap\n vectors/hashtables/arrays/strings and\n create the appropriate children tree nodes as necessary.\n", "JTree.EmptySelectionModel": "\nEmptySelectionModel is a TreeSelectionModel\n that does not allow anything to be selected.\n", "JViewport": "\nThe \"viewport\" or \"porthole\" through which you see the underlying\n information.\n", "JWindow": "\nA JWindow is a container that can be displayed anywhere on the\n user's desktop.\n", "KeyStroke": "\nA KeyStroke represents a key action on the keyboard, or equivalent input\n device.\n", "LayoutFocusTraversalPolicy": "\nA SortingFocusTraversalPolicy which sorts Components based on their size,\n position, and orientation.\n", "LayoutStyle": "\nLayoutStyle provides information about how to position\n components.\n", "LookAndFeel": "\nLookAndFeel, as the name implies, encapsulates a look and\n feel.\n", "MenuSelectionManager": "\nA MenuSelectionManager owns the selection in menu hierarchy.\n", "OverlayLayout": "\nA layout manager to arrange components over the top\n of each other.\n", "Popup": "\nPopups are used to display a Component to the user, typically\n on top of all the other Components in a particular containment\n hierarchy.\n", "PopupFactory": "\nPopupFactory, as the name implies, is used to obtain\n instances of Popups.\n", "ProgressMonitor": "\nA class to monitor the progress of some operation.\n", "ProgressMonitorInputStream": "\nMonitors the progress of reading from some InputStream.\n", "RepaintManager": "\nThis class manages repaint requests, allowing the number\n of repaints to be minimized, for example by collapsing multiple\n requests into a single repaint for members of a component tree.\n", "RowFilter<M,\u200bI>": "\nRowFilter is used to filter out entries from the\n model so that they are not shown in the view.\n", "RowFilter.Entry<M,\u200bI>": "\nAn Entry object is passed to instances of\n RowFilter, allowing the filter to get the value of the\n entry's data, and thus to determine whether the entry should be shown.\n", "RowSorter<M>": "\nRowSorter provides the basis for sorting and filtering.\n", "RowSorter.SortKey": "\nSortKey describes the sort order for a particular column.\n", "ScrollPaneLayout": "\nThe layout manager used by JScrollPane.\n", "ScrollPaneLayout.UIResource": "\nThe UI resource version of ScrollPaneLayout.\n", "SizeRequirements": "\nFor the convenience of layout managers,\n calculates information about the size and position of components.\n", "SizeSequence": "\nA SizeSequence object\n efficiently maintains an ordered list\n of sizes and corresponding positions.\n", "SortingFocusTraversalPolicy": "\nA FocusTraversalPolicy that determines traversal order by sorting the\n Components of a focus traversal cycle based on a given Comparator.\n", "SpinnerDateModel": "\nA SpinnerModel for sequences of Dates.\n", "SpinnerListModel": "\nA simple implementation of SpinnerModel whose\n values are defined by an array or a List.\n", "SpinnerNumberModel": "\nA SpinnerModel for sequences of numbers.\n", "Spring": "\nAn instance of the Spring class holds three properties that\n  characterize its behavior: the minimum, preferred, and\n  maximum values.\n", "SpringLayout": "\nA SpringLayout lays out the children of its associated container\n according to a set of constraints.\n", "SpringLayout.Constraints": "\nA Constraints object holds the\n constraints that govern the way a component's size and position\n change in a container controlled by a SpringLayout.\n", "SwingUtilities": "\nA collection of utility methods for Swing.\n", "SwingWorker<T,\u200bV>": "\nAn abstract class to perform lengthy GUI-interaction tasks in a\n background thread.\n", "ToolTipManager": "\nManages all the ToolTips in the system.\n", "TransferHandler": "\nThis class is used to handle the transfer of a Transferable\n to and from Swing components.\n", "TransferHandler.DropLocation": "\nRepresents a location where dropped data should be inserted.\n", "TransferHandler.TransferSupport": "\nThis class encapsulates all relevant details of a clipboard\n or drag and drop transfer, and also allows for customizing\n aspects of the drag and drop experience.\n", "UIDefaults": "\nA table of defaults for Swing components.\n", "UIDefaults.LazyInputMap": "\nLazyInputMap will create a InputMap\n in its createValue\n method.\n", "UIDefaults.ProxyLazyValue": "\nThis class provides an implementation of LazyValue\n which can be\n used to delay loading of the Class for the instance to be created.\n", "UIManager": "\nUIManager manages the current look and feel, the set of\n available look and feels, PropertyChangeListeners that\n are notified when the look and feel changes, look and feel defaults, and\n convenience methods for obtaining various default values.\n", "UIManager.LookAndFeelInfo": "\nProvides a little information about an installed\n LookAndFeel for the sake of configuring a menu or\n for initial application set up.\n", "ViewportLayout": "\nThe default layout manager for JViewport.\n", "DropMode": "\nDrop modes, used to determine the method by which a component\n tracks and indicates a drop location during drag and drop.\n", "GroupLayout.Alignment": "\nEnumeration of the possible ways ParallelGroup can align\n its children.\n", "JTable.PrintMode": "\nPrinting modes, used in printing JTables.\n", "LayoutStyle.ComponentPlacement": "\nComponentPlacement is an enumeration of the\n possible ways two components can be placed relative to each\n other.\n", "RowFilter.ComparisonType": "\nEnumeration of the possible comparison values supported by\n some of the default RowFilters.\n", "SortOrder": "\nSortOrder is an enumeration of the possible sort orderings.\n", "SwingWorker.StateValue": "\nValues for the state bound property.\n", "UnsupportedLookAndFeelException": "\nAn exception that indicates the requested look & feel\n management classes are not present on the user's system.\n", "SwingContainer": "\nAn annotation used to specify some swing-related information\n for the automatically generated BeanInfo classes.\n", "Border": "\nInterface describing an object capable of rendering a border\n around the edges of a swing component.\n", "AbstractBorder": "\nA class that implements an empty border with no size.\n", "BevelBorder": "\nA class which implements a simple two-line bevel border.\n", "CompoundBorder": "\nA composite Border class used to compose two Border objects\n into a single border by nesting an inside Border object within\n the insets of an outside Border object.\n", "EmptyBorder": "\nA class which provides an empty, transparent border which\n takes up space but does no drawing.\n", "EtchedBorder": "\nA class which implements a simple etched border which can\n either be etched-in or etched-out.\n", "LineBorder": "\nA class which implements a line border of arbitrary thickness\n and of a single color.\n", "MatteBorder": "\nA class which provides a matte-like border of either a solid color\n or a tiled icon.\n", "SoftBevelBorder": "\nA class which implements a raised or lowered bevel with\n softened corners.\n", "StrokeBorder": "\nA class which implements a border of an arbitrary stroke.\n", "TitledBorder": "\nA class which implements an arbitrary border\n with the addition of a String title in a\n specified position and justification.\n", "ColorSelectionModel": "\nA model that supports selecting a Color.\n", "AbstractColorChooserPanel": "\nThis is the abstract superclass for color choosers.\n", "ColorChooserComponentFactory": "\nA class designed to produce preconfigured \"accessory\" objects to\n insert into color choosers.\n", "DefaultColorSelectionModel": "\nA generic implementation of ColorSelectionModel.\n", "AncestorListener": "\nAncestorListener\n\n Interface to support notification when changes occur to a JComponent or one\n of its ancestors.\n", "CaretListener": "\nListener for changes in the caret position of a text\n component.\n", "CellEditorListener": "\nCellEditorListener defines the interface for an object that listens\n to changes in a CellEditor\n", "ChangeListener": "\nDefines an object which listens for ChangeEvents.\n", "DocumentEvent": "\nInterface for document change notifications.\n/\nThe DocumentEvent interface provides a mechanism by which the\n user can create an Event of a type supported by the implementation.\n", "DocumentEvent.ElementChange": "\nDescribes changes made to a specific element.\n", "DocumentListener": "\nInterface for an observer to register to receive notifications\n of changes to a text document.\n", "HyperlinkListener": "\nHyperlinkListener\n", "InternalFrameListener": "\nThe listener interface for receiving internal frame events.\n", "ListDataListener": "\nListDataListener\n", "ListSelectionListener": "\nThe listener that's notified when a lists selection value\n changes.\n", "MenuDragMouseListener": "\nDefines a menu mouse-drag listener.\n", "MenuKeyListener": "\nMenuKeyListener\n", "MenuListener": "\nDefines a listener for menu events.\n", "MouseInputListener": "\nA listener implementing all the methods in both the MouseListener and\n MouseMotionListener interfaces.\n", "PopupMenuListener": "\nA popup menu listener\n", "RowSorterListener": "\nRowSorterListeners are notified of changes to a\n RowSorter.\n", "TableColumnModelListener": "\nTableColumnModelListener defines the interface for an object that listens\n to changes in a TableColumnModel.\n", "TableModelListener": "\nTableModelListener defines the interface for an object that listens\n to changes in a TableModel.\n", "TreeExpansionListener": "\nThe listener that's notified when a tree expands or collapses\n a node.\n", "TreeModelListener": "\nDefines the interface for an object that listens\n to changes in a TreeModel.\n", "TreeSelectionListener": "\nThe listener that's notified when the selection in a TreeSelectionModel\n changes.\n", "TreeWillExpandListener": "\nThe listener that's notified when a tree expands or collapses\n a node.\n", "UndoableEditListener": "\nInterface implemented by a class interested in hearing about\n undoable operations.\n", "AncestorEvent": "\nAn event reported to a child component that originated from an\n ancestor in the component hierarchy.\n", "CaretEvent": "\nCaretEvent is used to notify interested parties that\n the text caret has changed in the event source.\n", "ChangeEvent": "\nChangeEvent is used to notify interested parties that\n state has changed in the event source.\n", "DocumentEvent.EventType": "\nEnumeration for document event types\n", "EventListenerList": "\nA class that holds a list of EventListeners.\n", "HyperlinkEvent": "\nHyperlinkEvent is used to notify interested parties that\n something has happened with respect to a hypertext link.\n", "HyperlinkEvent.EventType": "\nDefines the ENTERED, EXITED, and ACTIVATED event types, along\n with their string representations, returned by toString().\n", "InternalFrameAdapter": "\nAn abstract adapter class for receiving internal frame events.\n", "InternalFrameEvent": "\nAn AWTEvent that adds support for\n JInternalFrame objects as the event source.\n", "ListDataEvent": "\nDefines an event that encapsulates changes to a list.\n", "ListSelectionEvent": "\nAn event that characterizes a change in selection.\n", "MenuDragMouseEvent": "\nMenuDragMouseEvent is used to notify interested parties that\n the menu element has received a MouseEvent forwarded to it\n under drag conditions.\n", "MenuEvent": "\nMenuEvent is used to notify interested parties that\n the menu which is the event source has been posted,\n selected, or canceled.\n", "MenuKeyEvent": "\nMenuKeyEvent is used to notify interested parties that\n the menu element has received a KeyEvent forwarded to it\n in a menu tree.\n", "MouseInputAdapter": "\nAn empty implementation of the MouseInputListener interface, provided\n as a convenience to simplify the task of creating listeners, by extending\n and implementing only the methods of interest.\n", "PopupMenuEvent": "\nPopupMenuEvent only contains the source of the event which is the JPopupMenu\n sending the event\n", "RowSorterEvent": "\nRowSorterEvent provides notification of changes to\n a RowSorter.\n", "SwingPropertyChangeSupport": "\nThis subclass of java.beans.PropertyChangeSupport is almost\n identical in functionality.\n", "TableColumnModelEvent": "\nTableColumnModelEvent is used to notify listeners that a table\n column model has changed, such as a column was added, removed, or\n moved.\n", "TableModelEvent": "\nTableModelEvent is used to notify listeners that a table model\n has changed.\n", "TreeExpansionEvent": "\nAn event used to identify a single path in a tree.\n", "TreeModelEvent": "\nEncapsulates information describing changes to a tree model, and\n used to notify tree model listeners of the change.\n", "TreeSelectionEvent": "\nAn event that characterizes a change in the current\n selection.\n", "UndoableEditEvent": "\nAn event indicating that an operation which can be undone has occurred.\n", "RowSorterEvent.Type": "\nEnumeration of the types of RowSorterEvents.\n", "FileNameExtensionFilter": "\nAn implementation of FileFilter that filters using a\n specified set of extensions.\n", "FileSystemView": "\nFileSystemView is JFileChooser's gateway to the\n file system.\n", "FileView": "\nFileView defines an abstract class that can be implemented\n to provide the filechooser with UI information for a File.\n", "UIResource": "\nThis interface is used to mark objects created by ComponentUI delegates.\n", "ActionMapUIResource": "\nA subclass of javax.swing.ActionMap that implements UIResource.\n", "BorderUIResource": "\nA Border wrapper class which implements UIResource.\n", "BorderUIResource.BevelBorderUIResource": "\nA bevel border UI resource.\n", "BorderUIResource.CompoundBorderUIResource": "\nA compound border UI resource.\n", "BorderUIResource.EmptyBorderUIResource": "\nAn empty border UI resource.\n", "BorderUIResource.EtchedBorderUIResource": "\nAn etched border UI resource.\n", "BorderUIResource.LineBorderUIResource": "\nA line border UI resource.\n", "BorderUIResource.MatteBorderUIResource": "\nA matte border UI resource.\n", "BorderUIResource.TitledBorderUIResource": "\nA titled border UI resource.\n", "ButtonUI": "\nPluggable look and feel interface for JButton.\n", "ColorChooserUI": "\nPluggable look and feel interface for JColorChooser.\n", "ColorUIResource": "\nA subclass of Color that implements UIResource.\n", "ComboBoxUI": "\nPluggable look and feel interface for JComboBox.\n", "ComponentInputMapUIResource": "\nA subclass of javax.swing.ComponentInputMap that implements UIResource.\n", "ComponentUI": "\nThe base class for all UI delegate objects in the Swing pluggable\n look and feel architecture.\n", "DesktopIconUI": "\nPluggable look and feel interface for JDesktopIcon.\n", "DesktopPaneUI": "\nPluggable look and feel interface for JDesktopPane.\n", "DimensionUIResource": "\nA subclass of Dimension that implements\n UIResource.\n", "FileChooserUI": "\nPluggable look and feel interface for JFileChooser.\n", "FontUIResource": "\nA subclass of java.awt.Font that implements UIResource.\n", "IconUIResource": "\nAn Icon wrapper class which implements UIResource.\n", "InputMapUIResource": "\nA subclass of javax.swing.InputMap that implements UIResource.\n", "InsetsUIResource": "\nA subclass of Insets that implements UIResource.\n", "InternalFrameUI": "\nPluggable look and feel interface for JInternalFrame.\n", "LabelUI": "\nPluggable look and feel interface for JLabel.\n", "LayerUI<V extends Component>": "\nThe base class for all JLayer's UI delegates.\n", "ListUI": "\nThe JList pluggable look and feel delegate.\n", "MenuBarUI": "\nPluggable look and feel interface for JMenuBar.\n", "MenuItemUI": "\nPluggable look and feel interface for JMenuItem.\n", "OptionPaneUI": "\nPluggable look and feel interface for JOptionPane.\n", "PanelUI": "\nPluggable look and feel interface for Panel.\n", "PopupMenuUI": "\nPluggable look and feel interface for JPopupMenu.\n", "ProgressBarUI": "\nPluggable look and feel interface for JProgressBar.\n", "RootPaneUI": "\nPluggable look and feel interface for JRootPane.\n", "ScrollBarUI": "\nPluggable look and feel interface for JScrollBar.\n", "ScrollPaneUI": "\nPluggable look and feel interface for JScrollPane.\n", "SeparatorUI": "\nPluggable look and feel interface for JSeparator.\n", "SliderUI": "\nPluggable look and feel interface for JSlider.\n", "SpinnerUI": "\nPluggable look and feel interface for JSpinner\n", "SplitPaneUI": "\nPluggable look and feel interface for JSplitPane.\n", "TabbedPaneUI": "\nPluggable look and feel interface for JTabbedPane.\n", "TableHeaderUI": "\nPluggable look and feel interface for JTableHeader.\n", "TableUI": "\nPluggable look and feel interface for JTable.\n", "TextUI": "\nText editor user interface\n", "ToolBarUI": "\nPluggable look and feel interface for JToolBar.\n", "ToolTipUI": "\nPluggable look and feel interface for JToolTip.\n", "TreeUI": "\nPluggable look and feel interface for JTree.\n", "ViewportUI": "\nPluggable look and feel interface for JViewport.\n", "ComboPopup": "\nThe interface which defines the methods required for the implementation of the popup\n portion of a combo box.\n", "BasicArrowButton": "\nJButton object that draws a scaled Arrow in one of the cardinal directions.\n", "BasicBorders": "\nFactory object that can vend Borders appropriate for the basic L & F.\n", "BasicBorders.ButtonBorder": "\nDraws a border around a button.\n", "BasicBorders.FieldBorder": "\nDraws the border around a field.\n", "BasicBorders.MarginBorder": "\nDraws the border around components which support margins.\n", "BasicBorders.MenuBarBorder": "\nDraws the border around a menu bar.\n", "BasicBorders.RadioButtonBorder": "\nDraws the border around a radio button.\n", "BasicBorders.RolloverButtonBorder": "\nSpecial thin border for rollover toolbar buttons.\n", "BasicBorders.SplitPaneBorder": "\nDraws the border around the splitpane.\n", "BasicBorders.ToggleButtonBorder": "\nDraws the border around a toggle button.\n", "BasicButtonListener": "\nButton Listener\n", "BasicButtonUI": "\nBasicButton implementation\n", "BasicCheckBoxMenuItemUI": "\nBasicCheckboxMenuItem implementation\n", "BasicCheckBoxUI": "\nCheckboxUI implementation for BasicCheckboxUI\n", "BasicColorChooserUI": "\nProvides the basic look and feel for a JColorChooser.\n", "BasicComboBoxEditor": "\nThe default editor for editable combo boxes.\n", "BasicComboBoxEditor.UIResource": "\nA subclass of BasicComboBoxEditor that implements UIResource.\n", "BasicComboBoxRenderer": "\nComboBox renderer\n", "BasicComboBoxRenderer.UIResource": "\nA subclass of BasicComboBoxRenderer that implements UIResource.\n", "BasicComboBoxUI": "\nBasic UI implementation for JComboBox.\n", "BasicComboPopup": "\nThis is a basic implementation of the ComboPopup interface.\n", "BasicDesktopIconUI": "\nBasic L&F for a minimized window on a desktop.\n", "BasicDesktopPaneUI": "\nBasic L&F for a desktop.\n", "BasicDirectoryModel": "\nBasic implementation of a file list.\n", "BasicEditorPaneUI": "\nProvides the look and feel for a JEditorPane.\n", "BasicFileChooserUI": "\nBasic L&F implementation of a FileChooser.\n", "BasicFormattedTextFieldUI": "\nProvides the look and feel implementation for\n JFormattedTextField.\n", "BasicGraphicsUtils": "\nConvenient util class.\n", "BasicHTML": "\nSupport for providing html views for the swing components.\n", "BasicIconFactory": "\nFactory object that can vend Icons appropriate for the basic L & F.\n", "BasicInternalFrameTitlePane": "\nThe class that manages a basic title bar\n", "BasicInternalFrameUI": "\nA basic L&F implementation of JInternalFrame.\n", "BasicLabelUI": "\nA Windows L&F implementation of LabelUI.\n", "BasicListUI": "\nAn extensible implementation of ListUI.\n", "BasicLookAndFeel": "\nA base class to use in creating a look and feel for Swing.\n", "BasicMenuBarUI": "\nA default L&F implementation of MenuBarUI.\n", "BasicMenuItemUI": "\nBasicMenuItem implementation\n", "BasicMenuUI": "\nA default L&F implementation of MenuUI.\n", "BasicOptionPaneUI": "\nProvides the basic look and feel for a JOptionPane.\n", "BasicOptionPaneUI.ButtonAreaLayout": "\nButtonAreaLayout behaves in a similar manner to\n FlowLayout.\n", "BasicPanelUI": "\nBasicPanel implementation\n", "BasicPasswordFieldUI": "\nProvides the Windows look and feel for a password field.\n", "BasicPopupMenuSeparatorUI": "\nA Basic L&F implementation of PopupMenuSeparatorUI.\n", "BasicPopupMenuUI": "\nA Windows L&F implementation of PopupMenuUI.\n", "BasicProgressBarUI": "\nA Basic L&F implementation of ProgressBarUI.\n", "BasicRadioButtonMenuItemUI": "\nBasicRadioButtonMenuItem implementation\n", "BasicRadioButtonUI": "\nRadioButtonUI implementation for BasicRadioButtonUI\n", "BasicRootPaneUI": "\nBasic implementation of RootPaneUI, there is one shared between all\n JRootPane instances.\n", "BasicScrollBarUI": "\nImplementation of ScrollBarUI for the Basic Look and Feel\n", "BasicScrollPaneUI": "\nA default L&F implementation of ScrollPaneUI.\n", "BasicSeparatorUI": "\nA Basic L&F implementation of SeparatorUI.\n", "BasicSliderUI": "\nA Basic L&F implementation of SliderUI.\n", "BasicSpinnerUI": "\nThe default Spinner UI delegate.\n", "BasicSplitPaneDivider": "\nDivider used by BasicSplitPaneUI.\n", "BasicSplitPaneUI": "\nA Basic L&F implementation of the SplitPaneUI.\n", "BasicTabbedPaneUI": "\nA Basic L&F implementation of TabbedPaneUI.\n", "BasicTableHeaderUI": "\nBasicTableHeaderUI implementation\n", "BasicTableUI": "\nBasicTableUI implementation\n", "BasicTextAreaUI": "\nProvides the look and feel for a plain text editor.\n", "BasicTextFieldUI": "\nBasis of a look and feel for a JTextField.\n", "BasicTextPaneUI": "\nProvides the look and feel for a styled text editor.\n", "BasicTextUI": "\n\n Basis of a text components look-and-feel.\n", "BasicTextUI.BasicCaret": "\nDefault implementation of the interface Caret.\n", "BasicTextUI.BasicHighlighter": "\nDefault implementation of the interface Highlighter.\n", "BasicToggleButtonUI": "\nBasicToggleButton implementation\n", "BasicToolBarSeparatorUI": "\nA Basic L&F implementation of ToolBarSeparatorUI.\n", "BasicToolBarUI": "\nA Basic L&F implementation of ToolBarUI.\n", "BasicToolTipUI": "\nStandard tool tip L&F.\n", "BasicTreeUI": "\nThe basic L&F for a hierarchical data structure.\n", "BasicViewportUI": "\nBasicViewport implementation\n", "DefaultMenuLayout": "\nThe default layout manager for Popup menus and menubars.\n", "DefaultMetalTheme": "\nA concrete implementation of MetalTheme providing\n the original look of the Java Look and Feel, code-named \"Steel\".\n", "MetalBorders": "\nFactory object that can vend Borders appropriate for the metal L & F.\n", "MetalBorders.ButtonBorder": "\nThe class represents the border of a JButton.\n", "MetalBorders.Flush3DBorder": "\nThe class represents the 3D border.\n", "MetalBorders.InternalFrameBorder": "\nThe class represents the border of a JInternalFrame.\n", "MetalBorders.MenuBarBorder": "\nThe class represents the border of a JMenuBar.\n", "MetalBorders.MenuItemBorder": "\nThe class represents the border of a JMenuItem.\n", "MetalBorders.OptionDialogBorder": "\nThe class represents the border of an option dialog.\n", "MetalBorders.PaletteBorder": "\nBorder for a Palette.\n", "MetalBorders.PopupMenuBorder": "\nThe class represents the border of a JPopupMenu.\n", "MetalBorders.RolloverButtonBorder": "\nThe class represents the border of a rollover Button.\n", "MetalBorders.ScrollPaneBorder": "\nThe class represents the border of a JScrollPane.\n", "MetalBorders.TableHeaderBorder": "\nBorder for a Table Header\n", "MetalBorders.TextFieldBorder": "\nThe class represents the border of a JTestField.\n", "MetalBorders.ToggleButtonBorder": "\u00a0", "MetalBorders.ToolBarBorder": "\nThe class represents the border of a JToolBar.\n", "MetalButtonUI": "\nMetalButtonUI implementation\n", "MetalCheckBoxIcon": "\nCheckboxIcon implementation for OrganicCheckBoxUI\n", "MetalCheckBoxUI": "\nCheckboxUI implementation for MetalCheckboxUI\n", "MetalComboBoxButton": "\nJButton subclass to help out MetalComboBoxUI\n", "MetalComboBoxEditor": "\nThe default editor for Metal editable combo boxes\n", "MetalComboBoxEditor.UIResource": "\nA subclass of BasicComboBoxEditor that implements UIResource.\n", "MetalComboBoxIcon": "\nThis utility class draws the horizontal bars which indicate a MetalComboBox\n", "MetalComboBoxUI": "\nMetal UI for JComboBox\n", "MetalDesktopIconUI": "\nMetal desktop icon.\n", "MetalFileChooserUI": "\nMetal L&F implementation of a FileChooser.\n", "MetalIconFactory": "\nFactory object that vends Icons for\n the Java\u2122 look and feel (Metal).\n", "MetalIconFactory.FileIcon16": "\n\nWarning:\n Serialized objects of this class will not be compatible with\n future Swing releases.\n", "MetalIconFactory.FolderIcon16": "\n\nWarning:\n Serialized objects of this class will not be compatible with\n future Swing releases.\n", "MetalIconFactory.PaletteCloseIcon": "\nDefines an icon for Palette close\n", "MetalIconFactory.TreeControlIcon": "\n\nWarning:\n Serialized objects of this class will not be compatible with\n future Swing releases.\n", "MetalIconFactory.TreeFolderIcon": "\n\nWarning:\n Serialized objects of this class will not be compatible with\n future Swing releases.\n", "MetalIconFactory.TreeLeafIcon": "\nThe class represents a tree leaf icon.\n", "MetalInternalFrameTitlePane": "\nClass that manages a JLF title bar\n", "MetalInternalFrameUI": "\nMetal implementation of JInternalFrame.\n", "MetalLabelUI": "\nA Windows L&F implementation of LabelUI.\n", "MetalLookAndFeel": "\nThe Java Look and Feel, otherwise known as Metal.\n", "MetalMenuBarUI": "\nMetal implementation of MenuBarUI.\n", "MetalPopupMenuSeparatorUI": "\nA Metal L&F implementation of PopupMenuSeparatorUI.\n", "MetalProgressBarUI": "\nThe Metal implementation of ProgressBarUI.\n", "MetalRadioButtonUI": "\nRadioButtonUI implementation for MetalRadioButtonUI\n", "MetalRootPaneUI": "\nProvides the metal look and feel implementation of RootPaneUI.\n", "MetalScrollBarUI": "\nImplementation of ScrollBarUI for the Metal Look and Feel\n", "MetalScrollButton": "\nJButton object for Metal scrollbar arrows.\n", "MetalScrollPaneUI": "\nA Metal L&F implementation of ScrollPaneUI.\n", "MetalSeparatorUI": "\nA Metal L&F implementation of SeparatorUI.\n", "MetalSliderUI": "\nA Java L&F implementation of SliderUI.\n", "MetalSplitPaneUI": "\nMetal split pane.\n", "MetalTabbedPaneUI": "\nThe Metal subclass of BasicTabbedPaneUI.\n", "MetalTextFieldUI": "\nBasis of a look and feel for a JTextField.\n", "MetalTheme": "\nMetalTheme provides the color palette and fonts used by\n the Java Look and Feel.\n", "MetalToggleButtonUI": "\nMetalToggleButton implementation\n", "MetalToolBarUI": "\nA Metal Look and Feel implementation of ToolBarUI.\n", "MetalToolTipUI": "\nA Metal L&F extension of BasicToolTipUI.\n", "MetalTreeUI": "\nThe metal look and feel implementation of TreeUI.\n", "OceanTheme": "\nThe default theme for the MetalLookAndFeel.\n", "MultiButtonUI": "\nA multiplexing UI used to combine ButtonUIs.\n", "MultiColorChooserUI": "\nA multiplexing UI used to combine ColorChooserUIs.\n", "MultiComboBoxUI": "\nA multiplexing UI used to combine ComboBoxUIs.\n", "MultiDesktopIconUI": "\nA multiplexing UI used to combine DesktopIconUIs.\n", "MultiDesktopPaneUI": "\nA multiplexing UI used to combine DesktopPaneUIs.\n", "MultiFileChooserUI": "\nA multiplexing UI used to combine FileChooserUIs.\n", "MultiInternalFrameUI": "\nA multiplexing UI used to combine InternalFrameUIs.\n", "MultiLabelUI": "\nA multiplexing UI used to combine LabelUIs.\n", "MultiListUI": "\nA multiplexing UI used to combine ListUIs.\n", "MultiLookAndFeel": "\nA multiplexing look and feel that allows more than one UI\n to be associated with a component at the same time.\n", "MultiMenuBarUI": "\nA multiplexing UI used to combine MenuBarUIs.\n", "MultiMenuItemUI": "\nA multiplexing UI used to combine MenuItemUIs.\n", "MultiOptionPaneUI": "\nA multiplexing UI used to combine OptionPaneUIs.\n", "MultiPanelUI": "\nA multiplexing UI used to combine PanelUIs.\n", "MultiPopupMenuUI": "\nA multiplexing UI used to combine PopupMenuUIs.\n", "MultiProgressBarUI": "\nA multiplexing UI used to combine ProgressBarUIs.\n", "MultiRootPaneUI": "\nA multiplexing UI used to combine RootPaneUIs.\n", "MultiScrollBarUI": "\nA multiplexing UI used to combine ScrollBarUIs.\n", "MultiScrollPaneUI": "\nA multiplexing UI used to combine ScrollPaneUIs.\n", "MultiSeparatorUI": "\nA multiplexing UI used to combine SeparatorUIs.\n", "MultiSliderUI": "\nA multiplexing UI used to combine SliderUIs.\n", "MultiSpinnerUI": "\nA multiplexing UI used to combine SpinnerUIs.\n", "MultiSplitPaneUI": "\nA multiplexing UI used to combine SplitPaneUIs.\n", "MultiTabbedPaneUI": "\nA multiplexing UI used to combine TabbedPaneUIs.\n", "MultiTableHeaderUI": "\nA multiplexing UI used to combine TableHeaderUIs.\n", "MultiTableUI": "\nA multiplexing UI used to combine TableUIs.\n", "MultiTextUI": "\nA multiplexing UI used to combine TextUIs.\n", "MultiToolBarUI": "\nA multiplexing UI used to combine ToolBarUIs.\n", "MultiToolTipUI": "\nA multiplexing UI used to combine ToolTipUIs.\n", "MultiTreeUI": "\nA multiplexing UI used to combine TreeUIs.\n", "MultiViewportUI": "\nA multiplexing UI used to combine ViewportUIs.\n", "AbstractRegionPainter": "\nConvenient base class for defining Painter instances for rendering a\n region or component in Nimbus.\n", "AbstractRegionPainter.PaintContext": "\nA class encapsulating state useful when painting.\n", "NimbusLookAndFeel": "\nThe NimbusLookAndFeel class.\n", "NimbusStyle": "\nA SynthStyle implementation used by Nimbus.\n", "State<T extends JComponent>": "\nRepresents a built in, or custom, state in Nimbus.\n", "AbstractRegionPainter.PaintContext.CacheMode": "\nCache mode.\n", "SynthConstants": "\nConstants used by Synth.\n", "SynthIcon": "\nAn icon that is passed a SynthContext.\n", "SynthUI": "\nSynthUI is used to fetch the SynthContext for a particular Component.\n", "ColorType": "\nA typesafe enumeration of colors that can be fetched from a style.\n", "Region": "\nA distinct rendering area of a Swing component.\n", "SynthButtonUI": "\nProvides the Synth L&F UI delegate for\n JButton.\n", "SynthCheckBoxMenuItemUI": "\nProvides the Synth L&F UI delegate for\n JCheckBoxMenuItem.\n", "SynthCheckBoxUI": "\nProvides the Synth L&F UI delegate for\n JCheckBox.\n", "SynthColorChooserUI": "\nProvides the Synth L&F UI delegate for\n JColorChooser.\n", "SynthComboBoxUI": "\nProvides the Synth L&F UI delegate for\n JComboBox.\n", "SynthContext": "\nAn immutable transient object containing contextual information about\n a Region.\n", "SynthDesktopIconUI": "\nProvides the Synth L&F UI delegate for a minimized internal frame on a desktop.\n", "SynthDesktopPaneUI": "\nProvides the Synth L&F UI delegate for\n JDesktopPane.\n", "SynthEditorPaneUI": "\nProvides the Synth L&F UI delegate for\n JEditorPane.\n", "SynthFormattedTextFieldUI": "\nProvides the Synth L&F UI delegate for\n JFormattedTextField.\n", "SynthGraphicsUtils": "\nWrapper for primitive graphics calls.\n", "SynthInternalFrameUI": "\nProvides the Synth L&F UI delegate for\n JInternalFrame.\n", "SynthLabelUI": "\nProvides the Synth L&F UI delegate for\n JLabel.\n", "SynthListUI": "\nProvides the Synth L&F UI delegate for\n JList.\n", "SynthLookAndFeel": "\nSynthLookAndFeel provides the basis for creating a customized look and\n feel.\n", "SynthMenuBarUI": "\nProvides the Synth L&F UI delegate for\n JMenuBar.\n", "SynthMenuItemUI": "\nProvides the Synth L&F UI delegate for\n JMenuItem.\n", "SynthMenuUI": "\nProvides the Synth L&F UI delegate for\n JMenu.\n", "SynthOptionPaneUI": "\nProvides the Synth L&F UI delegate for\n JOptionPane.\n", "SynthPainter": "\nSynthPainter is used for painting portions of\n JComponents.\n", "SynthPanelUI": "\nProvides the Synth L&F UI delegate for\n JPanel.\n", "SynthPasswordFieldUI": "\nProvides the Synth L&F UI delegate for\n JPasswordField.\n", "SynthPopupMenuUI": "\nProvides the Synth L&F UI delegate for\n JPopupMenu.\n", "SynthProgressBarUI": "\nProvides the Synth L&F UI delegate for\n JProgressBar.\n", "SynthRadioButtonMenuItemUI": "\nProvides the Synth L&F UI delegate for\n JRadioButtonMenuItem.\n", "SynthRadioButtonUI": "\nProvides the Synth L&F UI delegate for\n JRadioButton.\n", "SynthRootPaneUI": "\nProvides the Synth L&F UI delegate for\n JRootPane.\n", "SynthScrollBarUI": "\nProvides the Synth L&F UI delegate for\n JScrollBar.\n", "SynthScrollPaneUI": "\nProvides the Synth L&F UI delegate for\n JScrollPane.\n", "SynthSeparatorUI": "\nProvides the Synth L&F UI delegate for\n JSeparator.\n", "SynthSliderUI": "\nProvides the Synth L&F UI delegate for\n JSlider.\n", "SynthSpinnerUI": "\nProvides the Synth L&F UI delegate for\n JSpinner.\n", "SynthSplitPaneUI": "\nProvides the Synth L&F UI delegate for\n JSplitPane.\n", "SynthStyle": "\nSynthStyle is a set of style properties.\n", "SynthStyleFactory": "\nFactory used for obtaining SynthStyles.\n", "SynthTabbedPaneUI": "\nProvides the Synth L&F UI delegate for\n JTabbedPane.\n", "SynthTableHeaderUI": "\nProvides the Synth L&F UI delegate for\n JTableHeader.\n", "SynthTableUI": "\nProvides the Synth L&F UI delegate for\n JTable.\n", "SynthTextAreaUI": "\nProvides the look and feel for a plain text editor in the\n Synth look and feel.\n", "SynthTextFieldUI": "\nProvides the Synth L&F UI delegate for JTextField.\n", "SynthTextPaneUI": "\nProvides the look and feel for a styled text editor in the\n Synth look and feel.\n", "SynthToggleButtonUI": "\nProvides the Synth L&F UI delegate for\n JToggleButton.\n", "SynthToolBarUI": "\nProvides the Synth L&F UI delegate for\n JToolBar.\n", "SynthToolTipUI": "\nProvides the Synth L&F UI delegate for\n JToolTip.\n", "SynthTreeUI": "\nProvides the Synth L&F UI delegate for\n JTree.\n", "SynthViewportUI": "\nProvides the Synth L&F UI delegate for\n JViewport.\n", "TableCellEditor": "\nThis interface defines the method any object that would like to be\n an editor of values for components such as JListBox,\n JComboBox, JTree, or JTable\n needs to implement.\n", "TableCellRenderer": "\nThis interface defines the method required by any object that\n would like to be a renderer for cells in a JTable.\n", "TableColumnModel": "\nDefines the requirements for a table column model object suitable for\n use with JTable.\n", "TableModel": "\nThe TableModel interface specifies the methods the\n  JTable will use to interrogate a tabular data model.\n", "AbstractTableModel": "\nThis abstract class provides default implementations for most of\n  the methods in the TableModel interface.\n", "DefaultTableCellRenderer": "\nThe standard class for rendering (displaying) individual cells\n in a JTable.\n", "DefaultTableCellRenderer.UIResource": "\nA subclass of DefaultTableCellRenderer that\n implements UIResource.\n", "DefaultTableColumnModel": "\nThe standard column-handler for a JTable.\n", "DefaultTableModel": "\nThis is an implementation of TableModel that\n uses a Vector of Vectors to store the\n cell value objects.\n", "JTableHeader": "\nThis is the object which manages the header of the JTable.\n", "TableColumn": "\nA TableColumn represents all the attributes of a column in a\n  JTable, such as width, resizability, minimum and maximum width.\n", "TableRowSorter<M extends TableModel>": "\nAn implementation of RowSorter that provides sorting\n and filtering using a TableModel.\n", "TableStringConverter": "\nTableStringConverter is used to convert objects from the model into\n strings.\n", "AbstractDocument.AttributeContext": "\nAn interface that can be used to allow MutableAttributeSet\n implementations to use pluggable attribute compression\n techniques.\n", "AbstractDocument.Content": "\nInterface to describe a sequence of character content that\n can be edited.\n", "AttributeSet.CharacterAttribute": "\nThis interface is the type signature that is expected\n to be present on any attribute key that contributes to\n character level presentation.\n", "AttributeSet.ColorAttribute": "\nThis interface is the type signature that is expected\n to be present on any attribute key that contributes to\n presentation of color.\n", "AttributeSet.FontAttribute": "\nThis interface is the type signature that is expected\n to be present on any attribute key that contributes to\n the determination of what font to use to render some\n text.\n", "AttributeSet.ParagraphAttribute": "\nThis interface is the type signature that is expected\n to be present on any attribute key that contributes to\n the paragraph level presentation.\n", "Caret": "\nA place within a document view that represents where\n things can be inserted into the document model.\n", "Document": "\n\n The Document is a container for text that serves\n as the model for swing text components.\n/\nThe Document interface represents the entire HTML or XML\n document.\n", "Highlighter": "\nAn interface for an object that allows one to mark up the background\n with colored areas.\n", "Highlighter.Highlight": "\nA highlight.\n", "Highlighter.HighlightPainter": "\nHighlight renderer.\n", "Keymap": "\nA collection of bindings of KeyStrokes to actions.\n", "MutableAttributeSet": "\nA generic interface for a mutable collection of unique attributes.\n", "Position": "\nRepresents a location within a document.\n", "Style": "\nA collection of attributes to associate with an element in a document.\n", "StyledDocument": "\nInterface for a generic styled document.\n", "TabableView": "\nInterface for Views that have size dependent upon tabs.\n", "TabExpander": "\nSimple interface to allow for different types of\n implementations of tab expansion.\n", "ViewFactory": "\nA factory to create a view of some portion of document subject.\n", "AbstractDocument": "\nAn implementation of the document interface to serve as a\n basis for implementing various kinds of documents.\n", "AbstractDocument.ElementEdit": "\nAn implementation of ElementChange that can be added to the document\n event.\n", "AbstractWriter": "\nAbstractWriter is an abstract class that actually\n does the work of writing out the element tree\n including the attributes.\n", "AsyncBoxView": "\nA box that does layout asynchronously.\n", "BoxView": "\nA view that arranges its children into a box shape by tiling\n its children along an axis.\n", "ComponentView": "\nComponent decorator that implements the view interface.\n", "CompositeView": "\nCompositeView is an abstract View\n implementation which manages one or more child views.\n", "DateFormatter": "\nDateFormatter is an InternationalFormatter that does its\n formatting by way of an instance of java.text.DateFormat.\n", "DefaultCaret": "\nA default implementation of Caret.\n", "DefaultEditorKit": "\nThis is the set of things needed by a text component\n to be a reasonably functioning editor for some type\n of text document.\n", "DefaultEditorKit.BeepAction": "\nCreates a beep.\n", "DefaultEditorKit.CopyAction": "\nCopies the selected region and place its contents\n into the system clipboard.\n", "DefaultEditorKit.CutAction": "\nCuts the selected region and place its contents\n into the system clipboard.\n", "DefaultEditorKit.DefaultKeyTypedAction": "\nThe action that is executed by default if\n a key typed event is received and there\n is no keymap entry.\n", "DefaultEditorKit.InsertBreakAction": "\nPlaces a line/paragraph break into the document.\n", "DefaultEditorKit.InsertContentAction": "\nPlaces content into the associated document.\n", "DefaultEditorKit.InsertTabAction": "\nPlaces a tab character into the document.\n", "DefaultEditorKit.PasteAction": "\nPastes the contents of the system clipboard into the\n selected region, or before the caret if nothing is\n selected.\n", "DefaultFormatter": "\nDefaultFormatter formats arbitrary objects.\n", "DefaultFormatterFactory": "\nAn implementation of\n JFormattedTextField.AbstractFormatterFactory.\n", "DefaultHighlighter": "\nImplements the Highlighter interfaces.\n", "DefaultHighlighter.DefaultHighlightPainter": "\nSimple highlight painter that fills a highlighted area with\n a solid color.\n", "DefaultStyledDocument": "\nA document that can be marked up with character and paragraph\n styles in a manner similar to the Rich Text Format.\n", "DefaultStyledDocument.AttributeUndoableEdit": "\nAn UndoableEdit used to remember AttributeSet changes to an\n Element.\n", "DefaultStyledDocument.ElementSpec": "\nSpecification for building elements.\n", "DefaultTextUI": "Deprecated.\u00a0", "DocumentFilter": "\nDocumentFilter, as the name implies, is a filter for the\n Document mutation methods.\n", "DocumentFilter.FilterBypass": "\nUsed as a way to circumvent calling back into the Document to\n change it.\n", "EditorKit": "\nEstablishes the set of things needed by a text component\n to be a reasonably functioning editor for some type\n of text content.\n", "ElementIterator": "\n\n ElementIterator, as the name suggests, iterates over the Element\n tree.\n", "FieldView": "\nExtends the multi-line plain text view to be suitable\n for a single-line editor view.\n", "FlowView": "\nA View that tries to flow it's children into some\n partially constrained space.\n", "FlowView.FlowStrategy": "\nStrategy for maintaining the physical form\n of the flow.\n", "GapContent": "\nAn implementation of the AbstractDocument.Content interface\n implemented using a gapped buffer similar to that used by emacs.\n", "GlyphView": "\nA GlyphView is a styled chunk of text that represents a view\n mapped over an element in the text model.\n", "GlyphView.GlyphPainter": "\nA class to perform rendering of the glyphs.\n", "IconView": "\nIcon decorator that implements the view interface.\n", "InternationalFormatter": "\nInternationalFormatter extends DefaultFormatter,\n using an instance of java.text.Format to handle the\n conversion to a String, and the conversion from a String.\n", "JTextComponent": "\nJTextComponent is the base class for swing text\n components.\n", "JTextComponent.DropLocation": "\nRepresents a drop location for JTextComponents.\n", "JTextComponent.KeyBinding": "\nBinding record for creating key bindings.\n", "LabelView": "\nA LabelView is a styled chunk of text\n that represents a view mapped over an element in the\n text model.\n", "LayeredHighlighter": "\u00a0", "LayeredHighlighter.LayerPainter": "\nLayered highlight renderer.\n", "LayoutQueue": "\nA queue of text layout tasks.\n", "MaskFormatter": "\nMaskFormatter is used to format and edit strings.\n", "NavigationFilter": "\nNavigationFilter can be used to restrict where the cursor can\n be positioned.\n", "NavigationFilter.FilterBypass": "\nUsed as a way to circumvent calling back into the caret to\n position the cursor.\n", "NumberFormatter": "\nNumberFormatter subclasses InternationalFormatter\n adding special behavior for numbers.\n", "ParagraphView": "\nView of a simple line-wrapping paragraph that supports\n multiple fonts, colors, components, icons, etc.\n/\nDisplays the a paragraph, and uses css attributes for its\n configuration.\n", "PasswordView": "\nImplements a View suitable for use in JPasswordField\n UI implementations.\n", "PlainDocument": "\nA plain document that maintains no character attributes.\n", "PlainView": "\nImplements View interface for a simple multi-line text view\n that has text in one font and color.\n", "Position.Bias": "\nA typesafe enumeration to indicate bias to a position\n in the model.\n", "Segment": "\nA segment of a character array representing a fragment\n of text.\n", "SimpleAttributeSet": "\nA straightforward implementation of MutableAttributeSet using a\n hash table.\n", "StringContent": "\nAn implementation of the AbstractDocument.Content interface that is\n a brute force implementation that is useful for relatively small\n documents and/or debugging.\n", "StyleConstants": "\n\n A collection of well known or common attribute keys\n and methods to apply to an AttributeSet or MutableAttributeSet\n to get/set the properties in a typesafe manner.\n", "StyleConstants.CharacterConstants": "\nThis is a typesafe enumeration of the well-known\n attributes that contribute to a character style.\n", "StyleConstants.ColorConstants": "\nThis is a typesafe enumeration of the well-known\n attributes that contribute to a color.\n", "StyleConstants.FontConstants": "\nThis is a typesafe enumeration of the well-known\n attributes that contribute to a font.\n", "StyleConstants.ParagraphConstants": "\nThis is a typesafe enumeration of the well-known\n attributes that contribute to a paragraph style.\n", "StyleContext": "\nA pool of styles and their associated resources.\n", "StyledEditorKit": "\nThis is the set of things needed by a text component\n to be a reasonably functioning editor for some type\n of text document.\n", "StyledEditorKit.AlignmentAction": "\nAn action to set paragraph alignment.\n", "StyledEditorKit.BoldAction": "\nAn action to toggle the bold attribute.\n", "StyledEditorKit.FontFamilyAction": "\nAn action to set the font family in the associated\n JEditorPane.\n", "StyledEditorKit.FontSizeAction": "\nAn action to set the font size in the associated\n JEditorPane.\n", "StyledEditorKit.ForegroundAction": "\nAn action to set foreground color.\n", "StyledEditorKit.ItalicAction": "\nAn action to toggle the italic attribute.\n", "StyledEditorKit.StyledTextAction": "\nAn action that assumes it's being fired on a JEditorPane\n with a StyledEditorKit (or subclass) installed.\n", "StyledEditorKit.UnderlineAction": "\nAn action to toggle the underline attribute.\n", "TableView": "\n\n Implements View interface for a table, that is composed of an\n element structure where the child elements of the element\n this view is responsible for represent rows and the child\n elements of the row elements are cells.\n", "TabSet": "\nA TabSet is comprised of many TabStops.\n", "TabStop": "\nThis class encapsulates a single tab stop (basically as tab stops\n are thought of by RTF).\n", "TextAction": "\nAn Action implementation useful for key bindings that are\n shared across a number of different text components.\n", "Utilities": "\nA collection of methods to deal with various text\n related activities.\n", "View": "\n\n A very important part of the text package is the View class.\n", "WrappedPlainView": "\nView of plain text (text with only one font and color)\n that does line-wrapping.\n", "ZoneView": "\nZoneView is a View implementation that creates zones for which\n the child views are not created or stored until they are needed\n for display or model/view translations.\n", "BadLocationException": "\nThis exception is to report bad locations within a document model\n (that is, attempts to reference a location that doesn't exist).\n", "ChangedCharSetException": "\nChangedCharSetException as the name indicates is an exception\n thrown when the charset is changed.\n", "BlockView": "\nA view implementation to display a block (as a box)\n with CSS specifications.\n", "CSS": "\nDefines a set of\n CSS attributes\n as a typesafe enumeration.\n", "CSS.Attribute": "\nDefinitions to be used as a key on AttributeSet's\n that might hold CSS attributes.\n", "FormSubmitEvent": "\nFormSubmitEvent is used to notify interested\n parties that a form was submitted.\n", "FormView": "\nComponent decorator that implements the view interface\n for form elements, <input>, <textarea>,\n and <select>.\n", "HTML": "\nConstants used in the HTMLDocument.\n", "HTML.Attribute": "\nTypesafe enumeration representing an HTML\n attribute.\n", "HTML.Tag": "\nTypesafe enumeration for an HTML tag.\n", "HTML.UnknownTag": "\nClass represents unknown HTML tag.\n", "HTMLDocument": "\nA document that models HTML.\n/\nAn HTMLDocument is the root of the HTML hierarchy and holds\n the entire content.\n", "HTMLDocument.Iterator": "\nAn iterator to iterate over a particular type of\n tag.\n", "HTMLEditorKit": "\nThe Swing JEditorPane text component supports different kinds\n of content via a plug-in mechanism called an EditorKit.\n", "HTMLEditorKit.HTMLFactory": "\nA factory to build views for HTML.\n", "HTMLEditorKit.HTMLTextAction": "\nAn abstract Action providing some convenience methods that may\n be useful in inserting HTML into an existing document.\n", "HTMLEditorKit.InsertHTMLTextAction": "\nInsertHTMLTextAction can be used to insert an arbitrary string of HTML\n into an existing HTML document.\n", "HTMLEditorKit.LinkController": "\nClass to watch the associated component and fire\n hyperlink events on it when appropriate.\n", "HTMLEditorKit.Parser": "\nInterface to be supported by the parser.\n", "HTMLEditorKit.ParserCallback": "\nThe result of parsing drives these callback methods.\n", "HTMLFrameHyperlinkEvent": "\nHTMLFrameHyperlinkEvent is used to notify interested\n parties that link was activated in a frame.\n", "HTMLWriter": "\nThis is a writer for HTMLDocuments.\n", "ImageView": "\nView of an Image, intended to support the HTML <IMG> tag.\n", "InlineView": "\nDisplays the inline element styles\n based upon css attributes.\n", "ListView": "\nA view implementation to display an html list\n", "MinimalHTMLWriter": "\nMinimalHTMLWriter is a fallback writer used by the\n HTMLEditorKit to write out HTML for a document that\n is a not produced by the EditorKit.\n", "ObjectView": "\nComponent decorator that implements the view interface\n for <object> elements.\n", "Option": "\nValue for the ListModel used to represent\n <option> elements.\n", "StyleSheet": "\nSupport for defining the visual characteristics of\n HTML views being rendered.\n/\nThe StyleSheet interface is the abstract base interface for\n any type of style sheet.\n", "StyleSheet.BoxPainter": "\nClass to carry out some of the duties of\n CSS formatting.\n", "StyleSheet.ListPainter": "\nClass to carry out some of the duties of CSS list\n formatting.\n", "FormSubmitEvent.MethodType": "\nRepresents an HTML form method type.\n", "DTDConstants": "\nSGML constants used in a DTD.\n", "AttributeList": "\nThis class defines the attributes of an SGML element\n as described in a DTD using the ATTLIST construct.\n/\nRepresents a list of values for attributes of an MBean.\n/Deprecated.\nThis interface has been replaced by the SAX2\n             Attributes\n             interface, which includes Namespace support.\n", "ContentModel": "\nA representation of a content model.\n", "DocumentParser": "\nA Parser for HTML Documents (actually, you can specify a DTD, but\n you should really only use this class with the html dtd in swing).\n", "DTD": "\nThe representation of an SGML DTD.\n/\nThis is the top level interface for events dealing with DTDs\n", "Entity": "\nAn entity is described in a DTD using the ENTITY construct.\n/\nThis interface represents a known entity, either parsed or unparsed, in an\n XML document.\n", "Parser": "\nA simple DTD-driven HTML parser.\n/Deprecated.\nThis interface has been replaced by the SAX2\n             XMLReader\n             interface, which includes Namespace support.\n/Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "ParserDelegator": "\nResponsible for starting up a new DocumentParser\n each time its parse method is invoked.\n", "TagElement": "\nA generic HTML TagElement class.\n", "RTFEditorKit": "\nThis is the default implementation of RTF editing\n functionality.\n", "MutableTreeNode": "\nDefines the requirements for a tree node object that can change --\n by adding or removing child nodes, or by changing the contents\n of a user object stored in the node.\n", "RowMapper": "\nDefines the requirements for an object that translates paths in\n the tree into display rows.\n", "TreeCellEditor": "\nAdds to CellEditor the extensions necessary to configure an editor\n in a tree.\n", "TreeCellRenderer": "\nDefines the requirements for an object that displays a tree node.\n", "TreeModel": "\nThe model used by JTree.\n", "TreeNode": "\nDefines the requirements for an object that can be used as a\n tree node in a JTree.\n", "TreeSelectionModel": "\nThis interface represents the current state of the selection for\n the tree component.\n", "AbstractLayoutCache": "\nWarning:\n Serialized objects of this class will not be compatible with\n future Swing releases.\n", "AbstractLayoutCache.NodeDimensions": "\nUsed by AbstractLayoutCache to determine the size\n and x origin of a particular node.\n", "DefaultMutableTreeNode": "\nA DefaultMutableTreeNode is a general-purpose node in a tree data\n structure.\n", "DefaultTreeCellEditor": "\nA TreeCellEditor.\n", "DefaultTreeCellRenderer": "\nDisplays an entry in a tree.\n", "DefaultTreeModel": "\nA simple tree data model that uses TreeNodes.\n", "DefaultTreeSelectionModel": "\nDefault implementation of TreeSelectionModel.\n", "FixedHeightLayoutCache": "\nNOTE: This will become more open in a future release.\n", "TreePath": "\nTreePath represents an array of objects that uniquely\n identify the path to a node in a tree.\n/\nA path of tree nodes, typically used to represent the sequence of ancestor\n nodes of a tree node up to the top level CompilationUnitTree node.\n", "VariableHeightLayoutCache": "\nNOTE: This will become more open in a future release.\n", "ExpandVetoException": "\nException used to stop an expand/collapse from happening.\n", "StateEditable": "\nStateEditable defines the interface for objects that can have\n their state undone/redone by a StateEdit.\n", "UndoableEdit": "\nAn UndoableEdit represents an edit.\n", "AbstractUndoableEdit": "\nAn abstract implementation of UndoableEdit,\n implementing simple responses to all boolean methods in\n that interface.\n", "CompoundEdit": "\nA concrete subclass of AbstractUndoableEdit, used to assemble little\n UndoableEdits into great big ones.\n", "StateEdit": "\nStateEdit is a general edit for objects that change state.\n", "UndoableEditSupport": "\nA support class used for managing UndoableEdit listeners.\n", "UndoManager": "\nUndoManager manages a list of UndoableEdits,\n providing a way to undo or redo the appropriate edits.\n", "CannotRedoException": "\nThrown when an UndoableEdit is told to redo() and can't.\n", "CannotUndoException": "\nThrown when an UndoableEdit is told to undo() and can't.\n", "java.lang.instrument": "\nProvides services that allow Java programming language agents to instrument\n programs running on the JVM.\n/\nProvides services that allow Java programming language agents to instrument\n programs running on the JVM.\n", "ClassFileTransformer": "\nA transformer of class files.\n", "Instrumentation": "\nThis class provides services needed to instrument Java\n programming language code.\n", "ClassDefinition": "\nThis class serves as a parameter block to the Instrumentation.redefineClasses method.\n", "IllegalClassFormatException": "\nThrown by an implementation of\n ClassFileTransformer.transform\n when its input parameters are invalid.\n", "UnmodifiableClassException": "\nThrown by an implementation of\n Instrumentation.redefineClasses\n when one of the specified classes cannot be modified.\n", "UnmodifiableModuleException": "\nThrown to indicate that a module cannot be modified.\n", "java.util.logging": "\nProvides the classes and interfaces of\n the Java\u2122 2 platform's core logging facilities.\n/\nProvides the classes and interfaces of\n the Java\u2122 2 platform's core logging facilities.\n", "Filter": "\nA Filter can be used to provide fine grain control over\n what is logged, beyond the control provided by log levels.\n/\nA filter used to pre- and post-process incoming requests.\n", "LoggingMXBean": "Deprecated.\nLoggingMXBean is no longer a platform MXBean and is replaced\n with PlatformLoggingMXBean.\n", "ConsoleHandler": "\nThis Handler publishes log records to System.err.\n", "ErrorManager": "\nErrorManager objects can be attached to Handlers to process\n any error that occurs on a Handler during Logging.\n", "FileHandler": "\nSimple file logging Handler.\n", "Handler": "\nA Handler object takes log messages from a Logger and\n exports them.\n", "Level": "\nThe Level class defines a set of standard logging levels that\n can be used to control logging output.\n", "Logger": "\nA Logger object is used to log messages for a specific\n system or application component.\n", "LoggingPermission": "\nThe permission which the SecurityManager will check when code\n that is running with a SecurityManager calls one of the logging\n control methods (such as Logger.setLevel).\n", "LogManager": "\nThere is a single global LogManager object that is used to\n maintain a set of shared state about Loggers and log services.\n", "LogRecord": "\nLogRecord objects are used to pass logging requests between\n the logging framework and individual log Handlers.\n", "MemoryHandler": "\nHandler that buffers requests in a circular buffer in memory.\n", "SimpleFormatter": "\nPrint a brief summary of the LogRecord in a human readable\n format.\n", "SocketHandler": "\nSimple network logging Handler.\n", "StreamHandler": "\nStream based logging Handler.\n", "XMLFormatter": "\nFormat a LogRecord into a standard XML format.\n", "java.lang.management": "\nProvides the management interfaces for monitoring and management of the\nJava virtual machine and other components in the Java runtime.\n/\nProvides the management interfaces for monitoring and management of the\nJava virtual machine and other components in the Java runtime.\n", "javax.management": "\nProvides the core classes for the Java Management Extensions.\n/\nProvides the core classes for the Java Management Extensions.\n", "javax.management.loading": "\nProvides the classes which implement advanced dynamic\n        loading.\n/\nProvides the classes which implement advanced dynamic\n        loading.\n", "javax.management.modelmbean": "\nProvides the definition of the ModelMBean classes.\n/\nProvides the definition of the ModelMBean classes.\n", "javax.management.monitor": "\nProvides the definition of the monitor classes.\n/\nProvides the definition of the monitor classes.\n", "javax.management.openmbean": "\nProvides the open data types and Open MBean descriptor classes.\n/\nProvides the open data types and Open MBean descriptor classes.\n", "javax.management.relation": "\nProvides the definition of the Relation Service.\n/\nProvides the definition of the Relation Service.\n", "javax.management.remote": "\nInterfaces for remote access to\n        JMX MBean servers.\n/\nInterfaces for remote access to\n        JMX MBean servers.\n", "javax.management.timer": "\nProvides the definition of the Timer MBean.\n/\nProvides the definition of the Timer MBean.\n", "JMXConnectorProvider": "\nA provider for creating JMX API connector clients using a given\n protocol.\n/\nA provider for creating JMX API connector clients using a given\n protocol.\n/\u00a0/\nA provider for creating JMX API connector clients using a given\n protocol.\n/\u00a0", "JMXConnectorServerProvider": "\nA provider for creating JMX API connector servers using a given\n protocol.\n/\nA provider for creating JMX API connector servers using a given\n protocol.\n/\u00a0/\nA provider for creating JMX API connector servers using a given\n protocol.\n/\u00a0", "BufferPoolMXBean": "\nThe management interface for a buffer pool, for example a pool of\n direct or mapped buffers.\n", "ClassLoadingMXBean": "\nThe management interface for the class loading system of\n the Java virtual machine.\n", "CompilationMXBean": "\nThe management interface for the compilation system of\n the Java virtual machine.\n", "GarbageCollectorMXBean": "\nThe management interface for the garbage collection of\n the Java virtual machine.\n/\nPlatform-specific management interface for a garbage collector\n which performs collections in cycles.\n", "MemoryManagerMXBean": "\nThe management interface for a memory manager.\n", "MemoryMXBean": "\nThe management interface for the memory system of\n the Java virtual machine.\n", "MemoryPoolMXBean": "\nThe management interface for a memory pool.\n", "OperatingSystemMXBean": "\nThe management interface for the operating system on which\n the Java virtual machine is running.\n/\nPlatform-specific management interface for the operating system\n on which the Java virtual machine is running.\n", "PlatformLoggingMXBean": "\nThe management interface for the logging facility.\n", "PlatformManagedObject": "\nA platform managed object is a JMX MXBean\n for monitoring and managing a component in the Java platform.\n", "RuntimeMXBean": "\nThe management interface for the runtime system of\n the Java virtual machine.\n", "ThreadMXBean": "\nThe management interface for the thread system of\n the Java virtual machine.\n/\nPlatform-specific management interface for the thread system\n of the Java virtual machine.\n", "LockInfo": "\nInformation about a lock.\n", "ManagementFactory": "\nThe ManagementFactory class is a factory class for getting\n managed beans for the Java platform.\n", "ManagementPermission": "\nThe permission which the SecurityManager will check when code\n that is running with a SecurityManager calls methods defined\n in the management interface for the Java platform.\n", "MemoryNotificationInfo": "\nThe information about a memory notification.\n", "MemoryUsage": "\nA MemoryUsage object represents a snapshot of memory usage.\n", "MonitorInfo": "\nInformation about an object monitor lock.\n/\nInformation about a monitor owned by a thread.\n", "ThreadInfo": "\nThread information.\n", "MemoryType": "\nTypes of memory pools.\n", "Descriptor": "\nAdditional metadata for a JMX element.\n", "DescriptorAccess": "\nThis interface is used to gain access to descriptors of the Descriptor class\n which are associated with a JMX component, i.e.\n", "DescriptorRead": "\nInterface to read the Descriptor of a management interface element\n such as an MBeanInfo.\n", "DynamicMBean": "\nDefines the methods that should be implemented by\n a Dynamic MBean (MBean that exposes a dynamic management interface).\n", "MBeanRegistration": "\nCan be implemented by an MBean in order to\n carry out operations before and after being registered or unregistered from\n the MBean Server.\n", "MBeanServer": "\nThis is the interface for MBean manipulation on the agent\n side.\n", "MBeanServerConnection": "\nThis interface represents a way to talk to an MBean server, whether\n local or remote.\n", "MBeanServerDelegateMBean": "\nDefines the management interface  of an object of class MBeanServerDelegate.\n", "NotificationBroadcaster": "\nInterface implemented by an MBean that emits Notifications.\n", "NotificationEmitter": "\nInterface implemented by an MBean that emits Notifications.\n", "NotificationFilter": "\nTo be implemented by a any class acting as a notification filter.\n", "NotificationListener": "\nShould be implemented by an object that wants to receive notifications.\n", "PersistentMBean": "\nThis class is the interface to be implemented by MBeans that are meant to be\n  persistent.\n", "QueryExp": "\nRepresents relational constraints similar to database query \"where\n clauses\".\n", "ValueExp": "\nRepresents values that can be passed as arguments to\n relational expressions.\n", "AttributeChangeNotification": "\nProvides definitions of the attribute change notifications sent by MBeans.\n", "AttributeChangeNotificationFilter": "\nThis class implements of the NotificationFilter\n interface for the attribute change notification.\n", "AttributeValueExp": "\nRepresents attributes used as arguments to relational constraints.\n", "DefaultLoaderRepository": "Deprecated.\nUse\n MBeanServer.getClassLoaderRepository()\n instead.\n/Deprecated.\nUse\n MBeanServer.getClassLoaderRepository()\n instead.\n", "ImmutableDescriptor": "\nAn immutable descriptor.\n", "JMX": "\nStatic methods from the JMX API.\n", "MBeanAttributeInfo": "\nDescribes an MBean attribute exposed for management.\n", "MBeanConstructorInfo": "\nDescribes a constructor exposed by an MBean.\n", "MBeanFeatureInfo": "\nProvides general information for an MBean descriptor object.\n", "MBeanInfo": "\nDescribes the management interface exposed by an MBean; that is,\n the set of attributes and operations which are available for\n management operations.\n", "MBeanNotificationInfo": "\nThe MBeanNotificationInfo class is used to describe the\n characteristics of the different notification instances\n emitted by an MBean, for a given Java class of notification.\n", "MBeanOperationInfo": "\nDescribes a management operation exposed by an MBean.\n", "MBeanParameterInfo": "\nDescribes an argument of an operation exposed by an MBean.\n", "MBeanPermission": "\nPermission controlling access to MBeanServer operations.\n", "MBeanServerBuilder": "\nThis class represents a builder that creates a default\n MBeanServer implementation.\n", "MBeanServerDelegate": "\nRepresents  the MBean server from the management point of view.\n", "MBeanServerFactory": "\nProvides MBean server references.\n", "MBeanServerInvocationHandler": "\nInvocationHandler that forwards methods in an MBean's\n management interface through the MBean server to the MBean.\n", "MBeanServerNotification": "\nRepresents a notification emitted by the MBean Server through the MBeanServerDelegate MBean.\n", "MBeanServerPermission": "\nA Permission to perform actions related to MBeanServers.\n", "MBeanTrustPermission": "\nThis permission represents \"trust\" in a signer or codebase.\n", "Notification": "\nThe Notification class represents a notification emitted by an\n MBean.\n/\nA notification from the SCTP stack.\n", "NotificationBroadcasterSupport": "\nProvides an implementation of NotificationEmitter\n interface.\n", "NotificationFilterSupport": "\nProvides an implementation of the NotificationFilter interface.\n", "ObjectInstance": "\nUsed to represent the object name of an MBean and its class name.\n", "ObjectName": "\nRepresents the object name of an MBean, or a pattern that can\n match the names of several MBeans.\n", "Query": "\nConstructs query object constraints.\n", "QueryEval": "\nAllows a query to be performed in the context of a specific MBean server.\n", "StandardEmitterMBean": "\nAn MBean whose management interface is determined by reflection\n on a Java interface, and that emits notifications.\n", "StandardMBean": "\nAn MBean whose management interface is determined by reflection\n on a Java interface.\n", "StringValueExp": "\nRepresents strings that are arguments to relational constraints.\n", "AttributeNotFoundException": "\nThe specified attribute does not exist or cannot be retrieved.\n", "BadAttributeValueExpException": "\nThrown when an invalid MBean attribute is passed to a query\n constructing method.\n", "BadBinaryOpValueExpException": "\nThrown when an invalid expression is passed to a method for\n constructing a query.\n", "BadStringOperationException": "\nThrown when an invalid string operation is passed\n to a method for constructing a query.\n", "InstanceAlreadyExistsException": "\nThe MBean is already registered in the repository.\n", "InstanceNotFoundException": "\nThe specified MBean does not exist in the repository.\n", "InvalidApplicationException": "\nThrown when an attempt is made to apply either of the following: A\n subquery expression to an MBean or a qualified attribute expression\n to an MBean of the wrong class.\n", "InvalidAttributeValueException": "\nThe value specified is not valid for the attribute.\n/\nThis class is thrown when an attempt is\n made to add to an attribute a value that conflicts with the attribute's\n schema definition.\n", "JMException": "\nExceptions thrown by JMX implementations.\n", "JMRuntimeException": "\nRuntime exceptions emitted by JMX implementations.\n", "ListenerNotFoundException": "\nThe specified MBean listener does not exist in the repository.\n", "MalformedObjectNameException": "\nThe format of the string does not correspond to a valid ObjectName.\n", "MBeanException": "\nRepresents \"user defined\" exceptions thrown by MBean methods\n in the agent.\n", "MBeanRegistrationException": "\nWraps exceptions thrown by the preRegister(), preDeregister() methods\n of the MBeanRegistration interface.\n", "NotCompliantMBeanException": "\nException which occurs when trying to register an  object in the MBean server that is not a JMX compliant MBean.\n", "OperationsException": "\nRepresents exceptions thrown in the MBean server when performing operations\n on MBeans.\n", "ReflectionException": "\nRepresents exceptions thrown in the MBean server when using the\n java.lang.reflect classes to invoke methods on MBeans.\n", "RuntimeErrorException": "\nWhen a java.lang.Error occurs in the agent it should be caught and\n re-thrown as a RuntimeErrorException.\n", "RuntimeMBeanException": "\nRepresents runtime exceptions thrown by MBean methods in\n the agent.\n", "RuntimeOperationsException": "\nRepresents runtime exceptions thrown in the agent when performing operations on MBeans.\n", "ServiceNotFoundException": "\nRepresents exceptions raised when a requested service is not supported.\n", "ConstructorParameters": "\n\n An annotation on a constructor that shows how the parameters of\n that constructor correspond to the constructed object's getter\n methods.\n", "DescriptorKey": "\nMeta-annotation that describes how an annotation element relates\n to a field in a Descriptor.\n", "MXBean": "\nAnnotation to mark an interface explicitly as being an MXBean\n    interface, or as not being an MXBean interface.\n", "ClassLoaderRepository": "\nInstances of this interface are used to keep the list of ClassLoaders\n registered in an MBean Server.\n", "MLetMBean": "\nExposes the remote management interface of the MLet\n MBean.\n", "PrivateClassLoader": "\nMarker interface indicating that a ClassLoader should not be added\n to the ClassLoaderRepository.\n", "MLet": "\nAllows you to instantiate and register one or several MBeans in the MBean server\n coming from a remote URL.\n", "MLetContent": "\nThis class represents the contents of the MLET tag.\n", "PrivateMLet": "\nAn MLet that is not added to the ClassLoaderRepository.\n", "ModelMBean": "\nThis interface must be implemented by the ModelMBeans.\n", "ModelMBeanInfo": "\nThis interface is implemented by the ModelMBeanInfo for every ModelMBean.\n", "ModelMBeanNotificationBroadcaster": "\nThis interface must be implemented by the ModelMBeans.\n", "DescriptorSupport": "\nThis class represents the metadata set for a ModelMBean element.\n", "ModelMBeanAttributeInfo": "\nThe ModelMBeanAttributeInfo object describes an attribute of the ModelMBean.\n", "ModelMBeanConstructorInfo": "\nThe ModelMBeanConstructorInfo object describes a constructor of the ModelMBean.\n", "ModelMBeanInfoSupport": "\nThis class represents the meta data for ModelMBeans.\n", "ModelMBeanNotificationInfo": "\nThe ModelMBeanNotificationInfo object describes a notification emitted\n by a ModelMBean.\n", "ModelMBeanOperationInfo": "\nThe ModelMBeanOperationInfo object describes a management operation of\n the ModelMBean.\n", "RequiredModelMBean": "\nThis class is the implementation of a ModelMBean.\n", "InvalidTargetObjectTypeException": "\nException thrown when an invalid target object type is specified.\n", "XMLParseException": "\nThis exception is thrown when an XML formatted string is being parsed into ModelMBean objects\n or when XML formatted strings are being created from ModelMBean objects.\n", "CounterMonitorMBean": "\nExposes the remote management interface of the counter monitor MBean.\n", "GaugeMonitorMBean": "\nExposes the remote management interface of the gauge monitor MBean.\n", "MonitorMBean": "\nExposes the remote management interface of monitor MBeans.\n", "StringMonitorMBean": "\nExposes the remote management interface of the string monitor MBean.\n", "CounterMonitor": "\nDefines a monitor MBean designed to observe the values of a counter\n attribute.\n", "GaugeMonitor": "\nDefines a monitor MBean designed to observe the values of a gauge attribute.\n", "Monitor": "\nDefines the part common to all monitor MBeans.\n", "MonitorNotification": "\nProvides definitions of the notifications sent by monitor MBeans.\n", "StringMonitor": "\nDefines a monitor MBean designed to observe the values of a string\n attribute.\n", "MonitorSettingException": "\nException thrown by the monitor when a monitor setting becomes invalid while the monitor is running.\n", "CompositeData": "\nThe CompositeData interface specifies\n the behavior of a specific type of complex open data objects\n which represent composite data structures.\n", "CompositeDataView": "\nA Java class can implement this interface to indicate how it is\n to be converted into a CompositeData by the MXBean framework.\n", "OpenMBeanAttributeInfo": "\nDescribes an attribute of an open MBean.\n", "OpenMBeanConstructorInfo": "\nDescribes a constructor of an Open MBean.\n", "OpenMBeanInfo": "\nDescribes an Open MBean: an Open MBean is recognized as such if\n its getMBeanInfo() method returns an instance of a class which\n implements the OpenMBeanInfo interface, typically OpenMBeanInfoSupport.\n", "OpenMBeanOperationInfo": "\nDescribes an operation of an Open MBean.\n", "OpenMBeanParameterInfo": "\nDescribes a parameter used in one or more operations or\n constructors of an open MBean.\n", "TabularData": "\nThe TabularData interface specifies the behavior of a specific type of complex open data objects\n which represent tabular data structures.\n", "ArrayType<T>": "\nThe ArrayType class is the open type class whose instances describe\n all open data values which are n-dimensional arrays of open data values.\n", "CompositeDataInvocationHandler": "\nAn InvocationHandler that forwards getter methods to a\n   CompositeData.\n", "CompositeDataSupport": "\nThe CompositeDataSupport class is the open data class which\n implements the CompositeData interface.\n", "CompositeType": "\nThe CompositeType class is the open type class\n whose instances describe the types of CompositeData values.\n", "OpenMBeanAttributeInfoSupport": "\nDescribes an attribute of an open MBean.\n", "OpenMBeanConstructorInfoSupport": "\nDescribes a constructor of an Open MBean.\n", "OpenMBeanInfoSupport": "\nThe OpenMBeanInfoSupport class describes the management\n information of an open MBean: it is a subclass of MBeanInfo, and it implements the OpenMBeanInfo interface.\n", "OpenMBeanOperationInfoSupport": "\nDescribes an operation of an Open MBean.\n", "OpenMBeanParameterInfoSupport": "\nDescribes a parameter used in one or more operations or\n constructors of an open MBean.\n", "OpenType<T>": "\nThe OpenType class is the parent abstract class of all classes which describe the actual open type\n of open data values.\n", "SimpleType<T>": "\nThe SimpleType class is the open type class whose instances describe\n all open data values which are neither arrays,\n nor CompositeData values,\n nor TabularData values.\n", "TabularDataSupport": "\nThe TabularDataSupport class is the open data\n class which implements the TabularData\n and the Map interfaces, and which is internally based on a hash map data structure.\n", "TabularType": "\nThe TabularType class is the  open type class\n whose instances describe the types of TabularData values.\n", "InvalidOpenTypeException": "\nThis runtime exception is thrown to indicate that the open type of an open data value\n is not the one expected.\n", "KeyAlreadyExistsException": "\nThis runtime exception is thrown to indicate that the index of a row to be added to a tabular data instance\n is already used to refer to another row in this tabular data instance.\n", "OpenDataException": "\nThis checked exception is thrown when an open type, an open data  or an open MBean metadata info instance\n could not be constructed because one or more validity constraints were not met.\n", "Relation": "\nThis interface has to be implemented by any MBean class expected to\n represent a relation managed using the Relation Service.\n", "RelationServiceMBean": "\nThe Relation Service is in charge of creating and deleting relation types\n and relations, of handling the consistency and of providing query\n mechanisms.\n", "RelationSupportMBean": "\nA RelationSupport object is used internally by the Relation Service to\n represent simple relations (only roles, no properties or methods), with an\n unlimited number of roles, of any relation type.\n", "RelationType": "\nThe RelationType interface has to be implemented by any class expected to\n represent a relation type.\n", "MBeanServerNotificationFilter": "\nFilter for MBeanServerNotification.\n", "RelationNotification": "\nA notification of a change in the Relation Service.\n", "RelationService": "\nThe Relation Service is in charge of creating and deleting relation types\n and relations, of handling the consistency and of providing query\n mechanisms.\n", "RelationSupport": "\nA RelationSupport object is used internally by the Relation Service to\n represent simple relations (only roles, no properties or methods), with an\n unlimited number of roles, of any relation type.\n", "RelationTypeSupport": "\nA RelationTypeSupport object implements the RelationType interface.\n", "Role": "\nRepresents a role: includes a role name and referenced MBeans (via their\n ObjectNames).\n", "RoleInfo": "\nA RoleInfo object summarises a role in a relation type.\n", "RoleList": "\nA RoleList represents a list of roles (Role objects).\n", "RoleResult": "\nRepresents the result of a multiple access to several roles of a relation\n (either for reading or writing).\n", "RoleStatus": "\nThis class describes the various problems which can be encountered when\n accessing a role.\n", "RoleUnresolved": "\nRepresents an unresolved role: a role not retrieved from a relation due\n to a problem.\n", "RoleUnresolvedList": "\nA RoleUnresolvedList represents a list of RoleUnresolved objects,\n representing roles not retrieved from a relation due to a problem\n encountered when trying to access (read or write) the roles.\n", "InvalidRelationIdException": "\nThis exception is raised when relation id provided for a relation is already\n used.\n", "InvalidRelationServiceException": "\nThis exception is raised when an invalid Relation Service is provided.\n", "InvalidRelationTypeException": "\nInvalid relation type.\n", "InvalidRoleInfoException": "\nThis exception is raised when, in a role info, its minimum degree is greater\n than its maximum degree.\n", "InvalidRoleValueException": "\nRole value is invalid.\n", "RelationException": "\nThis class is the superclass of any exception which can be raised during\n relation management.\n", "RelationNotFoundException": "\nThis exception is raised when there is no relation for a given relation id\n in a Relation Service.\n", "RelationServiceNotRegisteredException": "\nThis exception is raised when an access is done to the Relation Service and\n that one is not registered.\n", "RelationTypeNotFoundException": "\nThis exception is raised when there is no relation type with given name in\n Relation Service.\n", "RoleInfoNotFoundException": "\nThis exception is raised when there is no role info with given name in a\n given relation type.\n", "RoleNotFoundException": "\nThis exception is raised when a role in a relation does not exist, or is not\n readable, or is not settable.\n", "JMXAddressable": "\nImplemented by objects that can have a JMXServiceURL address.\n", "JMXAuthenticator": "\nInterface to define how remote credentials are converted into a\n JAAS Subject.\n", "JMXConnector": "\nThe client end of a JMX API connector.\n", "JMXConnectorServerMBean": "\nMBean interface for connector servers.\n", "MBeanServerForwarder": "\nAn object of this class implements the MBeanServer interface and\n wraps another object that also implements that interface.\n", "JMXConnectionNotification": "\nNotification emitted when a client connection is opened or\n closed or when notifications are lost.\n", "JMXConnectorFactory": "\nFactory to create JMX API connector clients.\n", "JMXConnectorServer": "\nSuperclass of every connector server.\n", "JMXConnectorServerFactory": "\nFactory to create JMX API connector servers.\n", "JMXPrincipal": "\nThe identity of a remote client of the JMX Remote API.\n", "JMXServiceURL": "\nThe address of a JMX API connector server.\n", "NotificationResult": "\nResult of a query for buffered notifications.\n", "SubjectDelegationPermission": "\nPermission required by an authentication identity to perform\n operations on behalf of an authorization identity.\n", "TargetedNotification": "\nA (Notification, Listener ID) pair.\n", "JMXProviderException": "\nException thrown by JMXConnectorFactory and\n JMXConnectorServerFactory when a provider exists for\n the required protocol but cannot be used for some reason.\n", "JMXServerErrorException": "\nException thrown as the result of a remote MBeanServer\n method invocation when an Error is thrown while\n processing the invocation in the remote MBean server.\n", "TimerMBean": "\nExposes the management interface of the timer MBean.\n", "TimerNotification": "\nThis class provides definitions of the notifications sent by timer MBeans.\n", "javax.management.remote.rmi": "\nThe RMI connector is a connector for the JMX Remote API that\n      uses RMI to transmit client requests to a remote MBean server.\n/\nThe RMI connector is a connector for the JMX Remote API that\n      uses RMI to transmit client requests to a remote MBean server.\n", "RMIConnection": "\nRMI object used to forward an MBeanServer request from a client\n to its MBeanServer implementation on the server side.\n", "RMIServer": "\nRMI object used to establish connections to an RMI connector.\n", "RMIConnectionImpl": "\nImplementation of the RMIConnection interface.\n", "RMIConnectionImpl_Stub": "\u00a0", "RMIConnector": "\nA connection to a remote RMI connector.\n", "RMIConnectorServer": "\nA JMX API connector server that creates RMI-based connections\n from remote clients.\n", "RMIIIOPServerImpl": "Deprecated.\nThis transport is no longer supported.\n", "RMIJRMPServerImpl": "\nAn RMIServer object that is exported through JRMP and that\n creates client connections as RMI objects exported through JRMP.\n", "RMIServerImpl": "\nAn RMI object representing a connector server.\n", "RMIServerImpl_Stub": "\u00a0", "javax.naming": "\nProvides the classes and interfaces for accessing naming services.\n/\nProvides the classes and interfaces for accessing naming services.\n", "javax.naming.directory": "\nExtends the javax.naming package to provide functionality\nfor accessing directory services.\n/\nExtends the javax.naming package to provide functionality\nfor accessing directory services.\n", "javax.naming.event": "\nProvides support for event notification when accessing naming and\ndirectory services.\n/\nProvides support for event notification when accessing naming and\ndirectory services.\n", "javax.naming.ldap": "\nProvides support for LDAPv3 extended operations and controls.\n/\nProvides support for LDAPv3 extended operations and controls.\n", "javax.naming.ldap.spi": "\u00a0/\u00a0", "javax.naming.spi": "\nProvides the means for dynamically plugging in support for accessing\nnaming and directory services through the javax.naming\nand related packages.\n/\nProvides the means for dynamically plugging in support for accessing\nnaming and directory services through the javax.naming\nand related packages.\n", "LdapDnsProvider": "\nService-provider class for DNS lookups when performing LDAP operations.\n/\nService-provider class for DNS lookups when performing LDAP operations.\n/\nService-provider class for DNS lookups when performing LDAP operations.\n", "Context": "\nThis interface represents a naming context, which\n consists of a set of name-to-object bindings.\n", "NameParser": "\nThis interface is used for parsing names from a hierarchical\n namespace.\n", "NamingEnumeration<T>": "\nThis interface is for enumerating lists returned by\n methods in the javax.naming and javax.naming.directory packages.\n", "Referenceable": "\nThis interface is implemented by an object that can provide a\n Reference to itself.\n", "BinaryRefAddr": "\nThis class represents the binary form of the address of\n a communications end-point.\n", "Binding": "\nThis class represents a name-to-object binding found in a context.\n", "CompositeName": "\nThis class represents a composite name -- a sequence of\n component names spanning multiple namespaces.\n", "CompoundName": "\nThis class represents a compound name -- a name from\n a hierarchical name space.\n", "InitialContext": "\nThis class is the starting context for performing naming operations.\n", "LinkRef": "\nThis class represents a Reference whose contents is a name, called the link name,\n that is bound to an atomic name in a context.\n", "NameClassPair": "\nThis class represents the object name and class name pair of a binding\n found in a context.\n", "RefAddr": "\nThis class represents the address of a communications end-point.\n", "Reference": "\nThis class represents a reference to an object that is found outside of\n the naming/directory system.\n/\nA representation of the Reference element as defined in the\n \n W3C Recommendation for XML-Signature Syntax and Processing.\n", "StringRefAddr": "\nThis class represents the string form of the address of\n a communications end-point.\n", "AuthenticationException": "\nThis exception is thrown when an authentication error occurs while\n accessing the naming or directory service.\n/\nThis exception is thrown by a SASL mechanism implementation\n to indicate that the SASL\n exchange has failed due to reasons related to authentication, such as\n an invalid identity, passphrase, or key.\n", "AuthenticationNotSupportedException": "\nThis exception is thrown when\n the particular flavor of authentication requested is not supported.\n", "CannotProceedException": "\nThis exception is thrown to indicate that the operation reached\n a point in the name where the operation cannot proceed any further.\n", "CommunicationException": "\nThis exception is thrown when the client is\n unable to communicate with the directory or naming service.\n", "ConfigurationException": "\nThis exception is thrown when there is a configuration problem.\n", "ContextNotEmptyException": "\nThis exception is thrown when attempting to destroy a context that\n is not empty.\n", "InsufficientResourcesException": "\nThis exception is thrown when resources are not available to complete\n the requested operation.\n", "InterruptedNamingException": "\nThis exception is thrown when the naming operation\n being invoked has been interrupted.\n", "InvalidNameException": "\nThis exception indicates that the name being specified does\n not conform to the naming syntax of a naming system.\n", "LimitExceededException": "\nThis exception is thrown when a method\n terminates abnormally due to a user or system specified limit.\n", "LinkException": "\nThis exception is used to describe problems encountered while resolving links.\n", "LinkLoopException": "\nThis exception is thrown when\n a loop was detected while attempting to resolve a link, or an implementation\n specific limit on link counts has been reached.\n", "MalformedLinkException": "\nThis exception is thrown when a malformed link was encountered while\n resolving or constructing a link.\n", "NameAlreadyBoundException": "\nThis exception is thrown by methods to indicate that\n a binding cannot be added because the name is already bound to\n another object.\n", "NameNotFoundException": "\nThis exception is thrown when a component of the name cannot be resolved\n because it is not bound.\n", "NamingException": "\nThis is the superclass of all exceptions thrown by\n operations in the Context and DirContext interfaces.\n", "NamingSecurityException": "\nThis is the superclass of security-related exceptions\n thrown by operations in the Context and DirContext interfaces.\n", "NoInitialContextException": "\nThis exception is thrown when no initial context implementation\n can be created.\n", "NoPermissionException": "\nThis exception is thrown when attempting to perform an operation\n for which the client has no permission.\n", "NotContextException": "\nThis exception is thrown when a naming operation proceeds to a point\n where a context is required to continue the operation, but the\n resolved object is not a context.\n", "OperationNotSupportedException": "\nThis exception is thrown when a context implementation does not support\n the operation being invoked.\n", "PartialResultException": "\nThis exception is thrown to indicate that the result being returned\n or returned so far is partial, and that the operation cannot\n be completed.\n", "ReferralException": "\nThis abstract class is used to represent a referral exception,\n which is generated in response to a referral\n such as that returned by LDAP v3 servers.\n", "ServiceUnavailableException": "\nThis exception is thrown when attempting to communicate with a\n directory or naming service and that service is not available.\n", "SizeLimitExceededException": "\nThis exception is thrown when a method\n produces a result that exceeds a size-related limit.\n", "TimeLimitExceededException": "\nThis exception is thrown when a method\n does not terminate within the specified time limit.\n", "DirContext": "\nThe directory service interface, containing\n methods for examining and updating attributes\n associated with objects, and for searching the directory.\n", "BasicAttribute": "\nThis class provides a basic implementation of the Attribute interface.\n", "BasicAttributes": "\nThis class provides a basic implementation\n of the Attributes interface.\n", "InitialDirContext": "\nThis class is the starting context for performing\n directory operations.\n", "ModificationItem": "\nThis class represents a modification item.\n", "SearchControls": "\nThis class encapsulates\n factors that determine scope of search and what gets returned\n as a result of the search.\n", "SearchResult": "\nThis class represents an item in the NamingEnumeration returned as a\n result of the DirContext.search() methods.\n", "AttributeInUseException": "\nThis exception is thrown when an operation attempts\n to add an attribute that already exists.\n", "AttributeModificationException": "\nThis exception is thrown when an attempt is\n made to add, or remove, or modify an attribute, its identifier,\n or its values that conflicts with the attribute's (schema) definition\n or the attribute's state.\n", "InvalidAttributeIdentifierException": "\nThis exception is thrown when an attempt is\n made to add to create an attribute with an invalid attribute identifier.\n", "InvalidAttributesException": "\nThis exception is thrown when an attempt is\n made to add or modify an attribute set that has been specified\n incompletely or incorrectly.\n", "InvalidSearchControlsException": "\nThis exception is thrown when the specification of\n the SearchControls for a search operation is invalid.\n", "InvalidSearchFilterException": "\nThis exception is thrown when the specification of\n a search filter is invalid.\n", "NoSuchAttributeException": "\nThis exception is thrown when attempting to access\n an attribute that does not exist.\n", "SchemaViolationException": "\nThis exception is thrown when a method\n in some ways violates the schema.\n", "EventContext": "\nContains methods for registering/deregistering listeners to be notified of\n events fired when objects named in a context changes.\n", "EventDirContext": "\nContains methods for registering listeners to be notified\n of events fired when objects named in a directory context changes.\n", "NamespaceChangeListener": "\nSpecifies the methods that a listener interested in namespace changes\n must implement.\n", "NamingListener": "\nThis interface is the root of listener interfaces that\n handle NamingEvents.\n", "ObjectChangeListener": "\nSpecifies the method that a listener of a NamingEvent\n with event type of OBJECT_CHANGED must implement.\n", "NamingEvent": "\nThis class represents an event fired by a naming/directory service.\n", "NamingExceptionEvent": "\nThis class represents an event fired when the procedures/processes\n used to collect information for notifying listeners of\n NamingEvents threw a NamingException.\n", "ExtendedRequest": "\nThis interface represents an LDAPv3 extended operation request as defined in\n RFC 2251.\n", "ExtendedResponse": "\nThis interface represents an LDAP extended operation response as defined in\n RFC 2251.\n", "HasControls": "\nThis interface is for returning controls with objects returned\n in NamingEnumerations.\n", "LdapContext": "\nThis interface represents a context in which you can perform\n operations with LDAPv3-style controls and perform LDAPv3-style\n extended operations.\n", "UnsolicitedNotification": "\nThis interface represents an unsolicited notification as defined in\n RFC 2251.\n", "UnsolicitedNotificationListener": "\nThis interface is for handling UnsolicitedNotificationEvent.\n", "BasicControl": "\nThis class provides a basic implementation of the Control\n interface.\n", "ControlFactory": "\nThis abstract class represents a factory for creating LDAPv3 controls.\n", "InitialLdapContext": "\nThis class is the starting context for performing\n LDAPv3-style extended operations and controls.\n", "LdapName": "\nThis class represents a distinguished name as specified by\n RFC 2253.\n", "ManageReferralControl": "\nRequests that referral and other special LDAP objects be manipulated\n as normal LDAP objects.\n", "PagedResultsControl": "\nRequests that the results of a search operation be returned by the LDAP\n server in batches of a specified size.\n", "PagedResultsResponseControl": "\nIndicates the end of a batch of search results.\n", "Rdn": "\nThis class represents a relative distinguished name, or RDN, which is a\n component of a distinguished name as specified by\n RFC 2253.\n", "SortControl": "\nRequests that the results of a search operation be sorted by the LDAP server\n before being returned.\n", "SortKey": "\nA sort key and its associated sort parameters.\n", "SortResponseControl": "\nIndicates whether the requested sort of search results was successful or not.\n", "StartTlsRequest": "\nThis class implements the LDAPv3 Extended Request for StartTLS as\n defined in\n Lightweight Directory\n Access Protocol (v3): Extension for Transport Layer Security\n\n The object identifier for StartTLS is 1.3.6.1.4.1.1466.20037\n and no extended request value is defined.\n", "StartTlsResponse": "\nThis class implements the LDAPv3 Extended Response for StartTLS as\n defined in\n Lightweight Directory\n Access Protocol (v3): Extension for Transport Layer Security\n\n The object identifier for StartTLS is 1.3.6.1.4.1.1466.20037\n and no extended response value is defined.\n", "UnsolicitedNotificationEvent": "\nThis class represents an event fired in response to an unsolicited\n notification sent by the LDAP server.\n", "LdapReferralException": "\nThis abstract class is used to represent an LDAP referral exception.\n", "LdapDnsProviderResult": "\nThe result of a DNS lookup for an LDAP URL.\n", "DirObjectFactory": "\nThis interface represents a factory for creating an object given\n an object and attributes about the object.\n", "DirStateFactory": "\nThis interface represents a factory for obtaining the state of an\n object and corresponding attributes for binding.\n", "InitialContextFactory": "\nThis interface represents a factory that creates an initial context.\n/\u00a0/\u00a0", "InitialContextFactoryBuilder": "\nThis interface represents a builder that creates initial context factories.\n", "ObjectFactory": "\nThis interface represents a factory for creating an object.\n", "ObjectFactoryBuilder": "\nThis interface represents a builder that creates object factories.\n", "Resolver": "\nThis interface represents an \"intermediate context\" for name resolution.\n", "StateFactory": "\nThis interface represents a factory for obtaining the state of an\n object for binding.\n", "DirectoryManager": "\nThis class contains methods for supporting DirContext\n implementations.\n", "DirStateFactory.Result": "\nAn object/attributes pair for returning the result of\n DirStateFactory.getStateToBind().\n", "NamingManager": "\nThis class contains methods for creating context objects\n and objects referred to by location information in the naming\n or directory service.\n", "ResolveResult": "\nThis class represents the result of resolution of a name.\n", "HttpClient.Builder": "\nA builder of HTTP Clients.\n", "HttpRequest.BodyPublisher": "\nA BodyPublisher converts high-level Java objects into a flow of\n byte buffers suitable for sending as a request body.\n", "HttpRequest.Builder": "\nA builder of HTTP requests.\n", "HttpResponse<T>": "\nAn HTTP response.\n", "HttpResponse.BodyHandler<T>": "\nA handler for response bodies.\n", "HttpResponse.BodySubscriber<T>": "\nA BodySubscriber consumes response body bytes and converts them\n into a higher-level Java type.\n", "HttpResponse.PushPromiseHandler<T>": "\nA handler for push promises.\n", "HttpResponse.ResponseInfo": "\nInitial response information supplied to a BodyHandler\n when a response is initially received and before the body is processed.\n", "WebSocket": "\nA WebSocket Client.\n", "WebSocket.Builder": "\nA builder of WebSocket Clients.\n", "WebSocket.Listener": "\nThe receiving interface of WebSocket.\n", "HttpClient": "\nAn HTTP Client.\n", "HttpHeaders": "\nA read-only view of a set of HTTP headers.\n", "HttpRequest": "\nAn HTTP request.\n", "HttpRequest.BodyPublishers": "\nImplementations of BodyPublisher that implement\n various useful publishers, such as publishing the request body from a\n String, or from a file.\n", "HttpResponse.BodyHandlers": "\nImplementations of BodyHandler that implement various\n useful handlers, such as handling the response body as a String, or\n streaming the response body to a file.\n", "HttpResponse.BodySubscribers": "\nImplementations of BodySubscriber that implement\n various useful subscribers, such as converting the response body bytes\n into a String, or streaming the bytes to a file.\n", "HttpClient.Redirect": "\nDefines the automatic redirection policy.\n", "HttpClient.Version": "\nThe HTTP protocol version.\n", "HttpConnectTimeoutException": "\nThrown when a connection, over which an HttpRequest is intended to be\n sent, is not successfully established within a specified time period.\n", "HttpTimeoutException": "\nThrown when a response is not received within a specified time period.\n", "WebSocketHandshakeException": "\nThrown when the opening handshake has failed.\n", "java.util.prefs": "\nThis package allows applications to store and retrieve user and system\n preference and configuration data.\n/\nThis package allows applications to store and retrieve user and system\n preference and configuration data.\n", "PreferencesFactory": "\nA factory object that generates Preferences objects.\n/\nA factory object that generates Preferences objects.\n/\nA factory object that generates Preferences objects.\n", "NodeChangeListener": "\nA listener for receiving preference node change events.\n", "PreferenceChangeListener": "\nA listener for receiving preference change events.\n", "AbstractPreferences": "\nThis class provides a skeletal implementation of the Preferences\n class, greatly easing the task of implementing it.\n", "NodeChangeEvent": "\nAn event emitted by a Preferences node to indicate that\n a child of that node has been added or removed.\n", "PreferenceChangeEvent": "\nAn event emitted by a Preferences node to indicate that\n a preference has been added, removed or has had its value changed.\n", "Preferences": "\nA node in a hierarchical collection of preference data.\n", "BackingStoreException": "\nThrown to indicate that a preferences operation could not complete because\n of a failure in the backing store, or a failure to contact the backing\n store.\n", "InvalidPreferencesFormatException": "\nThrown to indicate that an operation could not complete because\n the input did not conform to the appropriate XML document type\n for a collection of preferences, as per the Preferences\n specification.\n", "java.rmi.activation": "\nProvides support for RMI Object Activation.\n/\nProvides support for RMI Object Activation.\n", "java.rmi.dgc": "\nProvides classes and interface for RMI distributed\n garbage-collection (DGC).\n/\nProvides classes and interface for RMI distributed\n garbage-collection (DGC).\n", "java.rmi.registry": "\nProvides a class and two interfaces for the RMI registry.\n/\nProvides a class and two interfaces for the RMI registry.\n", "java.rmi.server": "\nProvides classes and interfaces for supporting the server\n side of RMI.\n/\nProvides classes and interfaces for supporting the server\n side of RMI.\n", "javax.rmi.ssl": "\nProvides implementations of RMIClientSocketFactory\n and RMIServerSocketFactory over\n the Secure Sockets Layer (SSL) or Transport Layer Security (TLS) protocols.\n/\nProvides implementations of RMIClientSocketFactory\n and RMIServerSocketFactory over\n the Secure Sockets Layer (SSL) or Transport Layer Security (TLS) protocols.\n", "RMIClassLoaderSpi": "\nRMIClassLoaderSpi is the service provider interface for\n RMIClassLoader.\n/\nRMIClassLoaderSpi is the service provider interface for\n RMIClassLoader.\n/\nRMIClassLoaderSpi is the service provider interface for\n RMIClassLoader.\n", "Remote": "\nThe Remote interface serves to identify interfaces whose\n methods may be invoked from a non-local virtual machine.\n", "MarshalledObject<T>": "\nA MarshalledObject contains a byte stream with the serialized\n representation of an object given to its constructor.\n", "Naming": "\nThe Naming class provides methods for storing and obtaining\n references to remote objects in a remote object registry.\n", "RMISecurityManager": "Deprecated.\nUse SecurityManager instead.\n", "AccessException": "\nAn AccessException is thrown by certain methods of the\n java.rmi.Naming class (specifically bind,\n rebind, and unbind) and methods of the\n java.rmi.activation.ActivationSystem interface to\n indicate that the caller does not have permission to perform the action\n requested by the method call.\n", "ConnectIOException": "\nA ConnectIOException is thrown if an\n IOException occurs while making a connection\n to the remote host for a remote method call.\n", "MarshalException": "\nA MarshalException is thrown if a\n java.io.IOException occurs while marshalling the remote call\n header, arguments or return value for a remote method call.\n/\nIndicates an exceptional condition that occurred during the XML\n marshalling or unmarshalling process.\n", "NoSuchObjectException": "\nA NoSuchObjectException is thrown if an attempt is made to\n invoke a method on an object that no longer exists in the remote virtual\n machine.\n", "NotBoundException": "\nA NotBoundException is thrown if an attempt\n is made to lookup or unbind in the registry a name that has\n no associated binding.\n", "RemoteException": "\nA RemoteException is the common superclass for a number of\n communication-related exceptions that may occur during the execution of a\n remote method call.\n", "RMISecurityException": "Deprecated.\nUse SecurityException instead.\n", "ServerError": "\nA ServerError is thrown as a result of a remote method\n invocation when an Error is thrown while processing\n the invocation on the server, either while unmarshalling the arguments,\n executing the remote method itself, or marshalling the return value.\n", "ServerException": "\nA ServerException is thrown as a result of a remote method\n invocation when a RemoteException is thrown while processing\n the invocation on the server, either while unmarshalling the arguments or\n executing the remote method itself.\n", "ServerRuntimeException": "Deprecated.\nno replacement\n", "StubNotFoundException": "\nA StubNotFoundException is thrown if a valid stub class\n could not be found for a remote object when it is exported.\n", "UnexpectedException": "\nAn UnexpectedException is thrown if the client of a\n remote method call receives, as a result of the call, a checked\n exception that is not among the checked exception types declared in the\n throws clause of the method in the remote interface.\n", "UnmarshalException": "\nAn UnmarshalException can be thrown while unmarshalling the\n parameters or results of a remote method call if any of the following\n conditions occur:\n \n  if an exception occurs while unmarshalling the call header\n  if the protocol for the return value is invalid\n  if a java.io.IOException occurs unmarshalling\n parameters (on the server side) or the return value (on the client side).\n", "ActivationInstantiator": "\nAn ActivationInstantiator is responsible for creating\n instances of \"activatable\" objects.\n", "ActivationMonitor": "\nAn ActivationMonitor is specific to an\n ActivationGroup and is obtained when a group is\n reported active via a call to\n ActivationSystem.activeGroup (this is done\n internally).\n", "ActivationSystem": "\nThe ActivationSystem provides a means for registering\n groups and \"activatable\" objects to be activated within those groups.\n", "Activator": "\nThe Activator facilitates remote object activation.\n", "Activatable": "\nThe Activatable class provides support for remote\n objects that require persistent access over time and that\n can be activated by the system.\n", "ActivationDesc": "\nAn activation descriptor contains the information necessary to\n activate an object: \n  the object's group identifier,\n  the object's fully-qualified class name,\n  the object's code location (the location of the class), a codebase URL\n path,\n  the object's restart \"mode\", and,\n  a \"marshalled\" object that can contain object specific\n initialization data.\n", "ActivationGroup": "\nAn ActivationGroup is responsible for creating new\n instances of \"activatable\" objects in its group, informing its\n ActivationMonitor when either: its object's become\n active or inactive, or the group as a whole becomes inactive.\n", "ActivationGroup_Stub": "\nActivationGroup_Stub is a stub class\n for the subclasses of java.rmi.activation.ActivationGroup\n that are exported as a java.rmi.server.UnicastRemoteObject.\n", "ActivationGroupDesc": "\nAn activation group descriptor contains the information necessary to\n create/recreate an activation group in which to activate objects.\n", "ActivationGroupDesc.CommandEnvironment": "\nStartup options for ActivationGroup implementations.\n", "ActivationGroupID": "\nThe identifier for a registered activation group serves several\n purposes: \n identifies the group uniquely within the activation system, and\n contains a reference to the group's activation system so that the\n group can contact its activation system when necessary.\n", "ActivationID": "\nActivation makes use of special identifiers to denote remote\n objects that can be activated over time.\n", "ActivateFailedException": "\nThis exception is thrown by the RMI runtime when activation\n fails during a remote call to an activatable object.\n", "ActivationException": "\nGeneral exception used by the activation interfaces.\n", "UnknownGroupException": "\nAn UnknownGroupException is thrown by methods of classes and\n interfaces in the java.rmi.activation package when the\n ActivationGroupID parameter to the method is determined to be\n invalid, i.e., not known by the ActivationSystem.\n", "UnknownObjectException": "\nAn UnknownObjectException is thrown by methods of classes and\n interfaces in the java.rmi.activation package when the\n ActivationID parameter to the method is determined to be\n invalid.\n", "DGC": "\nThe DGC abstraction is used for the server side of the distributed\n garbage collection algorithm.\n", "Lease": "\nA lease contains a unique VM identifier and a lease duration.\n", "VMID": "\nA VMID is a identifier that is unique across all Java virtual\n machines.\n", "Registry": "\nRegistry is a remote interface to a simple remote\n object registry that provides methods for storing and retrieving\n remote object references bound with arbitrary string names.\n", "RegistryHandler": "Deprecated.\nno replacement\n", "LocateRegistry": "\nLocateRegistry is used to obtain a reference to a bootstrap\n remote object registry on a particular host (including the local host), or\n to create a remote object registry that accepts calls on a specific port.\n", "LoaderHandler": "Deprecated.\nno replacement\n", "RemoteCall": "Deprecated.\nno replacement.\n", "RemoteRef": "\nRemoteRef represents the handle for a remote object.\n", "RMIClientSocketFactory": "\nAn RMIClientSocketFactory instance is used by the RMI runtime\n in order to obtain client sockets for RMI calls.\n", "RMIFailureHandler": "\nAn RMIFailureHandler can be registered via the\n RMISocketFactory.setFailureHandler call.\n", "RMIServerSocketFactory": "\nAn RMIServerSocketFactory instance is used by the RMI runtime\n in order to obtain server sockets for RMI calls.\n", "ServerRef": "Deprecated.\nNo replacement.\n", "Skeleton": "Deprecated.\nno replacement.\n", "Unreferenced": "\nA remote object implementation should implement the\n Unreferenced interface to receive notification when there are\n no more clients that reference that remote object.\n", "LogStream": "Deprecated.\nno replacement\n", "ObjID": "\nAn ObjID is used to identify a remote object exported\n to an RMI runtime.\n", "Operation": "Deprecated.\nno replacement\n/\nAn object that describes a dynamic operation.\n", "RemoteObject": "\nThe RemoteObject class implements the\n java.lang.Object behavior for remote objects.\n", "RemoteObjectInvocationHandler": "\nAn implementation of the InvocationHandler interface for\n use with Java Remote Method Invocation (Java RMI).\n", "RemoteServer": "\nThe RemoteServer class is the common superclass to server\n implementations and provides the framework to support a wide range\n of remote reference semantics.\n", "RemoteStub": "Deprecated.\nStatically generated stubs are deprecated, since\n stubs are generated dynamically.\n", "RMIClassLoader": "\nRMIClassLoader comprises static methods to support\n dynamic class loading with RMI.\n", "RMISocketFactory": "\nAn RMISocketFactory instance is used by the RMI runtime\n in order to obtain client and server sockets for RMI calls.\n", "UID": "\nA UID represents an identifier that is unique over time\n with respect to the host it is generated on, or one of 216\n \"well-known\" identifiers.\n", "UnicastRemoteObject": "\nUsed for exporting a remote object with JRMP and obtaining a stub\n that communicates to the remote object.\n", "ExportException": "\nAn ExportException is a RemoteException\n thrown if an attempt to export a remote object fails.\n", "ServerCloneException": "\nA ServerCloneException is thrown if a remote exception occurs\n during the cloning of a UnicastRemoteObject.\n", "ServerNotActiveException": "\nAn ServerNotActiveException is an Exception\n thrown during a call to RemoteServer.getClientHost if\n the getClientHost method is called outside of servicing a remote\n method call.\n", "SkeletonMismatchException": "Deprecated.\nno replacement.\n", "SkeletonNotFoundException": "Deprecated.\nno replacement.\n", "SocketSecurityException": "Deprecated.\nThis class is obsolete.\n", "SslRMIClientSocketFactory": "\nAn SslRMIClientSocketFactory instance is used by the RMI\n runtime in order to obtain client sockets for RMI calls via SSL.\n", "SslRMIServerSocketFactory": "\nAn SslRMIServerSocketFactory instance is used by the RMI\n runtime in order to obtain server sockets for RMI calls via SSL.\n", "javax.script": "\nThe scripting API consists of interfaces and classes that define\nJava\u2122 Scripting Engines and provides\na framework for their use in Java applications.\n/\nThe scripting API consists of interfaces and classes that define\nJava\u2122 Scripting Engines and provides\na framework for their use in Java applications.\n", "ScriptEngineFactory": "\nScriptEngineFactory is used to describe and instantiate\n ScriptEngines.\n/\nScriptEngineFactory is used to describe and instantiate\n ScriptEngines.\n/\nScriptEngineFactory is used to describe and instantiate\n ScriptEngines.\n/\u00a0", "Bindings": "\nA mapping of key/value pairs, all of whose keys are\n Strings.\n", "Compilable": "\nThe optional interface implemented by ScriptEngines whose methods compile scripts\n to a form that can be executed repeatedly without recompilation.\n", "Invocable": "\nThe optional interface implemented by ScriptEngines whose methods allow the invocation of\n procedures in scripts that have previously been executed.\n", "ScriptContext": "\nThe interface whose implementing classes are used to connect Script Engines\n with objects, such as scoped Bindings, in hosting applications.\n", "ScriptEngine": "\nScriptEngine is the fundamental interface whose methods must be\n fully functional in every implementation of this specification.\n", "AbstractScriptEngine": "\nProvides a standard implementation for several of the variants of the eval\n method.\n", "CompiledScript": "\nExtended by classes that store results of compilations.\n", "ScriptEngineManager": "\nThe ScriptEngineManager implements a discovery and instantiation\n mechanism for ScriptEngine classes and also maintains a\n collection of key/value pairs storing state shared by all engines created\n by the Manager.\n", "SimpleBindings": "\nA simple implementation of Bindings backed by\n a HashMap or some other specified Map.\n", "SimpleScriptContext": "\nSimple implementation of ScriptContext.\n", "ScriptException": "\nThe generic Exception class for the Scripting APIs.\n", "javax.security.auth.kerberos": "\nThis package contains utility classes related to the Kerberos network\n authentication protocol.\n/\nThis package contains utility classes related to the Kerberos network\n authentication protocol.\n", "org.ietf.jgss": "\nThis package presents a framework that allows application developers to\n make use of security services like authentication, data integrity and\n data confidentiality from a variety of underlying security mechanisms\n like Kerberos, using a unified API.\n/\nThis package presents a framework that allows application developers to\n make use of security services like authentication, data integrity and\n data confidentiality from a variety of underlying security mechanisms\n like Kerberos, using a unified API.\n", "javax.security.sasl": "\nContains class and interfaces for supporting SASL.\n/\nContains class and interfaces for supporting SASL.\n", "javax.sql": "\nProvides the API for server side data source access and processing from\n the Java\u2122 programming language.\n/\nProvides the API for server side data source access and processing from\n the Java\u2122 programming language.\n", "Driver": "\nThe interface that every driver class must implement.\n/\nThe interface that every driver class must implement.\n/\nThe interface that every driver class must implement.\n", "javax.sql.rowset": "\nStandard interfaces and base classes for JDBC RowSet\n implementations.\n/\nStandard interfaces and base classes for JDBC RowSet\n implementations.\n", "javax.sql.rowset.serial": "\nProvides utility classes to allow serializable mappings between SQL types\n and data types in the Java programming language.\n/\nProvides utility classes to allow serializable mappings between SQL types\n and data types in the Java programming language.\n", "javax.sql.rowset.spi": "\nThe standard classes and interfaces that a third party vendor has to\n use in its implementation of a synchronization provider.\n/\nThe standard classes and interfaces that a third party vendor has to\n use in its implementation of a synchronization provider.\n", "RowSetFactory": "\nAn interface that defines the implementation of a factory that is used\n to obtain different types of RowSet implementations.\n/\nAn interface that defines the implementation of a factory that is used\n to obtain different types of RowSet implementations.\n/\nAn interface that defines the implementation of a factory that is used\n to obtain different types of RowSet implementations.\n", "javax.transaction.xa": "\nProvides the API that defines the contract between the transaction manager\n and the resource manager, which allows the transaction manager to enlist\n and delist resource objects (supplied by the resource manager driver) in\n JTA transactions.\n/\nProvides the API that defines the contract between the transaction manager\n and the resource manager, which allows the transaction manager to enlist\n and delist resource objects (supplied by the resource manager driver) in\n JTA transactions.\n", "javax.xml": "\nDefines constants for XML processing.\n/\nDefines constants for XML processing.\n", "javax.xml.catalog": "\nProvides the classes for implementing\n \n     XML Catalogs OASIS Standard V1.1, 7 October 2005.\n/\nProvides the classes for implementing\n \n     XML Catalogs OASIS Standard V1.1, 7 October 2005.\n", "javax.xml.datatype": "\n\n Defines XML/Java Type Mappings.\n/\n\n Defines XML/Java Type Mappings.\n", "javax.xml.namespace": "\n\n Defines XML Namespace processing.\n/\n\n Defines XML Namespace processing.\n", "javax.xml.parsers": "\n\n Provides the classes for processing XML documents with a SAX (Simple API for XML)\n parser or a DOM (Document Object Model) Document builder.\n/\n\n Provides the classes for processing XML documents with a SAX (Simple API for XML)\n parser or a DOM (Document Object Model) Document builder.\n", "javax.xml.stream": "\n\n Defines interfaces and classes for the Streaming API for XML (StAX).\n/\n\n Defines interfaces and classes for the Streaming API for XML (StAX).\n", "javax.xml.stream.events": "\nDefines event interfaces for the Streaming API for XML (StAX).\n/\nDefines event interfaces for the Streaming API for XML (StAX).\n", "javax.xml.stream.util": "\nProvides utility classes for the Streaming API for XML (StAX).\n/\nProvides utility classes for the Streaming API for XML (StAX).\n", "javax.xml.transform": "\nDefines the generic APIs for processing transformation instructions,\n and performing a transformation from source to result.\n/\nDefines the generic APIs for processing transformation instructions,\n and performing a transformation from source to result.\n", "javax.xml.transform.dom": "\nProvides DOM specific transformation classes.\n/\nProvides DOM specific transformation classes.\n", "javax.xml.transform.sax": "\nProvides SAX specific transformation classes.\n/\nProvides SAX specific transformation classes.\n", "javax.xml.transform.stax": "\nProvides StAX specific transformation classes.\n/\nProvides StAX specific transformation classes.\n", "javax.xml.transform.stream": "\nProvides stream and URI specific transformation classes.\n/\nProvides stream and URI specific transformation classes.\n", "javax.xml.validation": "\n\n Provides an API for validation of XML documents.\n/\n\n Provides an API for validation of XML documents.\n", "javax.xml.xpath": "\nProvides an object-model neutral API for the\n evaluation of XPath expressions and access to the evaluation\n environment.\n/\nProvides an object-model neutral API for the\n evaluation of XPath expressions and access to the evaluation\n environment.\n", "org.w3c.dom": "\nProvides the interfaces for the Document Object Model (DOM).\n/\nProvides the interfaces for the Document Object Model (DOM).\n", "org.w3c.dom.bootstrap": "\nProvides a factory for obtaining instances of DOMImplementation.\n/\nProvides a factory for obtaining instances of DOMImplementation.\n", "org.w3c.dom.events": "\n\n Provides interfaces for DOM Level 2 Events.\n/\n\n Provides interfaces for DOM Level 2 Events.\n", "org.w3c.dom.ls": "\n\n Provides interfaces for DOM Level 3 Load and Save.\n/\n\n Provides interfaces for DOM Level 3 Load and Save.\n", "org.w3c.dom.ranges": "\n\n Provides interfaces for DOM Level 2 Range.\n/\n\n Provides interfaces for DOM Level 2 Range.\n", "org.w3c.dom.traversal": "\n\n Provides interfaces for DOM Level 2 Traversal.\n/\n\n Provides interfaces for DOM Level 2 Traversal.\n", "org.w3c.dom.views": "\nProvides interfaces for DOM Level 2 Views.\n/\nProvides interfaces for DOM Level 2 Views.\n", "org.xml.sax": "\nProvides the core SAX APIs.\n/\nProvides the core SAX APIs.\n", "org.xml.sax.ext": "\nProvides interfaces to SAX2 facilities that\n conformant SAX drivers won't necessarily support.\n/\nProvides interfaces to SAX2 facilities that\n conformant SAX drivers won't necessarily support.\n", "org.xml.sax.helpers": "\nProvides helper classes, including\n support for bootstrapping SAX-based applications.\n/\nProvides helper classes, including\n support for bootstrapping SAX-based applications.\n", "DatatypeFactory": "\nFactory that creates new javax.xml.datatype Objects that map XML to/from Java Objects.\n/\nFactory that creates new javax.xml.datatype Objects that map XML to/from Java Objects.\n/\nFactory that creates new javax.xml.datatype Objects that map XML to/from Java Objects.\n", "DocumentBuilderFactory": "\nDefines a factory API that enables applications to obtain a\n parser that produces DOM object trees from XML documents.\n/\nDefines a factory API that enables applications to obtain a\n parser that produces DOM object trees from XML documents.\n/\nDefines a factory API that enables applications to obtain a\n parser that produces DOM object trees from XML documents.\n", "SAXParserFactory": "\nDefines a factory API that enables applications to configure and\n obtain a SAX based parser to parse XML documents.\n/\nDefines a factory API that enables applications to configure and\n obtain a SAX based parser to parse XML documents.\n/\nDefines a factory API that enables applications to configure and\n obtain a SAX based parser to parse XML documents.\n", "SchemaFactory": "\nFactory that creates Schema objects.\n/\nFactory that creates Schema objects.\n/\nFactory that creates Schema objects.\n", "TransformerFactory": "\nA TransformerFactory instance can be used to create\n Transformer and\n Templates objects.\n/\nA TransformerFactory instance can be used to create\n Transformer and\n Templates objects.\n/\nA TransformerFactory instance can be used to create\n Transformer and\n Templates objects.\n", "XMLEventFactory": "\nThis interface defines a utility class for creating instances of\n XMLEvents\n/\nThis interface defines a utility class for creating instances of\n XMLEvents\n/\nThis interface defines a utility class for creating instances of\n XMLEvents\n", "XMLInputFactory": "\nDefines an abstract implementation of a factory for getting streams.\n/\nDefines an abstract implementation of a factory for getting streams.\n/\nDefines an abstract implementation of a factory for getting streams.\n", "XMLOutputFactory": "\nDefines an abstract implementation of a factory for\n getting XMLEventWriters and XMLStreamWriters.\n/\nDefines an abstract implementation of a factory for\n getting XMLEventWriters and XMLStreamWriters.\n/\nDefines an abstract implementation of a factory for\n getting XMLEventWriters and XMLStreamWriters.\n", "XMLReader": "\nInterface for reading an XML document using callbacks.\n/\nInterface for reading an XML document using callbacks.\n/\nInterface for reading an XML document using callbacks.\n", "XPathFactory": "\nAn XPathFactory instance can be used to create\n XPath objects.\n/\nAn XPathFactory instance can be used to create\n XPath objects.\n/\nAn XPathFactory instance can be used to create\n XPath objects.\n", "javax.xml.crypto": "\nCommon classes for XML cryptography.\n/\nCommon classes for XML cryptography.\n", "javax.xml.crypto.dom": "\nDOM-specific classes for the javax.xml.crypto package.\n/\nDOM-specific classes for the javax.xml.crypto package.\n", "javax.xml.crypto.dsig": "\nClasses for generating and validating XML digital\n signatures.\n/\nClasses for generating and validating XML digital\n signatures.\n", "javax.xml.crypto.dsig.dom": "\nDOM-specific classes for the javax.xml.crypto.dsig package.\n/\nDOM-specific classes for the javax.xml.crypto.dsig package.\n", "javax.xml.crypto.dsig.keyinfo": "\nClasses for parsing and processing KeyInfo elements and structures.\n/\nClasses for parsing and processing KeyInfo elements and structures.\n", "javax.xml.crypto.dsig.spec": "\nParameter classes for XML digital signatures.\n/\nParameter classes for XML digital signatures.\n", "DelegationPermission": "\nThis class is used to restrict the usage of the Kerberos\n delegation model, ie: forwardable and proxiable tickets.\n", "EncryptionKey": "\nThis class encapsulates an EncryptionKey used in Kerberos.\n", "KerberosCredMessage": "\nThis class encapsulates a Kerberos 5 KRB_CRED message which can be used to\n send Kerberos credentials from one principal to another.\n", "KerberosKey": "\nThis class encapsulates a long term secret key for a Kerberos\n principal.\n", "KerberosPrincipal": "\nThis class encapsulates a Kerberos principal.\n", "KerberosTicket": "\nThis class encapsulates a Kerberos ticket and associated\n information as viewed from the client's point of view.\n", "KeyTab": "\nThis class encapsulates a keytab file.\n", "ServicePermission": "\nThis class is used to protect Kerberos services and the\n credentials necessary to access those services.\n", "GSSContext": "\nThis interface encapsulates the GSS-API security context and provides\n the security services that are available over the context.\n", "GSSCredential": "\nThis interface encapsulates the GSS-API credentials for an entity.\n", "GSSName": "\nThis interface encapsulates a single GSS-API principal entity.\n", "ChannelBinding": "\nThis class encapsulates the concept of caller-provided channel\n binding information.\n", "GSSManager": "\nThis class serves as a factory for other important\n GSS-API classes and also provides information about the mechanisms that\n are supported.\n", "MessageProp": "\nThis is a utility class used within the per-message GSSContext\n methods to convey per-message properties.\n", "Oid": "\nThis class represents Universal Object Identifiers (Oids) and their\n associated operations.\n", "GSSException": "\nThis exception is thrown whenever a GSS-API error occurs, including\n any mechanism specific error.\n", "SaslClient": "\nPerforms SASL authentication as a client.\n", "SaslClientFactory": "\nAn interface for creating instances of SaslClient.\n", "SaslServer": "\nPerforms SASL authentication as a server.\n", "SaslServerFactory": "\nAn interface for creating instances of SaslServer.\n", "AuthorizeCallback": "\nThis callback is used by SaslServer to determine whether\n one entity (identified by an authenticated authentication id)\n can act on\n behalf of another entity (identified by an authorization id).\n", "RealmCallback": "\nThis callback is used by SaslClient and SaslServer\n to retrieve realm information.\n", "RealmChoiceCallback": "\nThis callback is used by SaslClient and SaslServer\n to obtain a realm given a list of realm choices.\n", "Sasl": "\nA static class for creating SASL clients and servers.\n", "SaslException": "\nThis class represents an error that has occurred when using SASL.\n", "javax.smartcardio": "\nJava\u2122 Smart Card I/O API.\n", "ATR": "\nA Smart Card's answer-to-reset bytes.\n", "Card": "\nA Smart Card with which a connection has been established.\n", "CardChannel": "\nA logical channel connection to a Smart Card.\n", "CardPermission": "\nA permission for Smart Card operations.\n", "CardTerminal": "\nA Smart Card terminal, sometimes referred to as a Smart Card Reader.\n", "CardTerminals": "\nThe set of terminals supported by a TerminalFactory.\n", "CommandAPDU": "\nA command APDU following the structure defined in ISO/IEC 7816-4.\n", "ResponseAPDU": "\nA response APDU as defined in ISO/IEC 7816-4.\n", "TerminalFactory": "\nA factory for CardTerminal objects.\n", "TerminalFactorySpi": "\nThe TerminalFactorySpi class defines the service provider interface.\n", "CardTerminals.State": "\nEnumeration of attributes of a CardTerminal.\n", "CardException": "\nException for errors that occur during communication with the\n Smart Card stack or the card itself.\n", "CardNotPresentException": "\nException thrown when an application tries to establish a connection with a\n terminal that has no card present.\n", "Blob": "\nThe representation (mapping) in\n the Java\u2122 programming language of an SQL\n BLOB value.\n", "CallableStatement": "\nThe interface used to execute SQL stored procedures.\n", "Clob": "\nThe mapping in the Java\u2122 programming language\n for the SQL CLOB type.\n", "Connection": "\nA connection (session) with a specific\n database.\n/\nA connection between a debugger and a target VM which it debugs.\n", "ConnectionBuilder": "\nA builder created from a DataSource object,\n used to establish a connection to the database that the\n data source object represents.\n", "DatabaseMetaData": "\nComprehensive information about the database as a whole.\n", "DriverAction": "\nAn interface that must be implemented when a Driver wants to be\n notified by DriverManager.\n", "NClob": "\nThe mapping in the Java\u2122 programming language\n for the SQL NCLOB type.\n", "ParameterMetaData": "\nAn object that can be used to get information about the types\n and properties for each parameter marker in a\n PreparedStatement object.\n", "PreparedStatement": "\nAn object that represents a precompiled SQL statement.\n", "Ref": "\nThe mapping in the Java programming language of an SQL REF\n value, which is a reference to an SQL structured type value in the database.\n", "ResultSet": "\nA table of data representing a database result set, which\n is usually generated by executing a statement that queries the database.\n", "ResultSetMetaData": "\nAn object that can be used to get information about the types\n and properties of the columns in a ResultSet object.\n", "RowId": "\nThe representation (mapping) in the Java programming language of an SQL ROWID\n value.\n", "Savepoint": "\nThe representation of a savepoint, which is a point within\n the current transaction that can be referenced from the\n Connection.rollback method.\n", "ShardingKey": "\nInterface used to indicate that this object represents a Sharding Key.\n", "ShardingKeyBuilder": "\nA builder created from a DataSource  or XADataSource object,\n used to create a ShardingKey with sub-keys of supported data types.\n", "SQLData": "\nThe interface used for the custom mapping of an SQL user-defined type (UDT) to\n a class in the Java programming language.\n", "SQLInput": "\nAn input stream that contains a stream of values representing an\n instance of an SQL structured type or an SQL distinct type.\n", "SQLOutput": "\nThe output stream for writing the attributes of a user-defined\n type back to the database.\n", "SQLType": "\nAn object that is used to identify a generic SQL type, called a JDBC type or\n a vendor specific data type.\n", "SQLXML": "\nThe mapping in the JavaTM programming language for the SQL XML type.\n", "Struct": "\nThe standard mapping in the Java programming language for an SQL\n structured type.\n", "Wrapper": "\nInterface for JDBC classes which provide the ability to retrieve the delegate instance when the instance\n in question is in fact a proxy class.\n", "DriverManager": "\nThe basic service for managing a set of JDBC drivers.\n", "DriverPropertyInfo": "\nDriver properties for making a connection.\n", "SQLPermission": "\nThe permission for which the SecurityManager will check\n when code that is running an application with a\n SecurityManager enabled, calls the\n DriverManager.deregisterDriver method,\n DriverManager.setLogWriter method,\n DriverManager.setLogStream (deprecated) method,\n SyncFactory.setJNDIContext method,\n SyncFactory.setLogger method,\n Connection.setNetworkTimeout method,\n or the Connection.abort method.\n", "Time": "\nA thin wrapper around the java.util.Date class that allows the JDBC\n API to identify this as an SQL TIME value.\n", "ClientInfoStatus": "\nEnumeration for status of the reason that a property could not be set\n via a call to Connection.setClientInfo\n", "JDBCType": "\nDefines the constants that are used to identify generic\n SQL types, called JDBC types.\n", "PseudoColumnUsage": "\nEnumeration for pseudo/hidden column usage.\n", "RowIdLifetime": "\nEnumeration for RowId life-time values.\n", "BatchUpdateException": "\nThe subclass of SQLException thrown when an error\n occurs during a batch update operation.\n", "DataTruncation": "\nAn exception  thrown as a DataTruncation exception\n (on writes) or reported as a\n DataTruncation warning (on reads)\n  when a data values is unexpectedly truncated for reasons other than its having\n  exceeded MaxFieldSize.\n", "SQLClientInfoException": "\nThe subclass of SQLException is thrown when one or more client info properties\n could not be set on a Connection.\n", "SQLDataException": "\nThe subclass of SQLException thrown when the SQLState class value\n is '22', or under vendor-specified conditions.\n", "SQLException": "\nAn exception that provides information on a database access\n error or other errors.\n", "SQLFeatureNotSupportedException": "\nThe subclass of SQLException thrown when the SQLState class value is '0A'\n ( the value is 'zero' A).\n", "SQLIntegrityConstraintViolationException": "\nThe subclass of SQLException thrown when the SQLState class value\n is '23', or under vendor-specified conditions.\n", "SQLInvalidAuthorizationSpecException": "\nThe subclass of SQLException thrown when the SQLState class value\n is '28', or under vendor-specified conditions.\n", "SQLNonTransientConnectionException": "\nThe subclass of SQLException thrown for the SQLState\n class value '08', or under vendor-specified conditions.\n", "SQLNonTransientException": "\nThe subclass of SQLException thrown when an instance where a retry\n of the same operation would fail unless the cause of the SQLException\n is corrected.\n", "SQLRecoverableException": "\nThe subclass of SQLException thrown in situations where a\n previously failed operation might be able to succeed if the application performs\n  some recovery steps and retries the entire transaction or in the case of a\n distributed transaction, the transaction branch.\n", "SQLSyntaxErrorException": "\nThe subclass of SQLException thrown when the SQLState class value\n is '42', or under vendor-specified conditions.\n", "SQLTimeoutException": "\nThe subclass of SQLException thrown when the timeout specified by\n Statement.setQueryTimeout, DriverManager.setLoginTimeout,\n DataSource.setLoginTimeout,XADataSource.setLoginTimeout\n has expired.\n", "SQLTransactionRollbackException": "\nThe subclass of SQLException thrown when the SQLState class value\n is '40', or under vendor-specified conditions.\n", "SQLTransientConnectionException": "\nThe subclass of SQLException for the SQLState class\n value '08', or under vendor-specified conditions.\n", "SQLTransientException": "\nThe subclass of SQLException is thrown in situations where a\n previously failed operation might be able to succeed when the operation is\n retried without any intervention by application-level functionality.\n", "SQLWarning": "\nAn exception that provides information on  database access\n warnings.\n", "CommonDataSource": "\nInterface that defines the methods which are common between DataSource,\n XADataSource and ConnectionPoolDataSource.\n", "ConnectionEventListener": "\n\n An object that registers to be notified of events generated by a\n PooledConnection object.\n", "ConnectionPoolDataSource": "\nA factory for PooledConnection\n objects.\n", "DataSource": "\nA factory for connections to the physical data source that this\n DataSource object represents.\n", "PooledConnection": "\nAn object that provides hooks for connection pool management.\n", "PooledConnectionBuilder": "\nA builder created from a ConnectionPoolDataSource object,\n used to establish a connection to the database that the\n data source object represents.\n", "RowSet": "\nThe interface that adds support to the JDBC API for the\n JavaBeans\u2122 component model.\n", "RowSetInternal": "\nThe interface that a RowSet object implements in order to\n present itself to a RowSetReader or RowSetWriter\n object.\n", "RowSetListener": "\nAn interface that must be implemented by a\n component that wants to be notified when a significant\n event happens in the life of a RowSet object.\n", "RowSetMetaData": "\nAn object that contains information about the columns in a\n RowSet object.\n", "RowSetReader": "\nThe facility that a disconnected RowSet object calls on\n to populate itself with rows of data.\n", "RowSetWriter": "\nAn object that implements the RowSetWriter interface,\n called a writer.\n", "StatementEventListener": "\nAn object that registers to be notified of events that occur on PreparedStatements\n that are in the Statement pool.\n", "XAConnection": "\nAn object that provides support for distributed transactions.\n", "XAConnectionBuilder": "\nA builder created from a XADataSource object,\n used to establish a connection to the database that the\n data source object represents.\n", "XADataSource": "\nA factory for XAConnection objects that is used internally.\n", "ConnectionEvent": "\nAn Event object that provides information about the\n source of a connection-related event.\n", "RowSetEvent": "\nAn Event object generated when an event occurs to a\n RowSet object.\n", "StatementEvent": "\nA StatementEvent is sent to all StatementEventListeners which were\n registered with a PooledConnection.\n", "Event notification": "Provides standard JavaBeans event notifications\n to registered event listeners. Refer to the documentation of javax.sql.RowSetEvent\n interface (available in the JDBC 3.0 specification) for\n more details on how  to register and handle standard RowSet events generated\n by  compliant implementations.", "Setters for a RowSet object's command": "Provides a complete set of setter methods\n                for setting RowSet command parameters.", "Streams": "Provides fields for storing of stream instances\n in addition to providing a set of constants for stream type designation.", "CachedRowSet": "\nThe interface that all standard implementations of\n CachedRowSet must implement.\n", "FilteredRowSet": "\nThe standard interface that all standard implementations of\n FilteredRowSet must implement.\n", "JdbcRowSet": "\nThe standard interface that all standard implementations of\n JdbcRowSet must implement.\n", "Joinable": "\n1.0 Background\n", "JoinRowSet": "\nThe JoinRowSet interface provides a mechanism for combining related\n data from different RowSet objects into one JoinRowSet\n object, which represents an SQL JOIN.\n", "Predicate": "\nThe standard interface that provides the framework for all\n FilteredRowSet objects to describe their filters.\n", "WebRowSet": "\nThe standard interface that all implementations of a WebRowSet\n must implement.\n", "BaseRowSet": "\nAn abstract class providing a RowSet object with its basic functionality.\n", "RowSetMetaDataImpl": "\nProvides implementations for the methods that set and get\n metadata information about a RowSet object's columns.\n", "RowSetProvider": "\nA factory API that enables applications to obtain a\n RowSetFactory implementation  that can be used to create different\n types of RowSet implementations.\n", "RowSetWarning": "\nAn extension of SQLException that provides information\n about database warnings set on RowSet objects.\n", "SerialArray": "\nA serialized version of an Array\n object, which is the mapping in the Java programming language of an SQL\n ARRAY value.\n", "SerialBlob": "\nA serialized mapping in the Java programming language of an SQL\n BLOB value.\n", "SerialClob": "\nA serialized mapping in the Java programming language of an SQL\n CLOB value.\n", "SerialDatalink": "\nA serialized mapping in the Java programming language of an SQL\n DATALINK value.\n", "SerialJavaObject": "\nA serializable mapping in the Java programming language of an SQL\n JAVA_OBJECT value.\n", "SerialRef": "\nA serialized mapping of a Ref object, which is the mapping in the\n Java programming language of an SQL REF value.\n", "SerialStruct": "\nA serialized mapping in the Java programming language of an SQL\n structured type.\n", "SQLInputImpl": "\nAn input stream used for custom mapping user-defined types (UDTs).\n", "SQLOutputImpl": "\nThe output stream for writing the attributes of a\n custom-mapped user-defined type (UDT) back to the database.\n", "SerialException": "\nIndicates and an error with the serialization or de-serialization of\n SQL types such as BLOB, CLOB, STRUCT or ARRAY in\n addition to SQL types such as DATALINK and JAVAOBJECT\n", "SyncResolver": "\nDefines a framework that allows applications to use a manual decision tree\n to decide what should be done when a synchronization conflict occurs.\n", "TransactionalWriter": "\nA specialized interface that facilitates an extension of the standard\n SyncProvider abstract class so that it has finer grained\n transaction control.\n", "XmlReader": "\nA specialized interface that facilitates an extension of the\n SyncProvider abstract class for XML orientated\n synchronization providers.\n", "XmlWriter": "\nA specialized interface that facilitates an extension of the\n SyncProvider abstract class for XML orientated\n synchronization providers.\n", "SyncFactory": "\nThe Service Provider Interface (SPI) mechanism that generates SyncProvider\n instances to be used by disconnected RowSet objects.\n", "SyncProvider": "\nThe synchronization mechanism that provides reader/writer capabilities for\n disconnected RowSet objects.\n", "SyncFactoryException": "\nIndicates an error with SyncFactory mechanism.\n", "SyncProviderException": "\nIndicates an error with the SyncProvider mechanism.\n", "XAResource": "\nThe XAResource interface is a Java mapping of the industry standard\n XA interface based on the X/Open CAE Specification (Distributed\n Transaction Processing: The XA Specification).\n", "Xid": "\nThe Xid interface is a Java mapping of the X/Open transaction identifier\n XID structure.\n", "XAException": "\nThe XAException is thrown by the Resource Manager (RM) to inform the\n Transaction Manager of an error encountered by the involved transaction.\n", "XMLConstants": "\nUtility class to contain basic XML values as constants.\n", "Catalog": "\nThe Catalog class represents an entity Catalog as defined by\n \n XML Catalogs, OASIS Standard V1.1, 7 October 2005.\n", "CatalogResolver": "\nA Catalog Resolver that implements SAX EntityResolver,\n StAX XMLResolver,\n DOM LS LSResourceResolver used by Schema Validation, and\n Transform URIResolver, and resolves\n external references using catalogs.\n", "CatalogFeatures": "\nThe CatalogFeatures holds a collection of features and properties.\n", "CatalogFeatures.Builder": "\nThe Builder class for building the CatalogFeatures object.\n", "CatalogManager": "\nThe Catalog Manager manages the creation of XML Catalogs and Catalog Resolvers.\n", "CatalogFeatures.Feature": "\nA Feature type as defined in the\n Catalog Features table.\n", "CatalogException": "\nThe exception class handles errors that may happen while processing or using\n a catalog.\n", "xs:date": "XMLGregorianCalendar", "xs:dateTime": "XMLGregorianCalendar", "xs:duration": "Duration", "xs:gDay": "XMLGregorianCalendar", "xs:gMonth ": "XMLGregorianCalendar", "xs:gMonthDay": "XMLGregorianCalendar", "xs:gYear": "XMLGregorianCalendar", "xs:gYearMonth": "XMLGregorianCalendar", "xs:time": "XMLGregorianCalendar", "xdt:dayTimeDuration": "Duration", "xdt:yearMonthDuration": "Duration", "DatatypeConstants": "\nUtility class to contain basic Datatype values as constants.\n", "DatatypeConstants.Field": "\nType-safe enum class that represents six fields\n of the Duration class.\n", "XMLGregorianCalendar": "\nRepresentation for W3C XML Schema 1.0 date/time datatypes.\n", "DatatypeConfigurationException": "\nIndicates a serious configuration error.\n", "NamespaceContext": "\nInterface for read only XML Namespace context processing.\n", "QName": "\nQName represents a qualified name\n as defined in the XML specifications: XML Schema Part2:\n Datatypes specification, Namespaces\n in XML.\n", "DocumentBuilder": "\nDefines the API to obtain DOM Document instances from an XML\n document.\n", "SAXParser": "\nDefines the API that wraps an XMLReader\n implementation class.\n", "ParserConfigurationException": "\nIndicates a serious configuration error.\n", "FactoryConfigurationError": "\nThrown when a problem with configuration with the Parser Factories\n exists.\n/\nAn error class for reporting factory configuration errors.\n", "EventFilter": "\nThis interface declares a simple filter interface that one can\n create to filter XMLEventReaders\n", "Location": "\nProvides information on the location of an event.\n/\nA point within the executing code of the target VM.\n", "StreamFilter": "\nThis interface declares a simple filter interface that one can\n create to filter XMLStreamReaders\n", "XMLEventReader": "\nThis is the top level interface for parsing XML Events.\n", "XMLEventWriter": "\nThis is the top level interface for writing XML documents.\n", "XMLReporter": "\nThis interface is used to report non-fatal errors.\n", "XMLResolver": "\nThis interface is used to resolve resources during an XML parse.\n", "XMLStreamConstants": "\nThis interface declares the constants used in this API.\n", "XMLStreamReader": "\nThe XMLStreamReader interface allows forward, read-only access to XML.\n", "XMLStreamWriter": "\nThe XMLStreamWriter interface specifies how to write XML.\n", "XMLStreamException": "\nThe base exception for unexpected processing errors.\n", "Characters": "\nThis describes the interface to Characters events.\n", "Comment": "\nAn interface for comment events\n/\nThis interface inherits from CharacterData and represents the\n content of a comment, i.e., all the characters between the starting\n '<!--' and ending '-->'.\n", "EndDocument": "\nA marker interface for the end of the document\n", "EndElement": "\nAn interface for the end element event.\n", "EntityDeclaration": "\nAn interface for handling Entity Declarations\n\n This interface is used to record and report unparsed entity declarations.\n", "EntityReference": "\nAn interface for handling Entity events.\n/\nEntityReference nodes may be used to represent an entity\n reference in the tree.\n", "Namespace": "\nAn interface that contains information about a namespace.\n/\nAn object that describes a namespace that is the target of a dynamic operation\n on an object.\n", "NotationDeclaration": "\nAn interface for handling Notation Declarations\n\n Receive notification of a notation declaration event.\n", "ProcessingInstruction": "\nAn interface that describes the data found in processing instructions\n/\nThe ProcessingInstruction interface represents a \"processing\n instruction\", used in XML as a way to keep processor-specific information\n in the text of the document.\n", "StartDocument": "\nAn interface for the start document event\n", "StartElement": "\nThe StartElement interface provides access to information about\n start elements.\n", "XMLEvent": "\nThis is the base event interface for handling markup events.\n", "XMLEventAllocator": "\nThis interface defines a class that allows a user to register\n a way to allocate events given an XMLStreamReader.\n", "XMLEventConsumer": "\nThis interface defines an event consumer interface.\n", "EventReaderDelegate": "\nThis is the base class for deriving an XMLEventReader\n filter.\n", "StreamReaderDelegate": "\nThis is the base class for deriving an XMLStreamReader filter\n\n This class is designed to sit between an XMLStreamReader and an\n application's XMLStreamReader.\n", "ErrorListener": "\nTo provide customized error handling, implement this interface and\n use the setErrorListener method to register an instance of the\n implementation with the Transformer.\n", "Result": "\nAn object that implements this interface contains the information\n needed to build a transformation result tree.\n", "Source": "\nAn object that implements this interface contains the information\n needed to act as source input (XML source or transformation instructions).\n", "SourceLocator": "\nThis interface is primarily for the purposes of reporting where\n an error occurred in the XML source or transformation instructions.\n", "Templates": "\nAn object that implements this interface is the runtime representation of processed\n transformation instructions.\n", "URIResolver": "\nAn object that implements this interface that can be called by the processor\n to turn a URI used in document(), xsl:import, or xsl:include into a Source object.\n", "OutputKeys": "\nProvides string constants that can be used to set\n output properties for a Transformer, or to retrieve\n output properties from a Transformer or Templates object.\n", "Transformer": "\nAn instance of this abstract class can transform a\n source tree into a result tree.\n", "TransformerConfigurationException": "\nIndicates a serious configuration error.\n", "TransformerException": "\nThis class specifies an exceptional condition that occurred\n during the transformation process.\n", "TransformerFactoryConfigurationError": "\nThrown when a problem with configuration with the Transformer Factories\n exists.\n", "DOMLocator": "\nIndicates the position of a node in a source DOM, intended\n primarily for error reporting.\n/\nDOMLocator is an interface that describes a location (e.g.\n", "DOMResult": "\nActs as a holder for a transformation result tree\n in the form of a Document Object Model (DOM) tree.\n", "DOMSource": "\nActs as a holder for a transformation Source tree in the\n form of a Document Object Model (DOM) tree.\n", "TemplatesHandler": "\nA SAX ContentHandler that may be used to process SAX\n parse events (parsing transformation instructions) into a Templates object.\n", "TransformerHandler": "\nA TransformerHandler\n listens for SAX ContentHandler parse events and transforms\n them to a Result.\n", "SAXResult": "\nActs as an holder for a transformation Result.\n", "SAXSource": "\nActs as an holder for SAX-style Source.\n", "SAXTransformerFactory": "\nThis class extends TransformerFactory to provide SAX-specific\n factory methods.\n", "StAXResult": "\nActs as a holder for an XML Result in the\n form of a StAX writer,i.e.\n", "StAXSource": "\nActs as a holder for an XML Source in the\n form of a StAX reader,i.e.\n", "StreamResult": "\nActs as an holder for a transformation result,\n which may be XML, plain Text, HTML, or some other form of markup.\n", "StreamSource": "\nActs as an holder for a transformation Source in the form\n of a stream of XML markup.\n", "Schema": "\nImmutable in-memory representation of grammar.\n", "SchemaFactoryLoader": "\nFactory that creates SchemaFactory.\n", "TypeInfoProvider": "\nThis class provides access to the type information determined\n by ValidatorHandler.\n", "Validator": "\nA processor that checks an XML document against Schema.\n", "ValidatorHandler": "\nStreaming validator that works on SAX stream.\n", "SchemaFactoryConfigurationError": "\nThrown when a problem with configuration with the Schema Factories\n exists.\n", "\n/foo/bar/@id\n": "\n                 Selects the attribute id of the <bar> element\n             ", "/foo/bar/text()\n": "\n                 Selects the text nodes of the <bar> element. No\n                 distinction is made between escaped and non-escaped character data.\n             ", "/foo/bar/comment()\n": "\n                 Selects all comment nodes contained in the <bar> element.\n             ", "/foo/bar/processing-instruction()\n": "\n                 Selects all processing-instruction nodes contained in the\n                 <bar> element.\n             ", "XPath": "\nXPath provides access to the XPath evaluation environment and expressions.\n", "XPathEvaluationResult<T>": "\nThe XPathEvaluationResult interface represents the result of the\n evaluation of an XPath expression within the context of a particular node.\n", "XPathExpression": "\nXPathExpression provides access to compiled XPath expressions.\n/\nThe XPathExpression interface represents a parsed and resolved\n XPath expression.\n", "XPathFunction": "\nXPathFunction provides access to XPath functions.\n", "XPathFunctionResolver": "\nXPathFunctionResolver provides access to the set of user defined XPathFunctions.\n", "XPathNodes": "\nXPathNodes represents a set of nodes selected by a location path as specified\n in XML Path Language (XPath)\n Version 1.0, 3.3 Node-sets.\n", "XPathVariableResolver": "\nXPathVariableResolver provides access to the set of user defined XPath variables.\n", "XPathConstants": "\nXPath constants.\n", "XPathEvaluationResult.XPathResultType": "\nXPathResultType represents possible return types of an XPath evaluation.\n", "XPathException": "\nXPathException represents a generic XPath exception.\n/\nA new exception has been created for exceptions specific to these XPath\n interfaces.\n", "XPathExpressionException": "\nXPathExpressionException represents an error in an XPath expression.\n", "XPathFactoryConfigurationException": "\nXPathFactoryConfigurationException represents\n a configuration error in a XPathFactory environment.\n", "XPathFunctionException": "\nXPathFunctionException represents an error with an XPath function.\n", "Attr": "\nThe Attr interface represents an attribute in an\n Element object.\n", "CDATASection": "\nCDATA sections are used to escape blocks of text containing characters that\n would otherwise be regarded as markup.\n", "CharacterData": "\nThe CharacterData interface extends Node with a set of\n attributes and methods for accessing character data in the DOM.\n", "DocumentFragment": "\nDocumentFragment is a \"lightweight\" or \"minimal\"\n Document object.\n", "DocumentType": "\nEach Document has a doctype attribute whose value\n is either null or a DocumentType object.\n", "DOMConfiguration": "\nThe DOMConfiguration interface represents the configuration\n of a document and maintains a table of recognized parameters.\n", "DOMError": "\nDOMError is an interface that describes an error.\n", "DOMErrorHandler": "\nDOMErrorHandler is a callback interface that the DOM\n implementation can call when reporting errors that happens while\n processing XML data, or when doing some other processing (e.g. validating\n a document).\n", "DOMImplementation": "\nThe DOMImplementation interface provides a number of methods\n for performing operations that are independent of any particular instance\n of the document object model.\n", "DOMImplementationList": "\nThe DOMImplementationList interface provides the abstraction\n of an ordered collection of DOM implementations, without defining or\n constraining how this collection is implemented.\n", "DOMImplementationSource": "\nThis interface permits a DOM implementer to supply one or more\n implementations, based upon requested features and versions, as specified\n in DOM\n Features.\n", "DOMStringList": "\nThe DOMStringList interface provides the abstraction of an\n ordered collection of DOMString values, without defining or\n constraining how this collection is implemented.\n", "ElementTraversal": "\nThe ElementTraversal interface is a set of read-only attributes\n which allow an author to easily navigate between elements in a document.\n", "NamedNodeMap": "\nObjects implementing the NamedNodeMap interface are used to\n represent collections of nodes that can be accessed by name.\n", "NameList": "\nThe NameList interface provides the abstraction of an ordered\n collection of parallel pairs of name and namespace values (which could be\n null values), without defining or constraining how this collection is\n implemented.\n", "Node": "\nThe Node interface is the primary datatype for the entire\n Document Object Model.\n", "NodeList": "\nThe NodeList interface provides the abstraction of an ordered\n collection of nodes, without defining or constraining how this collection\n is implemented.\n", "Notation": "\nThis interface represents a notation declared in the DTD.\n", "Text": "\nThe Text interface inherits from CharacterData\n and represents the textual content (termed character data in XML) of an Element or Attr.\n", "TypeInfo": "\nThe TypeInfo interface represents a type referenced from\n Element or Attr nodes, specified in the schemas\n associated with the document.\n", "UserDataHandler": "\nWhen associating an object to a key on a node using\n Node.setUserData() the application can provide a handler\n that gets called when the node the object is associated to is being\n cloned, imported, or renamed.\n", "DOMException": "\nDOM operations only raise exceptions in \"exceptional\" circumstances, i.e.,\n when an operation is impossible to perform (either for logical reasons,\n because data is lost, or because the implementation has become unstable).\n", "DOMImplementationRegistry": "\nA factory that enables applications to obtain instances of\n DOMImplementation.\n", "EventTarget": "\nThe EventTarget interface is implemented by all\n Nodes in an implementation which supports the DOM Event\n Model.\n", "MutationEvent": "\nThe MutationEvent interface provides specific contextual\n information associated with Mutation events.\n", "UIEvent": "\nThe UIEvent interface provides specific contextual information\n associated with User Interface events.\n", "EventException": "\nEvent operations may throw an EventException as specified in\n their method descriptions.\n", "DOMImplementationLS": "\nDOMImplementationLS contains the factory methods for creating\n Load and Save objects.\n", "LSInput": "\nThis interface represents an input source for data.\n", "LSLoadEvent": "\nThis interface represents a load event object that signals the completion\n of a document load.\n", "LSOutput": "\nThis interface represents an output destination for data.\n", "LSParser": "\nAn interface to an object that is able to build, or augment, a DOM tree\n from various input sources.\n", "LSParserFilter": "\nLSParserFilters provide applications the ability to examine\n nodes as they are being constructed while parsing.\n", "LSProgressEvent": "\nThis interface represents a progress event object that notifies the\n application about progress as a document is parsed.\n", "LSResourceResolver": "\nLSResourceResolver provides a way for applications to\n redirect references to external resources.\n", "LSSerializer": "\nA LSSerializer provides an API for serializing (writing) a\n DOM document out into XML.\n", "LSSerializerFilter": "\nLSSerializerFilters provide applications the ability to\n examine nodes as they are being serialized and decide what nodes should\n be serialized or not.\n", "LSException": "\nParser or write operations may throw an LSException if the\n processing is stopped.\n", "DocumentRange": "\nSee also the Document Object Model (DOM) Level 2 Traversal and Range Specification.\n", "Range": "\nSee also the Document Object Model (DOM) Level 2 Traversal and Range Specification.\n", "RangeException": "\nRange operations may throw a RangeException as specified in\n their method descriptions.\n", "DocumentTraversal": "\nDocumentTraversal contains methods that create\n NodeIterators and TreeWalkers to traverse a\n node and its children in document order (depth first, pre-order\n traversal, which is equivalent to the order in which the start tags occur\n in the text representation of the document).\n", "NodeFilter": "\nFilters are objects that know how to \"filter out\" nodes.\n", "NodeIterator": "\nNodeIterators are used to step through a set of nodes, e.g.\n", "TreeWalker": "\nTreeWalker objects are used to navigate a document tree or\n subtree using the view of the document defined by their\n whatToShow flags and filter (if any).\n", "AbstractView": "\nA base interface that all views shall derive from.\n", "DocumentView": "\nThe DocumentView interface is implemented by\n Document objects in DOM implementations supporting DOM\n Views.\n", "external-general-entities": "read/write unspecified  Reports whether this parser processes external\n          general entities; always true if validating.\n              ", "external-parameter-entities": "read/write unspecified  Reports whether this parser processes external\n          parameter entities; always true if validating.\n              ", "is-standalone": "(parsing) read-only, (not parsing) none not applicable  May be examined only during a parse, after the\n          startDocument() callback has been completed; read-only.\n          The value is true if the document specified standalone=\"yes\" in\n          its XML declaration, and otherwise is false.\n              ", "lexical-handler/parameter-entities": "read/write unspecified  A value of \"true\" indicates that the LexicalHandler will report\n          the beginning and end of parameter entities.\n              ", "namespaces": "read/write true  A value of \"true\" indicates namespace URIs and unprefixed local names\n          for element and attribute names will be available.\n              ", "namespace-prefixes": "read/write false  A value of \"true\" indicates that XML qualified names (with prefixes) and\n          attributes (including xmlns* attributes) will be available.\n              ", "resolve-dtd-uris": "read/write true  A value of \"true\" indicates that system IDs in declarations will\n          be absolutized (relative to their base URIs) before reporting.\n          (That is the default behavior for all SAX2 XML parsers.)\n          A value of \"false\" indicates those IDs will not be absolutized;\n          parsers will provide the base URI from\n          Locator.getSystemId().\n          This applies to system IDs passed in \nDTDHandler.notationDecl(),\n              DTDHandler.unparsedEntityDecl(), and\n              DeclHandler.externalEntityDecl().\n          \n          It does not apply to EntityResolver.resolveEntity(),\n          which is not used to report declarations, or to\n          LexicalHandler.startDTD(), which already provides\n          the non-absolutized URI.\n          ", "string-interning": "read/write unspecified  Has a value of \"true\" if all XML names (for elements, prefixes,\n          attributes, entities, notations, and local names),\n          as well as Namespace URIs, will have been interned\n          using java.lang.String.intern. This supports fast\n          testing of equality/inequality against string constants,\n          rather than forcing slower calls to String.equals().\n          ", "unicode-normalization-checking": "read/write false  Controls whether the parser reports Unicode normalization\n         errors as described in section 2.13 and Appendix B of the\n         XML 1.1 Recommendation. If true, Unicode normalization\n         errors are reported using the ErrorHandler.error() callback.\n         Such errors are not fatal in themselves (though, obviously,\n         other Unicode-related encoding errors may be).\n              ", "use-attributes2": "read-only not applicable  Returns \"true\" if the Attributes objects passed by\n          this parser in ContentHandler.startElement()\n          implement the org.xml.sax.ext.Attributes2 interface.\n          That interface exposes additional DTD-related information,\n          such as whether the attribute was specified in the\n          source text rather than defaulted.\n      ", "use-locator2": "read-only not applicable  Returns \"true\" if the Locator objects passed by\n          this parser in ContentHandler.setDocumentLocator()\n          implement the org.xml.sax.ext.Locator2 interface.\n          That interface exposes additional entity information,\n          such as the character encoding and XML version used.\n         ", "use-entity-resolver2": "read/write true  Returns \"true\" if, when setEntityResolver is given\n          an object implementing the org.xml.sax.ext.EntityResolver2 interface,\n          those new methods will be used.\n          Returns \"false\" to indicate that those methods will not be used.\n      ", "validation": "read/write unspecified  Controls whether the parser is reporting all validity\n          errors; if true, all external entities will be read.\n      ", "xmlns-uris": "read/write false  Controls whether, when the namespace-prefixes feature\n          is set, the parser treats namespace declaration attributes as\n          being in the http://www.w3.org/2000/xmlns/ namespace.\n          By default, SAX2 conforms to the original \"Namespaces in XML\"\n          Recommendation, which explicitly states that such attributes are\n          not in any namespace.\n          Setting this optional flag to \"true\" makes the SAX2 events conform to\n          a later backwards-incompatible revision of that recommendation,\n          placing those attributes in a namespace.\n      ", "xml-1.1": "read-only not applicable  Returns \"true\" if the parser supports both XML 1.1 and XML 1.0.\n             Returns \"false\" if the parser supports only XML 1.0.\n         ", "declaration-handler": " Used to see most DTD declarations except those treated\n          as lexical (\"document element name is ...\") or which are\n          mandatory for all SAX parsers (DTDHandler).\n          The Object must implement org.xml.sax.ext.DeclHandler.\n         ", "document-xml-version": " May be examined only during a parse, after the startDocument()\n             callback has been completed; read-only. This property is a\n             literal string describing the actual XML version of the document,\n             such as \"1.0\" or \"1.1\".\n         ", "dom-node": " For \"DOM Walker\" style parsers, which ignore their\n          parser.parse() parameters, this is used to\n          specify the DOM (sub)tree being walked by the parser.\n          The Object must implement the\n          org.w3c.dom.Node interface.\n         ", "lexical-handler": " Used to see some syntax events that are essential in some\n          applications:  comments, CDATA delimiters, selected general\n          entity inclusions, and the start and end of the DTD\n          (and declaration of document element name).\n          The Object must implement org.xml.sax.ext.LexicalHandler.\n         ", "xml-string": " Readable only during a parser callback, this exposes a TBS\n          chunk of characters responsible for the current event.\n         ", "DocumentHandler": "Deprecated.\nThis interface has been replaced by the SAX2\n             ContentHandler\n             interface, which includes Namespace support.\n", "DTDHandler": "\nReceive notification of basic DTD-related events.\n", "EntityResolver": "\nBasic interface for resolving entities.\n", "ErrorHandler": "\nBasic interface for SAX error handlers.\n", "Locator": "\nInterface for associating a SAX event with a document location.\n", "XMLFilter": "\nInterface for an XML filter.\n", "HandlerBase": "Deprecated.\nThis class works with the deprecated\n             DocumentHandler\n             interface.\n", "InputSource": "\nA single input source for an XML entity.\n", "SAXException": "\nEncapsulate a general SAX error or warning.\n", "SAXNotRecognizedException": "\nException class for an unrecognized identifier.\n", "SAXNotSupportedException": "\nException class for an unsupported operation.\n", "SAXParseException": "\nEncapsulate an XML parse error or warning.\n", "Attributes2": "\nSAX2 extension to augment the per-attribute information\n provided though Attributes.\n", "DeclHandler": "\nSAX2 extension handler for DTD declaration events.\n", "EntityResolver2": "\nExtended interface for mapping external entity references to input\n sources, or providing a missing external subset.\n", "LexicalHandler": "\nSAX2 extension handler for lexical events.\n", "Locator2": "\nSAX2 extension to augment the entity information provided\n though a Locator.\n", "Attributes2Impl": "\nSAX2 extension helper for additional Attributes information,\n implementing the Attributes2 interface.\n", "DefaultHandler2": "\nThis class extends the SAX2 base handler class to support the\n SAX2 LexicalHandler, DeclHandler, and\n EntityResolver2 extensions.\n", "Locator2Impl": "\nSAX2 extension helper for holding additional Entity information,\n implementing the Locator2 interface.\n", "AttributeListImpl": "Deprecated.\nThis class implements a deprecated interface,\n             AttributeList;\n             that interface has been replaced by\n             Attributes,\n             which is implemented in the\n             AttributesImpl helper class.\n", "AttributesImpl": "\nDefault implementation of the Attributes interface.\n", "DefaultHandler": "\nDefault base class for SAX2 event handlers.\n", "LocatorImpl": "\nProvide an optional convenience implementation of Locator.\n", "NamespaceSupport": "\nEncapsulate Namespace logic for use by applications using SAX,\n or internally by SAX drivers.\n", "ParserAdapter": "\nAdapt a SAX1 Parser as a SAX2 XMLReader.\n", "ParserFactory": "Deprecated.\nThis class works with the deprecated\n             Parser\n             interface.\n", "XMLFilterImpl": "\nBase class for deriving an XML filter.\n", "XMLReaderAdapter": "\nAdapt a SAX2 XMLReader as a SAX1 Parser.\n", "XMLReaderFactory": "Deprecated.\nIt is recommended to use SAXParserFactory\n instead.\n", "AlgorithmMethod": "\nAn abstract representation of an algorithm defined in the XML Security\n specifications.\n", "Data": "\nAn abstract representation of the result of dereferencing a\n URIReference or the input/output of subsequent Transforms.\n", "KeySelectorResult": "\nThe result returned by the KeySelector.select\n method.\n", "NodeSetData<T>": "\nAn abstract representation of a Data type containing a\n node-set.\n", "URIDereferencer": "\nA dereferencer of URIReferences.\n", "URIReference": "\nIdentifies a data object via a URI-Reference, as specified by\n RFC 2396.\n", "XMLCryptoContext": "\nContains common context information for XML cryptographic operations.\n", "XMLStructure": "\nA representation of an XML structure from any namespace.\n", "KeySelector": "\nA selector that finds and returns a key using the data contained in a\n KeyInfo object.\n", "KeySelector.Purpose": "\nThe purpose of the key that is to be selected.\n", "OctetStreamData": "\nA representation of a Data type containing an octet stream.\n", "KeySelectorException": "\nIndicates an exceptional condition thrown by a KeySelector.\n", "NoSuchMechanismException": "\nThis exception is thrown when a particular XML mechanism is requested but\n is not available in the environment.\n", "URIReferenceException": "\nIndicates an exceptional condition thrown while dereferencing a\n URIReference.\n", "DOMURIReference": "\nA DOM-specific URIReference.\n", "DOMCryptoContext": "\nThis class provides a DOM-specific implementation of the\n XMLCryptoContext interface.\n", "DOMStructure": "\nA DOM-specific XMLStructure.\n", "CanonicalizationMethod": "\nA representation of the XML CanonicalizationMethod\n element as defined in the\n \n W3C Recommendation for XML-Signature Syntax and Processing.\n", "DigestMethod": "\nA representation of the XML DigestMethod element as\n defined in the \n W3C Recommendation for XML-Signature Syntax and Processing.\n", "SignatureMethod": "\nA representation of the XML SignatureMethod element\n as defined in the \n W3C Recommendation for XML-Signature Syntax and Processing.\n", "SignatureProperties": "\nA representation of the XML SignatureProperties element as\n defined in the \n W3C Recommendation for XML-Signature Syntax and Processing.\n", "SignatureProperty": "\nA representation of the XML SignatureProperty element as\n defined in the \n W3C Recommendation for XML-Signature Syntax and Processing.\n", "SignedInfo": "\nAn representation of the XML SignedInfo element as\n defined in the \n W3C Recommendation for XML-Signature Syntax and Processing.\n", "Transform": "\nA representation of the XML Transform element as\n defined in the \n W3C Recommendation for XML-Signature Syntax and Processing.\n", "XMLObject": "\nA representation of the XML Object element as defined in\n the \n W3C Recommendation for XML-Signature Syntax and Processing.\n", "XMLSignature": "\nA representation of the XML Signature element as\n defined in the \n W3C Recommendation for XML-Signature Syntax and Processing.\n", "XMLSignature.SignatureValue": "\nA representation of the XML SignatureValue element as\n defined in the \n W3C Recommendation for XML-Signature Syntax and Processing.\n", "XMLSignContext": "\nContains context information for generating XML Signatures.\n", "XMLValidateContext": "\nContains context information for validating XML Signatures.\n", "TransformService": "\nA Service Provider Interface for transform and canonicalization algorithms.\n", "XMLSignatureFactory": "\nA factory for creating XMLSignature objects from scratch or\n for unmarshalling an XMLSignature object from a corresponding\n XML representation.\n", "TransformException": "\nIndicates an exceptional condition that occurred while executing a\n transform algorithm.\n", "XMLSignatureException": "\nIndicates an exceptional condition that occurred during the XML\n signature generation or validation process.\n", "DOMSignContext": "\nA DOM-specific XMLSignContext.\n", "DOMValidateContext": "\nA DOM-specific XMLValidateContext.\n", "KeyInfo": "\nA representation of the XML KeyInfo element as defined in\n the \n W3C Recommendation for XML-Signature Syntax and Processing.\n", "KeyName": "\nA representation of the XML KeyName element as\n defined in the \n W3C Recommendation for XML-Signature Syntax and Processing.\n", "KeyValue": "\nA representation of the XML KeyValue element as defined\n in the \n W3C Recommendation for XML-Signature Syntax and Processing.\n", "PGPData": "\nA representation of the XML PGPData element as defined in\n the \n W3C Recommendation for XML-Signature Syntax and Processing.\n", "RetrievalMethod": "\nA representation of the XML RetrievalMethod element as\n defined in the \n W3C Recommendation for XML-Signature Syntax and Processing.\n", "X509Data": "\nA representation of the XML X509Data element as defined in\n the \n W3C Recommendation for XML-Signature Syntax and Processing.\n", "X509IssuerSerial": "\nA representation of the XML X509IssuerSerial element as\n defined in the \n W3C Recommendation for XML-Signature Syntax and Processing.\n", "KeyInfoFactory": "\nA factory for creating KeyInfo objects from scratch or for\n unmarshalling a KeyInfo object from a corresponding XML\n representation.\n", "C14NMethodParameterSpec": "\nA specification of algorithm parameters for a CanonicalizationMethod\n Algorithm.\n", "DigestMethodParameterSpec": "\nA specification of algorithm parameters for a DigestMethod\n algorithm.\n", "SignatureMethodParameterSpec": "\nA specification of algorithm parameters for an XML SignatureMethod\n algorithm.\n", "TransformParameterSpec": "\nA specification of algorithm parameters for a Transform\n algorithm.\n", "ExcC14NParameterSpec": "\nParameters for the W3C Recommendation:\n \n Exclusive XML Canonicalization (C14N) algorithm.\n", "HMACParameterSpec": "\nParameters for the \n XML Signature HMAC Algorithm.\n", "XPathFilter2ParameterSpec": "\nParameters for the W3C Recommendation\n \n XPath Filter 2.0 Transform Algorithm.\n", "XPathFilterParameterSpec": "\nParameters for the \n XPath Filtering Transform Algorithm.\n", "XPathType": "\nThe XML Schema Definition of the XPath element as defined in the\n \n W3C Recommendation for XML-Signature XPath Filter 2.0:\n", "XPathType.Filter": "\nRepresents the filter set operation.\n", "XSLTTransformParameterSpec": "\nParameters for the \n XSLT Transform Algorithm.\n", "com.sun.java.accessibility.util": "\nProvides a collection of interfaces and classes that compose the Java Accessibility\n Utilities.\n", "GUIInitializedListener": "\nThe GUIInitializedListener interface is used by the EventQueueMonitor\n class to notify an interested party when the GUI subsystem has been\n initialized.\n", "TopLevelWindowListener": "\nThe TopLevelWindowListener interface is used by the EventQueueMonitor\n class to notify an interested party when a top level window is created\n or destroyed in the Java Virtual Machine.\n", "AccessibilityEventMonitor": "\nAccessibilityEventMonitor implements a PropertyChange listener\n on every UI object that implements interface Accessible in the Java\n Virtual Machine.\n", "AccessibilityListenerList": "\nThe AccessibilityListenerList is a copy of the Swing\n EventListerList class.\n", "AWTEventMonitor": "\nThe AWTEventMonitor implements a suite of listeners that are\n conditionally installed on every AWT component instance in the Java\n Virtual Machine.\n", "EventID": "\nEventID contains integer constants that map to event support in\n AWT and Swing.\n", "EventQueueMonitor": "\nThe EventQueueMonitor class provides key core functionality for Assistive\n Technologies (and other system-level technologies that need some of the same\n things that Assistive Technology needs).\n", "SwingEventMonitor": "\nSwingEventMonitor extends AWTEventMonitor by adding a suite of\n listeners conditionally installed on every Swing component instance\n in the Java Virtual Machine.\n", "Translator": "\nThe Translator class provides a translation to interface\n Accessible\n for objects that do not implement interface Accessible.\n", "com.sun.tools.attach": "\nProvides the API to attach to a Java\u2122 virtual machine.\n", "com.sun.tools.attach.spi": "\nOnly developers who are defining new attach providers should need to make\n direct use of this package.\n", "AttachProvider": "\nAttach provider class for attaching to a Java virtual machine.\n/\nAttach provider class for attaching to a Java virtual machine.\n", "AttachPermission": "\nWhen a SecurityManager set, this\n is the permission which will be checked when code invokes VirtualMachine.attach to attach to a target virtual\n machine.\n", "VirtualMachine": "\nA Java virtual machine.\n/\nA virtual machine targeted for debugging.\n", "VirtualMachineDescriptor": "\nDescribes a Java virtual machine.\n", "AgentInitializationException": "\nThe exception thrown when an agent fails to initialize in the target\n Java virtual machine.\n", "AgentLoadException": "\nThe exception thrown when an agent cannot be loaded into the target\n Java virtual machine.\n", "AttachNotSupportedException": "\nThrown by VirtualMachine.attach when attempting to attach to a Java virtual machine\n for which a compatible AttachProvider does not exist.\n", "AttachOperationFailedException": "\nException type to signal that an attach operation failed in the target VM.\n", "CharsetProvider()": "protected  \nInitializes a new charset provider.\n", "charsetForName\u200b(String\u00a0charsetName)": "abstract Charset \nRetrieves a charset for the given charset name.\n", "charsets()": "abstract Iterator<Charset> \nCreates an iterator that iterates over the charsets supported by this\n provider.\n", "com.sun.source.doctree": "\nProvides interfaces to represent documentation comments as abstract syntax\n trees (AST).\n", "com.sun.source.tree": "\nProvides interfaces to represent source code as abstract syntax\n trees (AST).\n", "com.sun.source.util": "\nProvides utilities for operations on abstract syntax trees (AST).\n", "com.sun.tools.javac": "\nThis package provides a legacy entry point for the javac tool.\n", "Plugin": "\nThe interface for a javac plug-in.\n/\nThe interface for a javac plug-in.\n", "AttributeTree": "\nA tree node for an attribute in an HTML element.\n", "AuthorTree": "\nA tree node for an @author block tag.\n", "BlockTagTree": "\nA tree node used as the base class for the different types of\n block tags.\n", "CommentTree": "\nAn embedded HTML comment.\n", "DeprecatedTree": "\nA tree node for an @deprecated block tag.\n", "DocCommentTree": "\nThe top level representation of a documentation comment.\n", "DocRootTree": "\nA tree node for an @docroot inline tag.\n", "DocTree": "\nCommon interface for all nodes in a documentation syntax tree.\n", "DocTreeVisitor<R,\u200bP>": "\nA visitor of trees, in the style of the visitor design pattern.\n", "DocTypeTree": "\nA tree node for a doctype declaration.\n", "EndElementTree": "\nA tree node for the end of an HTML element.\n", "EntityTree": "\nA tree node for an HTML entity.\n", "ErroneousTree": "\nA tree node to stand in for a malformed text\n/\nA tree node to stand in for a malformed expression.\n/Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "HiddenTree": "\nA tree node for an @hidden block tag.\n", "IdentifierTree": "\nAn identifier in a documentation comment.\n/\nA tree node for an identifier expression.\n/Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "IndexTree": "\nA tree node for an @index or @index inline tag.\n", "InheritDocTree": "\nA tree node for an @inheritDoc inline tag.\n", "InlineTagTree": "\nA tree node used as the base class for the different types of\n inline tags.\n", "LinkTree": "\nA tree node for an @link or @linkplain inline tag.\n", "LiteralTree": "\nA tree node for an @literal or @code inline tag.\n/\nA tree node for a literal expression.\n/Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "ParamTree": "\nA tree node for an @param block tag.\n", "ProvidesTree": "\nA tree node for a @provides block tag.\n/\nA tree node for a 'provides' directive in a module declaration.\n", "ReferenceTree": "\nA tree node for a reference to a Java language element.\n", "ReturnTree": "\nA tree node for an @return block tag.\n/\nA tree node for a return statement.\n/Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "SeeTree": "\nA tree node for an @see block tag.\n", "SerialDataTree": "\nA tree node for an @serialData block tag.\n", "SerialFieldTree": "\nA tree node for an @serialData block tag.\n", "SerialTree": "\nA tree node for an @serial block tag.\n", "SinceTree": "\nA tree node for an @since block tag.\n", "StartElementTree": "\nA tree node for the start of an HTML element.\n", "SummaryTree": "\nA tree node for an @summary inline tag.\n", "SystemPropertyTree": "\nA tree node for an @systemProperty inline tag.\n", "TextTree": "\nA tree node for plain text.\n", "ThrowsTree": "\nA tree node for an @exception or @throws block tag.\n", "UnknownBlockTagTree": "\nA tree node for an unrecognized inline tag.\n", "UnknownInlineTagTree": "\nA tree node for an unrecognized inline tag.\n", "UsesTree": "\nA tree node for an @uses block tag.\n/\nA tree node for a 'uses' directive in a module declaration.\n", "ValueTree": "\nA tree node for an @value inline tag.\n", "VersionTree": "\nA tree node for an @version block tag.\n", "AttributeTree.ValueKind": "\nThe kind of an attribute value.\n", "DocTree.Kind": "\nEnumerates all kinds of trees.\n", "AnnotatedTypeTree": "\nA tree node for an annotated type.\n", "AnnotationTree": "\nA tree node for an annotation.\n", "ArrayAccessTree": "\nA tree node for an array access expression.\n/Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "ArrayTypeTree": "\nA tree node for an array type.\n", "AssertTree": "\nA tree node for an assert statement.\n", "AssignmentTree": "\nA tree node for an assignment expression.\n/Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "BinaryTree": "\nA tree node for a binary expression.\n/Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "BlockTree": "\nA tree node for a statement block.\n/Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "BreakTree": "\nA tree node for a break statement.\n/Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "CaseTree": "\nA tree node for a case in a switch statement or expression.\n/Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "CatchTree": "\nA tree node for a catch block in a try statement.\n/Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "ClassTree": "\nA tree node for a class, interface, enum, or annotation\n type declaration.\n", "CompilationUnitTree": "\nRepresents the abstract syntax tree for compilation units (source\n files) and package declarations (package-info.java).\n/Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "CompoundAssignmentTree": "\nA tree node for compound assignment operator.\n/Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "ConditionalExpressionTree": "\nA tree node for the conditional operator ?\n/Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "ContinueTree": "\nA tree node for a continue statement.\n/Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "DirectiveTree": "\nA super-type for all the directives in a ModuleTree.\n", "DoWhileLoopTree": "\nA tree node for a do statement.\n/Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "EmptyStatementTree": "\nA tree node for an empty (skip) statement.\n/Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "EnhancedForLoopTree": "\nA tree node for an \"enhanced\" for loop statement.\n", "ExportsTree": "\nA tree node for an 'exports' directive in a module declaration.\n", "ExpressionStatementTree": "\nA tree node for an expression statement.\n/Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "ExpressionTree": "\nA tree node used as the base class for the different types of\n expressions.\n/Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "ForLoopTree": "\nA tree node for a basic for loop statement.\n/Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "IfTree": "\nA tree node for an if statement.\n/Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "ImportTree": "\nA tree node for an import declaration.\n", "InstanceOfTree": "\nA tree node for an instanceof expression.\n/Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "IntersectionTypeTree": "\nA tree node for an intersection type in a cast expression.\n", "LabeledStatementTree": "\nA tree node for a labeled statement.\n/Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "LambdaExpressionTree": "\nA tree node for a lambda expression.\n", "LineMap": "\nProvides methods to convert between character positions and line numbers\n for a compilation unit.\n/Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "MemberReferenceTree": "\nA tree node for a member reference expression.\n", "MemberSelectTree": "\nA tree node for a member access expression.\n/Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "MethodInvocationTree": "\nA tree node for a method invocation expression.\n", "MethodTree": "\nA tree node for a method or annotation type element declaration.\n", "ModifiersTree": "\nA tree node for the modifiers, including annotations, for a declaration.\n", "ModuleTree": "\nA tree node for a module declaration.\n/Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "NewArrayTree": "\nA tree node for an expression to create a new instance of an array.\n", "NewClassTree": "\nA tree node to declare a new instance of a class.\n", "OpensTree": "\nA tree node for an 'opens' directive in a module declaration.\n", "PackageTree": "\nRepresents the package declaration.\n", "ParameterizedTypeTree": "\nA tree node for a type expression involving type parameters.\n", "ParenthesizedTree": "\nA tree node for a parenthesized expression.\n/Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "PrimitiveTypeTree": "\nA tree node for a primitive type.\n", "RequiresTree": "\nA tree node for a 'requires' directive in a module declaration.\n", "Scope": "\nInterface for determining locally available program elements, such as\n local variables and imports.\n", "StatementTree": "\nA tree node used as the base class for the different kinds of\n statements.\n/Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "SwitchExpressionTree": "Deprecated, for removal: This API element is subject to removal in a future version.\nThis method is modeling switch expressions,\n which are part of a preview feature and may be removed\n if the preview feature is removed.\n", "SwitchTree": "\nA tree node for a switch statement.\n/Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "SynchronizedTree": "\nA tree node for a synchronized statement.\n", "ThrowTree": "\nA tree node for a throw statement.\n/Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "Tree": "\nCommon interface for all nodes in an abstract syntax tree.\n/Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "TreeVisitor<R,\u200bP>": "\nA visitor of trees, in the style of the visitor design pattern.\n/Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "TryTree": "\nA tree node for a try statement.\n/Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "TypeCastTree": "\nA tree node for a type cast expression.\n", "TypeParameterTree": "\nA tree node for a type parameter.\n", "UnaryTree": "\nA tree node for postfix and unary expressions.\n/Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "UnionTypeTree": "\nA tree node for a union type expression in a multicatch\n variable declaration.\n", "VariableTree": "\nA tree node for a variable declaration.\n/Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "WhileLoopTree": "\nA tree node for a while loop statement.\n/Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "WildcardTree": "\nA tree node for a wildcard type argument.\n", "CaseTree.CaseKind": "Deprecated, for removal: This API element is subject to removal in a future version.\nThis enum is used to model a rule case,\n which is part of a preview feature and may be removed\n if the preview feature is removed.\n", "LambdaExpressionTree.BodyKind": "\nLambda expressions come in two forms:\n \n  expression lambdas, whose body is an expression, and\n  statement lambdas, whose body is a block\n \n", "MemberReferenceTree.ReferenceMode": "\nThere are two kinds of member references: (i) method references and\n (ii) constructor references\n", "ModuleTree.ModuleKind": "\nThe kind of the module.\n", "Tree.Kind": "\nEnumerates all kinds of trees.\n/Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "DocSourcePositions": "\nProvides methods to obtain the position of a DocTree within a javadoc comment.\n", "DocTreeFactory": "\nFactory for creating DocTree nodes.\n", "SourcePositions": "\nProvides methods to obtain the position of a Tree within a CompilationUnit.\n", "TaskListener": "\nProvides a listener to monitor the activity of the JDK Java Compiler, javac.\n", "DocTreePath": "\nA path of tree nodes, typically used to represent the sequence of ancestor\n nodes of a tree node up to the top level DocCommentTree node.\n", "DocTreePathScanner<R,\u200bP>": "\nA DocTreeVisitor that visits all the child tree nodes, and provides\n support for maintaining a path for the parent nodes.\n", "DocTrees": "\nProvides access to syntax trees for doc comments.\n", "DocTreeScanner<R,\u200bP>": "\nA TreeVisitor that visits all the child tree nodes.\n", "JavacTask": "\nProvides access to functionality specific to the JDK Java Compiler, javac.\n", "SimpleDocTreeVisitor<R,\u200bP>": "\nA simple visitor for tree nodes.\n", "SimpleTreeVisitor<R,\u200bP>": "\nA simple visitor for tree nodes.\n", "TaskEvent": "\nProvides details about work that has been done by the JDK Java Compiler, javac.\n", "TreePathScanner<R,\u200bP>": "\nA TreeVisitor that visits all the child tree nodes, and provides\n support for maintaining a path for the parent nodes.\n", "Trees": "\nBridges JSR 199, JSR 269, and the Tree API.\n", "TreeScanner<R,\u200bP>": "\nA TreeVisitor that visits all the child tree nodes.\n", "TaskEvent.Kind": "\nKind of task event.\n", "Main": "\nA legacy programmatic interface for the Java Programming Language\n compiler, javac.\n/Deprecated, for removal: This API element is subject to removal in a future version.\nThis class is now deprecated and may be removed in a future release.\n", "Provider.id name": "String.valueOf(provider.getName())/String.valueOf(provider.getName())", "Provider.id version": "String.valueOf(provider.getVersionStr())/String.valueOf(provider.getVersionStr())", "Provider.id info": "String.valueOf(provider.getInfo())/String.valueOf(provider.getInfo())", "Provider.id className": "provider.getClass().getName()/provider.getClass().getName()", "Provider\u200b(String\u00a0name,\n        double\u00a0version,\n        String\u00a0info)": "protected  \nDeprecated.\nuse Provider(String, String, String) instead.\n\n/protected  \nDeprecated.\nuse Provider(String, String, String) instead.\n\n", "Provider\u200b(String\u00a0name,\n        String\u00a0versionStr,\n        String\u00a0info)": "protected  \nConstructs a provider with the specified name, version string,\n and information.\n/protected  \nConstructs a provider with the specified name, version string,\n and information.\n", "clear()": "void \nClears this provider so that it no longer contains the properties\n used to look up facilities implemented by the provider.\n/void \nClears this provider so that it no longer contains the properties\n used to look up facilities implemented by the provider.\n", "compute\u200b(Object\u00a0key,\n       BiFunction<? super Object,\u200b? super Object,\u200b? extends Object>\u00a0remappingFunction)": "Object \nAttempts to compute a mapping for the specified key and its\n current mapped value (or null if there is no current\n mapping).\n/Object \nAttempts to compute a mapping for the specified key and its\n current mapped value (or null if there is no current\n mapping).\n", "computeIfAbsent\u200b(Object\u00a0key,\n               Function<? super Object,\u200b? extends Object>\u00a0mappingFunction)": "Object \nIf the specified key is not already associated with a value (or\n is mapped to null), attempts to compute its value using\n the given mapping function and enters it into this map unless\n null.\n/Object \nIf the specified key is not already associated with a value (or\n is mapped to null), attempts to compute its value using\n the given mapping function and enters it into this map unless\n null.\n", "computeIfPresent\u200b(Object\u00a0key,\n                BiFunction<? super Object,\u200b? super Object,\u200b? extends Object>\u00a0remappingFunction)": "Object \nIf the value for the specified key is present and non-null, attempts to\n compute a new mapping given the key and its current mapped value.\n/Object \nIf the value for the specified key is present and non-null, attempts to\n compute a new mapping given the key and its current mapped value.\n", "configure\u200b(String\u00a0configArg)": "Provider \nApply the supplied configuration argument to this provider instance\n and return the configured provider.\n/Provider \nApply the supplied configuration argument to this provider instance\n and return the configured provider.\n", "entrySet()": "Set<Map.Entry<Object,\u200bObject>> \nReturns an unmodifiable Set view of the property entries contained\n in this Provider.\n/Set<Map.Entry<Object,\u200bObject>> \nReturns an unmodifiable Set view of the property entries contained\n in this Provider.\n", "forEach\u200b(BiConsumer<? super Object,\u200b? super Object>\u00a0action)": "void \nPerforms the given action for each entry in this map until all entries\n have been processed or the action throws an exception.\n/void \nPerforms the given action for each entry in this map until all entries\n have been processed or the action throws an exception.\n", "getInfo()": "String \nReturns a human-readable description of the provider and its\n services.\n/String \nReturns a human-readable description of the provider and its\n services.\n", "getName()": "String \nReturns the name of this provider.\n/String \nReturns the name of this provider.\n", "getOrDefault\u200b(Object\u00a0key,\n            Object\u00a0defaultValue)": "Object \nReturns the value to which the specified key is mapped, or\n defaultValue if this map contains no mapping for the key.\n/Object \nReturns the value to which the specified key is mapped, or\n defaultValue if this map contains no mapping for the key.\n", "getService\u200b(String\u00a0type,\n          String\u00a0algorithm)": "Provider.Service \nGet the service describing this Provider's implementation of the\n specified type of this algorithm or alias.\n/Provider.Service \nGet the service describing this Provider's implementation of the\n specified type of this algorithm or alias.\n", "getServices()": "Set<Provider.Service> \nGet an unmodifiable Set of all services supported by\n this Provider.\n/Set<Provider.Service> \nGet an unmodifiable Set of all services supported by\n this Provider.\n", "getVersion()": "double \nDeprecated.\nuse getVersionStr() instead.\n\n/double \nDeprecated.\nuse getVersionStr() instead.\n\n", "getVersionStr()": "String \nReturns the version string for this provider.\n/String \nReturns the version string for this provider.\n", "isConfigured()": "boolean \nCheck if this provider instance has been configured.\n/boolean \nCheck if this provider instance has been configured.\n", "keySet()": "Set<Object> \nReturns an unmodifiable Set view of the property keys contained in\n this provider.\n/Set<Object> \nReturns an unmodifiable Set view of the property keys contained in\n this provider.\n", "load\u200b(InputStream\u00a0inStream)": "void \nReads a property list (key and element pairs) from the input stream.\n/void \nReads a property list (key and element pairs) from the input stream.\n", "merge\u200b(Object\u00a0key,\n     Object\u00a0value,\n     BiFunction<? super Object,\u200b? super Object,\u200b? extends Object>\u00a0remappingFunction)": "Object \nIf the specified key is not already associated with a value or is\n associated with null, associates it with the given value.\n/Object \nIf the specified key is not already associated with a value or is\n associated with null, associates it with the given value.\n", "put\u200b(Object\u00a0key,\n   Object\u00a0value)": "Object \nSets the key property to have the specified\n value.\n/Object \nSets the key property to have the specified\n value.\n", "putAll\u200b(Map<?,\u200b?>\u00a0t)": "void \nCopies all of the mappings from the specified Map to this provider.\n/void \nCopies all of the mappings from the specified Map to this provider.\n", "putIfAbsent\u200b(Object\u00a0key,\n           Object\u00a0value)": "Object \nIf the specified key is not already associated with a value (or is mapped\n to null) associates it with the given value and returns\n null, else returns the current value.\n/Object \nIf the specified key is not already associated with a value (or is mapped\n to null) associates it with the given value and returns\n null, else returns the current value.\n", "putService\u200b(Provider.Service\u00a0s)": "protected void \nAdd a service.\n/protected void \nAdd a service.\n", "remove\u200b(Object\u00a0key)": "Object \nRemoves the key property (and its corresponding\n value).\n/Object \nRemoves the key property (and its corresponding\n value).\n", "remove\u200b(Object\u00a0key,\n      Object\u00a0value)": "boolean \nRemoves the entry for the specified key only if it is currently\n mapped to the specified value.\n/boolean \nRemoves the entry for the specified key only if it is currently\n mapped to the specified value.\n", "removeService\u200b(Provider.Service\u00a0s)": "protected void \nRemove a service previously added using\n putService().\n/protected void \nRemove a service previously added using\n putService().\n", "replace\u200b(Object\u00a0key,\n       Object\u00a0value)": "Object \nReplaces the entry for the specified key only if it is\n currently mapped to some value.\n/Object \nReplaces the entry for the specified key only if it is\n currently mapped to some value.\n", "replace\u200b(Object\u00a0key,\n       Object\u00a0oldValue,\n       Object\u00a0newValue)": "boolean \nReplaces the entry for the specified key only if currently\n mapped to the specified value.\n/boolean \nReplaces the entry for the specified key only if currently\n mapped to the specified value.\n", "replaceAll\u200b(BiFunction<? super Object,\u200b? super Object,\u200b? extends Object>\u00a0function)": "void \nReplaces each entry's value with the result of invoking the given\n function on that entry, in the order entries are returned by an entry\n set iterator, until all entries have been processed or the function\n throws an exception.\n/void \nReplaces each entry's value with the result of invoking the given\n function on that entry, in the order entries are returned by an entry\n set iterator, until all entries have been processed or the function\n throws an exception.\n", "toString()": "String \nReturns a string with the name and the version string\n of this provider.\n/String \nReturns a string with the name and the version string\n of this provider.\n", "values()": "Collection<Object> \nReturns an unmodifiable Collection view of the property values\n contained in this provider.\n/Collection<Object> \nReturns an unmodifiable Collection view of the property values\n contained in this provider.\n", "jdk.dynalink.beans": "\nContains the linker for ordinary Java objects.\n", "jdk.dynalink.linker": "\n\n Contains interfaces and classes needed by language runtimes to implement\n their own language-specific object models and type conversions.\n", "jdk.dynalink.linker.support": "\nContains classes that make it more convenient for language runtimes to\n implement their own language-specific object models and type conversions\n by providing basic implementations of some classes as well as various\n utilities.\n", "jdk.dynalink.support": "\nContains classes that make using Dynalink more convenient by providing\n basic implementations of some classes as well as various utilities.\n", "GuardingDynamicLinkerExporter": "\nA class acting as a supplier of guarding dynamic linkers that can be\n automatically loaded by other language runtimes.\n/\nA class acting as a supplier of guarding dynamic linkers that can be\n automatically loaded by other language runtimes.\n", "RelinkableCallSite": "\nInterface for call sites managed by a DynamicLinker.\n", "CallSiteDescriptor": "\nCall site descriptors contain all the information necessary for linking a\n call site.\n", "DynamicLinker": "\nThe linker for RelinkableCallSite objects.\n", "DynamicLinkerFactory": "\nA factory class for creating DynamicLinker objects.\n", "NamedOperation": "\nOperation that associates a name with another operation.\n", "NamespaceOperation": "\nDescribes an operation that operates on at least one Namespace of\n an object.\n", "SecureLookupSupplier": "\nProvides security-checked access to a MethodHandles.Lookup object.\n", "StandardNamespace": "\nAn enumeration of standard namespaces defined by Dynalink.\n", "StandardOperation": "\nDefines the standard dynamic operations.\n", "NoSuchDynamicMethodException": "\nThrown at the invocation if the call site can not be linked by any available GuardingDynamicLinker.\n", "MissingMemberHandlerFactory": "\nA factory for creating method handles for linking missing member behavior\n in BeansLinker.\n", "BeansLinker": "\nA linker for ordinary Java objects.\n", "StaticClass": "\nObject that allows access to the static members of a class (its static\n methods, properties, and fields), as well as construction of instances using\n StandardOperation.NEW operation.\n", "ConversionComparator": "\nOptional interface to be implemented by GuardingTypeConverterFactory\n implementers.\n", "GuardedInvocationTransformer": "\nInterface for objects that are used to transform one guarded invocation into\n another one.\n", "GuardingDynamicLinker": "\nThe base interface for language-specific dynamic linkers.\n", "GuardingTypeConverterFactory": "\nOptional interface that can be implemented by GuardingDynamicLinker\n implementations to provide language-specific type conversion capabilities.\n", "LinkerServices": "\nInterface for services provided to GuardingDynamicLinker instances by\n the DynamicLinker that owns them.\n", "LinkRequest": "\nRepresents a request to link a particular invocation at a particular call\n site.\n", "MethodHandleTransformer": "\nA generic interface describing operations that transform method handles.\n", "MethodTypeConversionStrategy": "\nInterface for objects representing a strategy for converting a method handle\n to a new type.\n", "TypeBasedGuardingDynamicLinker": "\nA guarding dynamic linker that can determine whether it can link the call site solely based on the type of the first\n argument at linking invocation time.\n", "GuardedInvocation": "\nRepresents a conditionally valid method handle.\n", "ConversionComparator.Comparison": "\nEnumeration of possible outcomes of comparing one conversion to another.\n", "CompositeGuardingDynamicLinker": "\nA GuardingDynamicLinker that delegates sequentially to a list of\n other guarding dynamic linkers in its\n CompositeGuardingDynamicLinker.getGuardedInvocation(LinkRequest, LinkerServices).\n", "CompositeTypeBasedGuardingDynamicLinker": "\nA composite type-based guarding dynamic linker.\n", "DefaultInternalObjectFilter": "\nDefault implementation for a\n DynamicLinkerFactory.setInternalObjectsFilter(MethodHandleTransformer)\n that delegates to a pair of filtering method handles.\n", "Guards": "\nUtility methods for creating typical guards for\n MethodHandles.guardWithTest(MethodHandle, MethodHandle, MethodHandle)\n and for adjusting their method types.\n", "Lookup": "\nA wrapper around MethodHandles.Lookup that masks\n checked exceptions.\n", "SimpleLinkRequest": "\nDefault simple implementation of LinkRequest.\n", "TypeUtilities": "\nVarious static utility methods for working with Java types.\n", "AbstractRelinkableCallSite": "\nA basic implementation of the RelinkableCallSite as a\n MutableCallSite.\n", "ChainedCallSite": "\nA relinkable call site that implements a polymorphic inline caching strategy.\n", "SimpleRelinkableCallSite": "\nA relinkable call site that implements monomorphic inline caching strategy,\n only being linked to a single GuardedInvocation at any given time.\n", "com.sun.net.httpserver": "\nProvides a simple high-level Http server API, which can be used to build\n   embedded HTTP servers.\n", "com.sun.net.httpserver.spi": "\nProvides a pluggable service provider interface, which allows the HTTP server\n implementation to be replaced with other implementations.\n", "HttpServerProvider": "\nService provider class for HttpServer.\n/\nService provider class for HttpServer.\n", "HttpHandler": "\nA handler which is invoked to process HTTP exchanges.\n", "Authenticator.Failure": "\nIndicates an authentication failure.\n", "Authenticator.Result": "\nBase class for return type from authenticate() method\n", "Authenticator.Retry": "\nIndicates an authentication must be retried.\n", "Authenticator.Success": "\nIndicates an authentication has succeeded and the\n authenticated user principal can be acquired by calling\n getPrincipal().\n", "BasicAuthenticator": "\nBasicAuthenticator provides an implementation of HTTP Basic\n authentication.\n", "Filter.Chain": "\na chain of filters associated with a HttpServer.\n", "Headers": "\nHTTP request and response headers are represented by this class which implements\n the interface\n Map<String, List\n <String>>.\n", "HttpContext": "\nHttpContext represents a mapping between the root URI path of an application\n to a HttpHandler which is invoked to handle requests destined\n for that path on the associated HttpServer or HttpsServer.\n", "HttpExchange": "\nThis class encapsulates a HTTP request received and a\n response to be generated in one exchange.\n", "HttpPrincipal": "\nRepresents a user authenticated by HTTP Basic or Digest\n authentication.\n", "HttpsConfigurator": "\nThis class is used to configure the https parameters for each incoming\n https connection on a HttpsServer.\n", "HttpServer": "\nThis class implements a simple HTTP server.\n", "HttpsExchange": "\nThis class encapsulates a HTTPS request received and a\n response to be generated in one exchange and defines\n the extensions to HttpExchange that are specific to the HTTPS protocol.\n", "HttpsParameters": "\nRepresents the set of parameters for each https\n connection negotiated with clients.\n", "HttpsServer": "\nThis class is an extension of HttpServer which provides\n support for HTTPS.\n", "com.sun.jarsigner": "\nThis package comprises the interfaces and classes used to define the\n signing mechanism used by the jarsigner tool.\n", "jdk.security.jarsigner": "\nThis package defines APIs for signing jar files.\n", "ContentSignerParameters": "Deprecated.\nThis class has been deprecated.\n", "ContentSigner": "Deprecated.\nThis class has been deprecated.\n", "JarSigner": "\nAn immutable utility class to sign a jar file.\n", "JarSigner.Builder": "\nA mutable builder class that can create an immutable JarSigner\n from various signing-related parameters.\n", "JarSignerException": "\nThis exception is thrown when JarSigner.sign(java.util.zip.ZipFile, java.io.OutputStream) fails.\n", "com.sun.javadoc": "\n\nNote: The declarations in this package have been superseded by those\nin the package jdk.javadoc.doclet.\n", "com.sun.tools.javadoc": "\nThis package and its contents are deprecated and\n may be removed in a future release.\n", "jdk.javadoc.doclet": "\nThe Doclet API provides an environment which, in conjunction with\n the Language Model API and Compiler Tree API, allows clients\n to inspect the source-level structures of programs and\n libraries, including API comments embedded in the source.\n", "AnnotationDesc": "Deprecated, for removal: This API element is subject to removal in a future version.\nThe declarations in this package have been superseded by those\n   in the package jdk.javadoc.doclet.\n", "AnnotationDesc.ElementValuePair": "Deprecated, for removal: This API element is subject to removal in a future version.\nThe declarations in this package have been superseded by those\n   in the package jdk.javadoc.doclet.\n/javax.lang.model.element.AnnotationValue\n", "AnnotationTypeDoc": "Deprecated, for removal: This API element is subject to removal in a future version.\nThe declarations in this package have been superseded by those\n   in the package jdk.javadoc.doclet.\n", "AnnotationTypeElementDoc": "Deprecated, for removal: This API element is subject to removal in a future version.\nThe declarations in this package have been superseded by those\n   in the package jdk.javadoc.doclet.\n", "ClassDoc": "Deprecated, for removal: This API element is subject to removal in a future version.\nThe declarations in this package have been superseded by those\n   in the package jdk.javadoc.doclet.\n", "ConstructorDoc": "Deprecated, for removal: This API element is subject to removal in a future version.\nThe declarations in this package have been superseded by those\n   in the package jdk.javadoc.doclet.\n", "DocErrorReporter": "Deprecated, for removal: This API element is subject to removal in a future version.\nThe declarations in this package have been superseded by those\n   in the package jdk.javadoc.doclet.\n", "ExecutableMemberDoc": "Deprecated, for removal: This API element is subject to removal in a future version.\nThe declarations in this package have been superseded by those\n   in the package jdk.javadoc.doclet.\n", "FieldDoc": "Deprecated, for removal: This API element is subject to removal in a future version.\nThe declarations in this package have been superseded by those\n   in the package jdk.javadoc.doclet.\n", "MemberDoc": "Deprecated, for removal: This API element is subject to removal in a future version.\nThe declarations in this package have been superseded by those\n   in the package jdk.javadoc.doclet.\n", "MethodDoc": "Deprecated, for removal: This API element is subject to removal in a future version.\nThe declarations in this package have been superseded by those\n   in the package jdk.javadoc.doclet.\n", "PackageDoc": "Deprecated, for removal: This API element is subject to removal in a future version.\nThe declarations in this package have been superseded by those\n   in the package jdk.javadoc.doclet.\n", "ParamTag": "Deprecated, for removal: This API element is subject to removal in a future version.\nThe declarations in this package have been superseded by those\n   in the package jdk.javadoc.doclet.\n", "ProgramElementDoc": "Deprecated, for removal: This API element is subject to removal in a future version.\nThe declarations in this package have been superseded by those\n   in the package jdk.javadoc.doclet.\n", "RootDoc": "Deprecated, for removal: This API element is subject to removal in a future version.\nThe declarations in this package have been superseded by those\n   in the package jdk.javadoc.doclet.\n", "SeeTag": "Deprecated, for removal: This API element is subject to removal in a future version.\nThe declarations in this package have been superseded by those\n   in the package jdk.javadoc.doclet.\n", "SerialFieldTag": "Deprecated, for removal: This API element is subject to removal in a future version.\nThe declarations in this package have been superseded by those\n   in the package jdk.javadoc.doclet.\n", "SourcePosition": "Deprecated, for removal: This API element is subject to removal in a future version.\nThe declarations in this package have been superseded by those\n   in the package jdk.javadoc.doclet.\n", "Tag": "Deprecated, for removal: This API element is subject to removal in a future version.\nThe declarations in this package have been superseded by those\n   in the package jdk.javadoc.doclet.\n", "ThrowsTag": "Deprecated, for removal: This API element is subject to removal in a future version.\nThe declarations in this package have been superseded by those\n   in the package jdk.javadoc.doclet.\n", "Doclet": "Deprecated, for removal: This API element is subject to removal in a future version.\nThe declarations in this package have been superseded by those\n   in the package jdk.javadoc.doclet.\n/\nThe user doclet must implement this interface, as described in the\n package description.\n", "LanguageVersion": "Deprecated, for removal: This API element is subject to removal in a future version.\nThe declarations in this package have been superseded by those\n   in the package jdk.javadoc.doclet.\n", "-public\n": "public\n               public\n               exported\n               api\n       ", "-protected\n": "protected\n               protected\n               exported\n               api\n       ", "-package\n": "package\n               package\n               all\n               all\n       ", "-private\n": "private\n               private\n               all\n               all\n   ", "AnnotatedType ": "javax.lang.model.type.TypeMirror\n", "AnnotationDesc ": "javax.lang.model.element.AnnotationMirror\n", "AnnotationTypeDoc ": "javax.lang.model.element.TypeElement\n", "AnnotationTypeElementDoc ": "javax.lang.model.element.ExecutableElement\n", "AnnotationValue ": "javax.lang.model.element.AnnotationValue\n", "ClassDoc ": "javax.lang.model.element.TypeElement\n", "ConstructorDoc ": "javax.lang.model.element.ExecutableElement\n", "Doc ": "javax.lang.model.element.Element\n", "DocErrorReporter ": "jdk.javadoc.doclet.Reporter\n", "Doclet ": "jdk.javadoc.doclet.Doclet\n", "ExecutableMemberDoc ": "javax.lang.model.element.ExecutableElement\n", "FieldDoc ": "javax.lang.model.element.VariableElement\n", "LanguageVersion ": "javax.lang.model.SourceVersion\n", "MemberDoc ": "javax.lang.model.element.Element\n", "MethodDoc ": "javax.lang.model.element.ExecutableElement\n", "PackageDoc ": "javax.lang.model.element.PackageElement\n", "Parameter ": "javax.lang.model.element.VariableElement\n", "ParameterizedType ": "javax.lang.model.type.DeclaredType\n", "ParamTag ": "com.sun.source.doctree.ParamTree\n", "ProgramElementDoc ": "javax.lang.model.element.Element\n", "RootDoc ": "jdk.javadoc.doclet.DocletEnvironment\n", "SeeTag ": "com.sun.source.doctree.LinkTree\ncom.sun.source.doctree.SeeTree\n", "SerialFieldTag ": "com.sun.source.doctree.SerialFieldTree\n", "SourcePosition ": "com.sun.source.util.SourcePositions\n", "Tag ": "com.sun.source.doctree.DocTree\n", "ThrowsTag ": "com.sun.source.doctree.ThrowsTree\n", "Type ": "javax.lang.model.type.TypeMirror\n", "TypeVariable ": "javax.lang.model.type.TypeVariable\n", "WildcardType ": "javax.lang.model.type.WildcardType\n", "Doclet.Option": "\nAn encapsulation of option name, aliases, parameters and descriptions\n as used by the Doclet.\n", "DocletEnvironment": "\nRepresents the operating environment of a single invocation\n of the doclet.\n", "Reporter": "\nThis interface provides error, warning and notice reporting.\n", "Taglet": "\nThe interface for a custom taglet supported by doclets such as\n the standard doclet.\n", "StandardDoclet": "\nThis doclet generates HTML-formatted documentation for the specified modules,\n packages and types.\n", "Doclet.Option.Kind": "\nThe kind of an option.\n", "DocletEnvironment.ModuleMode": "\u00a0", "Taglet.Location": "\nThe kind of location in which a tag may be used.\n", "com.sun.tools.jconsole": "\nThis package contains the JConsole API.\n", "JConsolePlugin": "\nA JConsole plugin class.\n/\nA JConsole plugin class.\n", "JConsoleContext": "\nJConsoleContext represents a JConsole connection to a target\n application.\n", "JConsoleContext.ConnectionState": "\nValues for the ConnectionState bound property.\n", "findFirst\u200b(String\u00a0name)": "static Optional<ToolProvider> \nReturns the first instance of a ToolProvider with the given name,\n as loaded by ServiceLoader using the system class loader.\n/static Optional<ToolProvider> \nReturns the first instance of a ToolProvider with the given name,\n as loaded by ServiceLoader using the system class loader.\n", "name()": "String \nReturns the name of this tool provider.\n/String \nReturns the name of this tool provider.\n", "run\u200b(PrintStream\u00a0out,\n   PrintStream\u00a0err,\n   String...\u00a0args)": "default int \nRuns an instance of the tool, returning zero for a successful run.\n/default int \nRuns an instance of the tool, returning zero for a successful run.\n", "run\u200b(PrintWriter\u00a0out,\n   PrintWriter\u00a0err,\n   String...\u00a0args)": "int \nRuns an instance of the tool, returning zero for a successful run.\n/int \nRuns an instance of the tool, returning zero for a successful run.\n", "com.sun.jdi": "\nThis is the core package of the Java Debug\n Interface (JDI), it defines mirrors for values, types, and the target\n VirtualMachine itself - as well bootstrapping facilities.\n", "com.sun.jdi.connect": "\nThis package defines connections between the virtual machine\n using the JDI and the target virtual machine.\n", "com.sun.jdi.connect.spi": "\nThis package comprises the interfaces and classes used to\n develop new TransportService\n implementations.\n", "com.sun.jdi.event": "\nThis package defines JDI events and event processing.\n", "com.sun.jdi.request": "\nThis package is used to request that a JDI\n event be sent under specified conditions.\n", "Connector": "\u00a0/\nA method of connection between a debugger and a target VM.\n/\nA method of connection between a debugger and a target VM.\n", "TransportService": "\nA transport service for connections between a debugger and\n a target VM.\n/\nA transport service for connections between a debugger and\n a target VM.\n", "ArrayReference": "\nProvides access to an array object and its components in the target VM.\n", "BooleanType": "\nThe type of all primitive boolean values\n accessed in the target VM.\n", "BooleanValue": "\nProvides access to a primitive boolean value in\n the target VM.\n", "ByteType": "\nThe type of all primitive byte values accessed in\n the target VM.\n", "ByteValue": "\nProvides access to a primitive byte value in the target VM.\n", "CharType": "\nThe type of all primitive char values accessed in\n the target VM.\n", "CharValue": "\nProvides access to a primitive char value in\n the target VM.\n", "ClassLoaderReference": "\nA class loader object from the target VM.\n", "ClassObjectReference": "\nAn instance of java.lang.Class from the target VM.\n", "ClassType": "\nA mirror of a class in the target VM.\n", "DoubleType": "\nThe type of all primitive double values accessed in\n the target VM.\n", "DoubleValue": "\nProvides access to a primitive double value in\n the target VM.\n", "FloatType": "\nThe type of all primitive float values accessed in\n the target VM.\n", "FloatValue": "\nProvides access to a primitive float value in\n the target VM.\n", "IntegerType": "\nThe type of all primitive int values\n accessed in the target VM.\n", "IntegerValue": "\nProvides access to a primitive int value in\n the target VM.\n", "InterfaceType": "\nA mirror of an interface in the target VM.\n", "LocalVariable": "\nA local variable in the target VM.\n", "Locatable": "\nA mirror that has a Location.\n", "LongType": "\nThe type of all primitive long values\n accessed in the target VM.\n", "LongValue": "\nProvides access to a primitive long value in\n the target VM.\n", "Mirror": "\nA proxy used by a debugger to examine or manipulate some entity\n in another virtual machine.\n", "ObjectReference": "\nAn object that currently exists in the target VM.\n", "PathSearchingVirtualMachine": "\nA virtual machine which searches for classes through paths\n", "PrimitiveValue": "\nThe value assigned to a field or variable of primitive type in a\n target VM.\n", "ShortType": "\nThe type of all primitive short values\n accessed in the target VM.\n", "ShortValue": "\nProvides access to a primitive short value in\n the target VM.\n", "StackFrame": "\nThe state of one method invocation on a thread's call stack.\n", "StringReference": "\nA string object from the target VM.\n", "ThreadGroupReference": "\nA thread group object from the target VM.\n", "ThreadReference": "\nA thread object from the target VM.\n", "TypeComponent": "\nAn entity declared within a user defined\n type (class or interface).\n", "Value": "\nThe mirror for a value in the target VM.\n", "VirtualMachineManager": "\nA manager of connections to target virtual machines.\n", "VoidType": "\nThe type of all primitive void values\n accessed in the target VM.\n", "VoidValue": "\nProvides access to a primitive void value in\n the target VM.\n", "Bootstrap": "\nInitial class that provides access to the default implementation\n of JDI interfaces.\n", "JDIPermission": "\nThe JDIPermission class represents access rights to\n the VirtualMachineManager.\n", "AbsentInformationException": "\nThrown to indicate line number or variable information is not available.\n", "ClassNotLoadedException": "\nThrown to indicate that the requested class has\n not yet been loaded through the appropriate class loader.\n", "ClassNotPreparedException": "\nThrown to indicate that the requested operation cannot be\n completed because the specified class has not yet been prepared.\n", "IncompatibleThreadStateException": "\nThrown to indicate that the requested operation cannot be\n completed while the specified thread is in its current state.\n", "InconsistentDebugInfoException": "\nThrown to indicate that there is an inconistency in the debug\n information provided by the target VM.\n", "InternalException": "\nThrown to indicate that an unexpected internal error has\n occurred.\n", "InvalidCodeIndexException": "Deprecated.\nThis exception is no longer thrown\n", "InvalidLineNumberException": "Deprecated.\nThis exception is no longer thrown\n", "InvalidModuleException": "\nThrown to indicate that the requested module is invalid\n or became invalid after the module was unloaded.\n", "InvalidStackFrameException": "\nThrown to indicate that the requested operation cannot be\n completed because the specified stack frame is no longer valid.\n", "InvalidTypeException": "\nThrown to indicate a type mismatch in setting the value of a field\n or variable, or in specifying the return value of a method.\n", "InvocationException": "\nThrown to indicate an exception occurred in an invoked method within\n the target VM.\n", "NativeMethodException": "\nThrown to indicate an operation cannot be completed because\n it is not valid for a native method.\n", "ObjectCollectedException": "\nThrown to indicate that the requested operation cannot be\n completed because the specified object has been garbage collected.\n", "VMCannotBeModifiedException": "\nThrown to indicate that the operation is invalid because it would\n modify the VM and the VM is read-only.\n", "VMDisconnectedException": "\nUnchecked exception thrown to indicate that the\n requested operation cannot be\n completed because there is no longer a connection to the target VM.\n", "VMMismatchException": "\nThrown to indicate that the requested operation cannot be\n completed because the a mirror from one target VM is being\n combined with a mirror from another target VM.\n", "VMOutOfMemoryException": "\nThrown to indicate that the requested operation cannot be\n completed because the target VM has run out of memory.\n", "AttachingConnector": "\nA connector which attaches to a previously running target VM.\n", "Connector.Argument": "\nSpecification for and value of a Connector argument.\n", "Connector.BooleanArgument": "\nSpecification for and value of a Connector argument,\n whose value is Boolean.\n", "Connector.IntegerArgument": "\nSpecification for and value of a Connector argument,\n whose value is an integer.\n", "Connector.SelectedArgument": "\nSpecification for and value of a Connector argument,\n whose value is a String selected from a list of choices.\n", "Connector.StringArgument": "\nSpecification for and value of a Connector argument,\n whose value is a String.\n", "LaunchingConnector": "\nA connector which can launch a target VM before connecting to it.\n", "ListeningConnector": "\nA connector which listens for a connection initiated by a target VM.\n", "Transport": "\nA method of communication between a debugger and a target VM.\n", "IllegalConnectorArgumentsException": "\nThrown to indicate an invalid argument or\n inconsistent passed to a Connector.\n", "TransportTimeoutException": "\nThis exception may be thrown as a result of a timeout\n when attaching to a target VM, or waiting to accept a\n connection from a target VM.\n", "VMStartException": "\nA target VM was successfully launched, but terminated with an\n error before a connection could be established.\n", "TransportService.Capabilities": "\nThe transport service capabilities.\n", "TransportService.ListenKey": "\nA listen key.\n", "ClosedConnectionException": "\nThis exception may be thrown as a result of an asynchronous\n close of a Connection while an I/O operation is\n in progress.\n", "AccessWatchpointEvent": "\nNotification of a field access in the target VM.\n", "BreakpointEvent": "\nNotification of a breakpoint in the target VM.\n", "ClassPrepareEvent": "\nNotification of a class prepare in the target VM.\n", "ClassUnloadEvent": "\nNotification of a class unload in the target VM.\n", "EventIterator": "\nEventIterators are unmodifiable.\n", "EventSet": "\nSeveral Event objects may be created at a given time by\n the target VirtualMachine.\n", "ExceptionEvent": "\nNotification of an exception in the target VM.\n", "LocatableEvent": "\nAbstract superinterface of events which have both location\n and thread.\n", "MethodEntryEvent": "\nNotification of a method invocation in the target VM.\n", "MethodExitEvent": "\nNotification of a method return in the target VM.\n", "ModificationWatchpointEvent": "\nNotification of a field modification in the\n target VM.\n", "MonitorContendedEnteredEvent": "\nNotification that a thread in the target VM is entering a monitor\n  after waiting for it to be released by another thread.\n", "MonitorContendedEnterEvent": "\nNotification that a thread in the target VM is attempting\n to enter a monitor that is already acquired by another thread.\n", "MonitorWaitedEvent": "\nNotification that a thread in the target VM has finished\n waiting on an monitor object.\n", "MonitorWaitEvent": "\nNotification that a thread in the target VM is about to\n wait on a monitor object.\n", "StepEvent": "\nNotification of step completion in the target VM.\n", "ThreadDeathEvent": "\nNotification of a completed thread in the target VM.\n", "ThreadStartEvent": "\nNotification of a new running thread in the target VM.\n", "VMDeathEvent": "\nNotification of target VM termination.\n", "VMDisconnectEvent": "\nNotification of disconnection from target VM.\n", "VMStartEvent": "\nNotification of initialization of a target VM.\n", "WatchpointEvent": "\nNotification of a field triggered event encountered by a thread in the\n target VM.\n", "AccessWatchpointRequest": "\nRequest for notification when the contents of a field are accessed\n in the target VM.\n", "BreakpointRequest": "\nIdentifies a Location in the target VM at which\n execution should be stopped.\n", "ClassPrepareRequest": "\nRequest for notification when a class is prepared in the target VM.\n", "ClassUnloadRequest": "\nRequest for notification when a class is unloaded in the target VM.\n", "EventRequest": "\nRepresents a request for notification of an event.\n", "EventRequestManager": "\nManages the creation and deletion of EventRequests.\n", "ExceptionRequest": "\nRequest for notification when an exception occurs in the target VM.\n", "MethodEntryRequest": "\nRequest for notification when a method is invoked in the target VM.\n", "MethodExitRequest": "\nRequest for notification when a method returns in the target VM.\n", "ModificationWatchpointRequest": "\nRequest for notification when a field is set.\n", "MonitorContendedEnteredRequest": "\nRequest for notification of a thread in the target VM entering a monitor\n after waiting for it to be released by another thread.\n", "MonitorContendedEnterRequest": "\nRequest for notification of a thread in the target VM\n attempting to enter a monitor already acquired by another thread.\n", "MonitorWaitedRequest": "\nRequest for notification when a thread in the target VM has finished waiting on\n a monitor object.\n", "MonitorWaitRequest": "\nRequest for notification when a thread in the target VM is about to\n wait on a monitor object.\n", "StepRequest": "\nRequest for notification when a step occurs in the target VM.\n", "ThreadDeathRequest": "\nRequest for notification when a thread terminates in the target VM.\n", "ThreadStartRequest": "\nRequest for notification when a thread starts execution in the target VM.\n", "VMDeathRequest": "\nRequest for notification when the target VM terminates.\n", "WatchpointRequest": "\nIdentifies a Field in the target VM being watched.\n", "DuplicateRequestException": "\nThrown to indicate a duplicate event request.\n", "InvalidRequestStateException": "\nThrown to indicate that the requested event cannot be modified\n because it is enabled.\n", "jdk.jfr.consumer": "\nThis package contains classes for consuming Flight Recorder data.\n", "enabled": "Specifies whether the event is recorded \"true\" String representation of a Boolean (\"true\" or\n \"false\") \"true\"\n\"false\"", "threshold": "Specifies the duration below which an event is not recorded \"0\" (no limit) \"0\" if no threshold is used, otherwise a string representation of\n a positive Long followed by a space and one of the following units:\n \n\"ns\" (nanoseconds)\n \"us\" (microseconds)\n \"ms\" (milliseconds)\n \"s\" (seconds)\n \"m\" (minutes)\n \"h\" (hours)\n \"d\" (days)\n \n \"0\"\n\"10 ms\"\n \"1 s\"", "period": "Specifies the interval at which the event is emitted, if it is\n periodic \"everyChunk\" \"everyChunk\", if a periodic event should be emitted with every\n file rotation, otherwise a string representation of a positive Long\n value followed by an empty space and one of the following units:\n \n\"ns\" (nanoseconds)\n \"us\" (microseconds)\n \"ms\" (milliseconds)\n \"s\" (seconds)\n \"m\" (minutes)\n \"h\" (hours)\n \"d\" (days)\n \n \"20 ms\"\n\"1 s\"\n\"everyChunk\"", "stackTrace": "Specifies whether the stack trace from the Event#commit() method\n is recorded \"true\" String representation of a Boolean (\"true\" or\n \"false\") \"true\",\n\"false\"", "FlightRecorderListener": "\nCallback interface to monitor Flight Recorder's life cycle.\n", "AnnotationElement": "\nDescribes event metadata, such as labels, descriptions and units.\n", "EventFactory": "\nClass for defining an event at runtime.\n", "EventSettings": "\nConvenience class for applying event settings to a recording.\n", "EventType": "\nDescribes an event, its fields, settings and annotations.\n", "FlightRecorder": "\nClass for accessing, controlling, and managing Flight Recorder.\n", "FlightRecorderPermission": "\nPermission for controlling access to Flight Recorder.\n", "Recording": "\nProvides means to configure, start, stop and dump recording data to disk.\n", "SettingControl": "\nBase class to extend to create setting controls.\n", "SettingDescriptor": "\nDescribes an event setting.\n", "ValueDescriptor": "\nDescribes the event fields and annotation elements.\n", "RecordingState": "\nIndicates a state in the life cycle of a recording.\n", "BooleanFlag": "\nEvent field annotation, specifies that the value is a boolean flag, a true or\n false value\n", "Category": "\nEvent annotation, to associate the event type with a category, in the format\n of a human-readable path.\n", "ContentType": "\nMeta annotation, specifies that an annotation represents a content type, such\n as a time span or a frequency.\n", "DataAmount": "\nEvent field annotation, specifies that a value represents an amount of data (for example, bytes).\n", "Description": "\nAnnotation that describes an element by using a sentence or two.\n", "Enabled": "\nEvent annotation, determines if an event should be enabled by default.\n", "Experimental": "\nAnnotation that specifies that an element is experimental and may change\n without notice.\n", "Frequency": "\nEvent field annotation, specifies that the value is a frequency, measured in Hz.\n", "MemoryAddress": "\nEvent field annotation, specifies that the value is a memory address.\n", "MetadataDefinition": "\nMeta annotation for defining new types of event metadata.\n", "Percentage": "\nEvent field annotation to use on fractions, typically between 0.0\n and 1.0, to specify that the value is a percentage.\n", "Registered": "\nEvent annotation, for programmatic event registration.\n", "Relational": "\nMeta annotation for relational annotations, to be used on an annotation.\n", "SettingDefinition": "\nAnnotation that specifies that a method in an event class should be used to\n filter out events.\n", "StackTrace": "\nEvent annotation, determines whether an event by default has a stack trace\n or not.\n", "Threshold": "\nEvent annotation, specifies the default duration below which an event is not\n recorded (for example, \"20 ms\").\n", "Timespan": "\nEvent field annotation, specifies that the value is a duration.\n", "TransitionFrom": "\nEvent field annotation, specifies that the event transitioned from a thread.\n", "TransitionTo": "\nEvent field annotation, specifies that the event will soon transition to a thread.\n", "Unsigned": "\nEvent field annotation, specifies that the value is of an unsigned data type.\n", "RecordedClass": "\nA recorded Java type, such as a class or an interface.\n", "RecordedClassLoader": "\nA recorded Java class loader.\n", "RecordedEvent": "\nA recorded event.\n", "RecordedFrame": "\nA recorded frame in a stack trace.\n", "RecordedMethod": "\nA recorded method.\n", "RecordedObject": "\nA complex data type that consists of one or more fields.\n", "RecordedStackTrace": "\nA recorded stack trace.\n", "RecordedThread": "\nA recorded thread.\n", "RecordedThreadGroup": "\nA recorded Java thread group.\n", "RecordingFile": "\nA recording file.\n", "jdk.jshell.execution": "\nProvides implementation support for building JShell execution engines.\n", "jdk.jshell.spi": "\nDefines the Service Provider Interface for pluggable JShell execution engines.\n", "jdk.jshell.tool": "\nProvides a mechanism to launch an instance of a Java\u2122 shell tool.\n", "ExecutionControlProvider": "\u00a0/\nThe provider used by JShell to generate the execution engine needed to\n evaluate Snippets.\n/\nThe provider used by JShell to generate the execution engine needed to\n evaluate Snippets.\n", "SourceCodeAnalysis.CompletionInfo": "\nThe result of analyzeCompletion(String input).\n", "SourceCodeAnalysis.Documentation": "\nA documentation for a candidate for continuation of the given user's input.\n", "SourceCodeAnalysis.SnippetWrapper": "\nThe wrapping of a snippet of Java source into valid top-level Java\n source.\n", "SourceCodeAnalysis.Suggestion": "\nA candidate for continuation of the given user's input.\n", "DeclarationSnippet": "\nGrouping for all declaration Snippets: variable declarations\n (VarSnippet), method declarations\n (MethodSnippet), and type declarations\n (TypeDeclSnippet).\n", "Diag": "\nDiagnostic information for a Snippet.\n", "ErroneousSnippet": "\nA snippet of code that is not valid Java programming language code.\n", "ExpressionSnippet": "\nSnippet for an assignment or variable-value expression.\n", "ImportSnippet": "\nSnippet for an import declaration.\n", "JShell": "\nThe JShell evaluation state engine.\n", "JShell.Builder": "\nBuilder for JShell instances.\n", "MethodSnippet": "\nSnippet for a method definition.\n", "PersistentSnippet": "\nGrouping for Snippets which persist and influence future code.\n", "Snippet": "\nA Snippet represents a snippet of Java source code as passed to\n JShell.eval(java.lang.String).\n", "SnippetEvent": "\nA description of a change to a Snippet.\n", "SourceCodeAnalysis": "\nProvides analysis utilities for source code input.\n", "SourceCodeAnalysis.QualifiedNames": "\nList of possible qualified names.\n", "StatementSnippet": "\nSnippet for a statement.\n", "TypeDeclSnippet": "\nSnippet for a type definition (a class, interface, enum, or annotation\n interface definition).\n", "VarSnippet": "\nSnippet for a variable definition.\n", "Snippet.Kind": "\nDescribes the general kind of snippet.\n", "Snippet.Status": "\nDescribes the current state of a Snippet.\n", "Snippet.SubKind": "\nThe detailed variety of a snippet.\n", "SourceCodeAnalysis.Completeness": "\nDescribes the completeness of the given input.\n", "EvalException": "\nWraps an throwable thrown in the executing client.\n", "JShellException": "\nThe superclass of JShell generated exceptions\n", "UnresolvedReferenceException": "\nException reported on attempting to execute a\n RECOVERABLE_DEFINED\n snippet.\n", "LoaderDelegate": "\nThis interface specifies the loading specific subset of\n ExecutionControl.\n", "DirectExecutionControl": "\nAn ExecutionControl implementation that runs in the current process.\n", "FailOverExecutionControlProvider": "\nTries other providers in sequence until one works.\n", "JdiDefaultExecutionControl": "\nThe implementation of ExecutionControl that the\n JShell-core uses by default.\n", "JdiExecutionControl": "\nAbstract JDI implementation of ExecutionControl.\n", "JdiExecutionControlProvider": "\nA provider of remote JDI-controlled execution engines.\n", "JdiInitiator": "\nSets up a JDI connection, providing the resulting JDI VirtualMachine\n and the Process the remote agent is running in.\n", "LocalExecutionControl": "\nAn implementation of ExecutionControl which executes\n in the same JVM as the JShell-core.\n", "LocalExecutionControlProvider": "\nA provider of execution engines which run in the same process as JShell.\n", "RemoteExecutionControl": "\nThe remote agent runs in the execution process (separate from the main JShell\n process).\n", "StreamingExecutionControl": "\nAn implementation of the ExecutionControl\n execution engine SPI which streams requests to a remote agent where\n execution takes place.\n", "Util": "\nMiscellaneous utility methods for setting-up implementations of\n ExecutionControl.\n", "ExecutionControl": "\nThis interface specifies the functionality that must provided to implement a\n pluggable JShell execution engine.\n", "ExecutionEnv": "\nFunctionality made available to a pluggable JShell execution engine.\n", "ExecutionControl.ClassBytecodes": "\nBundles class name with class bytecodes.\n", "ExecutionControl.ClassInstallException": "\nA class install (load or redefine) encountered a problem.\n", "ExecutionControl.EngineTerminationException": "\nUnbidden execution engine termination has occurred.\n", "ExecutionControl.ExecutionControlException": "\nThe abstract base of all ExecutionControl exceptions.\n", "ExecutionControl.InternalException": "\nAn internal problem has occurred.\n", "ExecutionControl.NotImplementedException": "\nThe command is not implemented.\n", "ExecutionControl.ResolutionException": "\nAn exception indicating that a DeclarationSnippet with unresolved\n references has been encountered.\n", "ExecutionControl.RunException": "\nThe abstract base of of exceptions specific to running user code.\n", "ExecutionControl.StoppedException": "\nAn exception indicating that an\n ExecutionControl.invoke(java.lang.String, java.lang.String)\n (or theoretically a\n ExecutionControl.varValue(java.lang.String, java.lang.String))\n has been interrupted by a ExecutionControl.stop().\n", "ExecutionControl.UserException": "\nA 'normal' user exception occurred.\n", "SPIResolutionException": "\nThe construction and throw of this exception is embedded in code generated by\n the JShell core implementation in such a way that, upon executing a\n RECOVERABLE_DEFINED\n user method, this exception is thrown.\n", "JavaShellToolBuilder": "\nInterface to configure and run a Java shell tool instance.\n", "netscape.javascript": "\n\n Provides Java code the ability to access the JavaScript engine and the\n HTML DOM in the web browser.\n", "JSObject": "\n\n Allows Java code to manipulate JavaScript objects.\n/Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "JSException": "\nThrown when an exception is raised in the JavaScript engine.\n", "com.sun.management": "\nThis package contains the JDK's extension to\n the standard implementation of the\n java.lang.management API and also defines the management\n interface for some other components of the platform.\n", "DiagnosticCommandMBean": "\nManagement interface for the diagnostic commands for the HotSpot Virtual Machine.\n", "HotSpotDiagnosticMXBean": "\nDiagnostic management interface for the HotSpot Virtual Machine.\n", "UnixOperatingSystemMXBean": "\nPlatform-specific management interface for the Unix\n operating system on which the Java virtual machine is running.\n", "GarbageCollectionNotificationInfo": "\nThe information about a garbage collection\n", "GcInfo": "\nGarbage collection information.\n", "VMOption": "\nInformation about a VM option including its value and\n where the value came from which is referred as its\n origin.\n", "VMOption.Origin": "\nOrigin of the value of a VM option.\n", "FlightRecorderMXBean": "\nManagement interface for controlling Flight Recorder.\n", "ConfigurationInfo": "\nManagement representation of a Configuration.\n", "EventTypeInfo": "\nManagement representation of an EventType.\n", "RecordingInfo": "\nManagement representation of a Recording.\n", "SettingDescriptorInfo": "\nManagement class that describes a setting, for example name, description and\n default value.\n", "getInitialContext\u200b(Hashtable<?,\u200b?>\u00a0environment)": "Context \nCreates an Initial Context for beginning name resolution.\n/Context \nCreates an Initial Context for beginning name resolution.\n", "jdk.nio": "\nDefines JDK-specific channel APIs.\n", "ExtendedSocketOptions": "\nDefines extended socket options, beyond those defined in\n StandardSocketOptions.\n", "NetworkPermission": "\nRepresents permission to access the extended networking capabilities\n defined in the jdk.net package.\n", "SocketFlow": "\nRepresents the service level properties for the platform specific socket\n option ExtendedSocketOptions.SO_FLOW_SLA.\n", "Sockets": "\nDefines static methods to set and get socket options defined by the\n SocketOption interface.\n", "SocketFlow.Status": "\nEnumeration of the return values from the SO_FLOW_SLA\n socket option.\n", "Channels.SelectableChannelCloser": "\nAn object used to coordinate the closing of a selectable channel created\n by readWriteSelectableChannel.\n", "jdk.nashorn.api.scripting": "\nThis package provides the javax.script integration, which is the preferred way to use Nashorn.\n", "jdk.nashorn.api.tree": "\n\n Nashorn parser API provides interfaces to represent ECMAScript source code\n as abstract syntax trees (AST) and Parser to parse ECMAScript source scripts.\n", "ClassFilter": "Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "AbstractJSObject": "Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "NashornScriptEngine": "Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "NashornScriptEngineFactory": "Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "ScriptObjectMirror": "Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "ScriptUtils": "Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "URLReader": "Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "NashornException": "Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "ArrayLiteralTree": "Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "ClassDeclarationTree": "Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "ClassExpressionTree": "Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "ConditionalLoopTree": "Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "DebuggerTree": "Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "Diagnostic": "Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "DiagnosticListener": "Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "ExportEntryTree": "Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "ForInLoopTree": "Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "ForOfLoopTree": "Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "FunctionCallTree": "Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "FunctionDeclarationTree": "Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "FunctionExpressionTree": "Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "GotoTree": "Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "ImportEntryTree": "Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "LoopTree": "Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "NewTree": "Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "ObjectLiteralTree": "Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "PropertyTree": "Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "RegExpLiteralTree": "Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "SpreadTree": "Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "TemplateLiteralTree": "Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "WithTree": "Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "YieldTree": "Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "SimpleTreeVisitorES5_1<R,\u200bP>": "Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "SimpleTreeVisitorES6<R,\u200bP>": "Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "UnknownTreeException": "Deprecated, for removal: This API element is subject to removal in a future version.\nNashorn JavaScript script engine and APIs, and the jjs tool\n are deprecated with the intent to remove them in a future release.\n", "com.sun.nio.sctp": "\nA Java API for Stream Control Transport Protocol.\n", "NotificationHandler<T>": "\nA handler for consuming notifications from the SCTP stack.\n", "SctpSocketOption<T>": "\nA socket option associated with an SCTP channel.\n", "AbstractNotificationHandler<T>": "\nA skeletal handler that consumes notifications and continues.\n", "Association": "\nA class that represents an SCTP association.\n", "AssociationChangeNotification": "\nNotification emitted when an association has either opened or closed.\n", "MessageInfo": "\nThe MessageInfo class provides additional ancillary information about\n messages.\n", "PeerAddressChangeNotification": "\nNotification emitted when a destination address on a multi-homed peer\n encounters a change.\n", "SctpChannel": "\nA selectable channel for message-oriented connected SCTP sockets.\n", "SctpMultiChannel": "\nA selectable channel for message-oriented SCTP sockets.\n", "SctpServerChannel": "\nA selectable channel for message-oriented listening SCTP sockets.\n", "SctpStandardSocketOptions": "\nSCTP channels supports the socket options defined by this class\n (as well as those listed in the particular channel class) and may support\n additional Implementation specific socket options.\n", "SctpStandardSocketOptions.InitMaxStreams": "\nThis class is used to set the maximum number of inbound/outbound streams\n used by the local endpoint during association initialization.\n", "SendFailedNotification": "\nNotification emitted when a send failed notification has been received.\n", "ShutdownNotification": "\nNotification emitted when a peers shutdowns an the association.\n", "AssociationChangeNotification.AssocChangeEvent": "\nDefines the type of change event that happened to the association.\n", "HandlerResult": "\nDefines notification handler results.\n", "PeerAddressChangeNotification.AddressChangeEvent": "\nDefines the type of address change event that occurred to the destination\n address on a multi-homed peer when it encounters a change of interface\n details.\n", "IllegalReceiveException": "\nUnchecked exception thrown when an attempt is made to invoke the\n receive method of SctpChannel or SctpMultiChannel\n from a notification handler.\n", "IllegalUnbindException": "\nUnchecked exception thrown when an attempt is made to remove an\n address that is not bound to the channel, or remove an address from a\n channel that has only one address bound to it.\n", "InvalidStreamException": "\nUnchecked exception thrown when an attempt is made to send a\n message to an invalid stream.\n", "com.sun.security.auth": "\nProvides implementations of Principal.\n", "com.sun.security.auth.callback": "\nProvides an implementation of\n CallbackHandler.\n", "com.sun.security.auth.login": "\nProvides an implementation of Configuration.\n", "com.sun.security.auth.module": "\nProvides implementations of LoginModule.\n", "PrincipalComparator": "\nAn object that implements the java.security.Principal\n interface typically also implements this interface to provide\n a means for comparing that object to a specified Subject.\n", "LdapPrincipal": "\nA principal identified by a distinguished name as specified by\n RFC 2253.\n", "NTDomainPrincipal": "\nThis class implements the Principal interface\n and represents the name of the Windows NT domain into which the\n user authenticated.\n", "NTNumericCredential": "\nThis class abstracts an NT security token\n and provides a mechanism to do same-process security impersonation.\n", "NTSid": "\nThis class implements the Principal interface\n and represents information about a Windows NT user, group or realm.\n", "NTSidDomainPrincipal": "\nThis class extends NTSid\n and represents a Windows NT user's domain SID.\n", "NTSidGroupPrincipal": "\nThis class extends NTSid\n and represents one of the groups to which a Windows NT user belongs.\n", "NTSidPrimaryGroupPrincipal": "\nThis class extends NTSid\n and represents a Windows NT user's primary group SID.\n", "NTSidUserPrincipal": "\nThis class extends NTSid\n and represents a Windows NT user's SID.\n", "NTUserPrincipal": "\nThis class implements the Principal interface\n and represents a Windows NT user.\n", "UnixNumericGroupPrincipal": "\nThis class implements the Principal interface\n and represents a user's Unix group identification number (GID).\n", "UnixNumericUserPrincipal": "\nThis class implements the Principal interface\n and represents a user's Unix identification number (UID).\n", "UnixPrincipal": "\nThis class implements the Principal interface\n and represents a Unix user.\n", "TextCallbackHandler": "\n\n Prompts and reads from the command line for answers to authentication\n questions.\n", "ConfigFile": "\nThis class represents a default implementation for\n javax.security.auth.login.Configuration.\n", "JndiLoginModule": "\nThe module prompts for a username and password\n and then verifies the password against the password stored in\n a directory service configured under JNDI.\n", "KeyStoreLoginModule": "\nProvides a JAAS login module that prompts for a key store alias and\n populates the subject with the alias's principal and credentials.\n", "Krb5LoginModule": "\nThis LoginModule authenticates users using\n Kerberos protocols.\n", "LdapLoginModule": "\nThis LoginModule performs LDAP-based authentication.\n", "NTLoginModule": "\nThis LoginModule\n renders a user's NT security information as some number of\n Principals\n and associates them with a Subject.\n", "NTSystem": "\nThis class implementation retrieves and makes available NT\n security information for the current user.\n", "UnixLoginModule": "\nThis LoginModule imports a user's Unix\n Principal information (UnixPrincipal,\n UnixNumericUserPrincipal,\n and UnixNumericGroupPrincipal)\n and associates them with the current Subject.\n", "UnixSystem": "\nThis class implementation retrieves and makes available Unix\n UID/GID/groups information for the current user.\n", "com.sun.security.jgss": "\nThis package defines classes and interfaces for the JDK extensions\n to the GSS-API.\n", "ExtendedGSSContext": "\nThe extended GSSContext interface for supporting additional\n functionalities not defined by org.ietf.jgss.GSSContext,\n such as querying context-specific attributes.\n", "ExtendedGSSCredential": "\nThe extended GSSCredential interface for supporting additional\n functionalities not defined by org.ietf.jgss.GSSCredential.\n", "AuthorizationDataEntry": "\nKerberos 5 AuthorizationData entry.\n", "GSSUtil": "\nGSS-API Utilities for using in conjunction with Sun Microsystem's\n implementation of Java GSS-API.\n", "InquireSecContextPermission": "\nThis class is used to protect various attributes of an established\n GSS security context that can be accessed using the\n ExtendedGSSContext.inquireSecContext(com.sun.security.jgss.InquireType)\n method.\n", "InquireType": "\nAttribute types that can be specified as an argument of\n ExtendedGSSContext.inquireSecContext(com.sun.security.jgss.InquireType)\n", "org.w3c.dom.css": "\nProvides interfaces for DOM Level 2 Style Specification.\n", "org.w3c.dom.html": "\nProvides interfaces for DOM Level 2 HTML Specification.\n", "org.w3c.dom.stylesheets": "\nProvides interfaces for DOM Level 2 Style Specification.\n", "org.w3c.dom.xpath": "\nProvides interfaces for DOM Level 3 XPath Specification.\n", "Counter": "\nThe Counter interface is used to represent any counter or\n counters function value.\n", "CSS2Properties": "\nThe CSS2Properties interface represents a convenience\n mechanism for retrieving and setting properties within a\n CSSStyleDeclaration.\n", "CSSCharsetRule": "\nThe CSSCharsetRule interface represents a @charset rule in a\n CSS style sheet.\n", "CSSFontFaceRule": "\nThe CSSFontFaceRule interface represents a @font-face rule in\n a CSS style sheet.\n", "CSSImportRule": "\nThe CSSImportRule interface represents a @import rule within\n a CSS style sheet.\n", "CSSMediaRule": "\nThe CSSMediaRule interface represents a @media rule in a CSS\n style sheet.\n", "CSSPageRule": "\nThe CSSPageRule interface represents a @page rule within a\n CSS style sheet.\n", "CSSPrimitiveValue": "\nThe CSSPrimitiveValue interface represents a single CSS value\n .\n", "CSSRule": "\nThe CSSRule interface is the abstract base interface for any\n type of CSS statement.\n", "CSSRuleList": "\nThe CSSRuleList interface provides the abstraction of an\n ordered collection of CSS rules.\n", "CSSStyleDeclaration": "\nThe CSSStyleDeclaration interface represents a single CSS\n declaration block.\n", "CSSStyleRule": "\nThe CSSStyleRule interface represents a single rule set in a\n CSS style sheet.\n", "CSSStyleSheet": "\nThe CSSStyleSheet interface is a concrete interface used to\n represent a CSS style sheet i.e., a style sheet whose content type is\n \"text/css\".\n", "CSSUnknownRule": "\nThe CSSUnknownRule interface represents an at-rule not\n supported by this user agent.\n", "CSSValue": "\nThe CSSValue interface represents a simple or a complex\n value.\n", "CSSValueList": "\nThe CSSValueList interface provides the abstraction of an\n ordered collection of CSS values.\n", "DocumentCSS": "\nThis interface represents a document with a CSS view.\n", "DOMImplementationCSS": "\nThis interface allows the DOM user to create a CSSStyleSheet\n outside the context of a document.\n", "ElementCSSInlineStyle": "\nInline style information attached to elements is exposed through the\n style attribute.\n", "Rect": "\nThe Rect interface is used to represent any rect value.\n", "RGBColor": "\nThe RGBColor interface is used to represent any RGB color\n value.\n", "ViewCSS": "\nThis interface represents a CSS view.\n", "HTMLAnchorElement": "\nThe anchor element.\n", "HTMLAppletElement": "\nAn embedded Java applet.\n", "HTMLAreaElement": "\nClient-side image map area definition.\n", "HTMLBaseElement": "\nDocument base URI.\n", "HTMLBaseFontElement": "\nBase font.\n", "HTMLBodyElement": "\nThe HTML document body.\n", "HTMLBRElement": "\nForce a line break.\n", "HTMLButtonElement": "\nPush button.\n", "HTMLCollection": "\nAn HTMLCollection is a list of nodes.\n", "HTMLDirectoryElement": "\nDirectory list.\n", "HTMLDivElement": "\nGeneric block container.\n", "HTMLDListElement": "\nDefinition list.\n", "HTMLDOMImplementation": "\nThe HTMLDOMImplementation interface extends the\n DOMImplementation interface with a method for creating an\n HTML document instance.\n", "HTMLElement": "\nAll HTML element interfaces derive from this class.\n", "HTMLFieldSetElement": "\nOrganizes form controls into logical groups.\n", "HTMLFontElement": "\nLocal change to font.\n", "HTMLFormElement": "\nThe FORM element encompasses behavior similar to a collection\n and an element.\n", "HTMLFrameElement": "\nCreate a frame.\n", "HTMLFrameSetElement": "\nCreate a grid of frames.\n", "HTMLHeadElement": "\nDocument head information.\n", "HTMLHeadingElement": "\nFor the H1 to H6 elements.\n", "HTMLHRElement": "\nCreate a horizontal rule.\n", "HTMLHtmlElement": "\nRoot of an HTML document.\n", "HTMLIFrameElement": "\nInline subwindows.\n", "HTMLImageElement": "\nEmbedded image.\n", "HTMLInputElement": "\nForm control.\n", "HTMLIsIndexElement": "\nThis element is used for single-line text input.\n", "HTMLLabelElement": "\nForm field label text.\n", "HTMLLegendElement": "\nProvides a caption for a FIELDSET grouping.\n", "HTMLLIElement": "\nList item.\n", "HTMLLinkElement": "\nThe LINK element specifies a link to an external resource,\n and defines this document's relationship to that resource (or vice versa).\n", "HTMLMapElement": "\nClient-side image map.\n", "HTMLMenuElement": "\nMenu list.\n", "HTMLMetaElement": "\nThis contains generic meta-information about the document.\n", "HTMLModElement": "\nNotice of modification to part of a document.\n", "HTMLObjectElement": "\nGeneric embedded object.\n", "HTMLOListElement": "\nOrdered list.\n", "HTMLOptGroupElement": "\nGroup options together in logical subdivisions.\n", "HTMLOptionElement": "\nA selectable choice.\n", "HTMLParagraphElement": "\nParagraphs.\n", "HTMLParamElement": "\nParameters fed to the OBJECT element.\n", "HTMLPreElement": "\nPreformatted text.\n", "HTMLQuoteElement": "\nFor the Q and BLOCKQUOTE elements.\n", "HTMLScriptElement": "\nScript statements.\n", "HTMLSelectElement": "\nThe select element allows the selection of an option.\n", "HTMLStyleElement": "\nStyle information.\n", "HTMLTableCaptionElement": "\nTable caption See the  CAPTION element definition in HTML 4.0.\n", "HTMLTableCellElement": "\nThe object used to represent the TH and TD\n elements.\n", "HTMLTableColElement": "\nRegroups the COL and COLGROUP elements.\n", "HTMLTableElement": "\nThe create* and delete* methods on the table allow authors to construct\n and modify tables.\n", "HTMLTableRowElement": "\nA row in a table.\n", "HTMLTableSectionElement": "\nThe THEAD , TFOOT , and TBODY\n elements.\n", "HTMLTextAreaElement": "\nMulti-line text field.\n", "HTMLTitleElement": "\nThe document title.\n", "HTMLUListElement": "\nUnordered list.\n", "DocumentStyle": "\nThe DocumentStyle interface provides a mechanism by which the\n style sheets embedded in a document can be retrieved.\n", "LinkStyle": "\nThe LinkStyle interface provides a mechanism by which a style\n sheet can be retrieved from the node responsible for linking it into a\n document.\n", "MediaList": "\nThe MediaList interface provides the abstraction of an\n ordered collection of media, without defining or constraining how this\n collection is implemented.\n", "StyleSheetList": "\nThe StyleSheetList interface provides the abstraction of an\n ordered collection of style sheets.\n", "XPathEvaluator": "\nThe evaluation of XPath expressions is provided by\n XPathEvaluator.\n", "XPathNamespace": "\nThe XPathNamespace interface is returned by\n XPathResult interfaces to represent the XPath namespace node\n type that DOM lacks.\n", "XPathNSResolver": "\nThe XPathNSResolver interface permit prefix\n strings in the expression to be properly bound to\n namespaceURI strings.\n", "XPathResult": "\nThe XPathResult interface represents the result of the\n evaluation of an XPath 1.0 expression within the context of a particular\n node.\n", "FileSystemProvider()": "protected  \nInitializes a new instance of this class.\n", "checkAccess\u200b(Path\u00a0path,\n           AccessMode...\u00a0modes)": "abstract void \nChecks the existence, and optionally the accessibility, of a file.\n", "copy\u200b(Path\u00a0source,\n    Path\u00a0target,\n    CopyOption...\u00a0options)": "abstract void \nCopy a file to a target file.\n", "createDirectory\u200b(Path\u00a0dir,\n               FileAttribute<?>...\u00a0attrs)": "abstract void \nCreates a new directory.\n", "createLink\u200b(Path\u00a0link,\n          Path\u00a0existing)": "void \nCreates a new link (directory entry) for an existing file.\n", "createSymbolicLink\u200b(Path\u00a0link,\n                  Path\u00a0target,\n                  FileAttribute<?>...\u00a0attrs)": "void \nCreates a symbolic link to a target.\n", "delete\u200b(Path\u00a0path)": "abstract void \nDeletes a file.\n", "deleteIfExists\u200b(Path\u00a0path)": "boolean \nDeletes a file if it exists.\n", "getFileAttributeView\u200b(Path\u00a0path,\n                    Class<V>\u00a0type,\n                    LinkOption...\u00a0options)": "abstract <V extends FileAttributeView>V \nReturns a file attribute view of a given type.\n", "getFileStore\u200b(Path\u00a0path)": "abstract FileStore \nReturns the FileStore representing the file store where a file\n is located.\n", "getFileSystem\u200b(URI\u00a0uri)": "abstract FileSystem \nReturns an existing FileSystem created by this provider.\n", "getPath\u200b(URI\u00a0uri)": "abstract Path \nReturn a Path object by converting the given URI.\n", "getScheme()": "abstract String \nReturns the URI scheme that identifies this provider.\n", "installedProviders()": "static List<FileSystemProvider> \nReturns a list of the installed file system providers.\n", "isHidden\u200b(Path\u00a0path)": "abstract boolean \nTells whether or not a file is considered hidden.\n", "isSameFile\u200b(Path\u00a0path,\n          Path\u00a0path2)": "abstract boolean \nTests if two paths locate the same file.\n", "move\u200b(Path\u00a0source,\n    Path\u00a0target,\n    CopyOption...\u00a0options)": "abstract void \nMove or rename a file to a target file.\n", "newAsynchronousFileChannel\u200b(Path\u00a0path,\n                          Set<? extends OpenOption>\u00a0options,\n                          ExecutorService\u00a0executor,\n                          FileAttribute<?>...\u00a0attrs)": "AsynchronousFileChannel \nOpens or creates a file for reading and/or writing, returning an\n asynchronous file channel to access the file.\n", "newByteChannel\u200b(Path\u00a0path,\n              Set<? extends OpenOption>\u00a0options,\n              FileAttribute<?>...\u00a0attrs)": "abstract SeekableByteChannel \nOpens or creates a file, returning a seekable byte channel to access the\n file.\n", "newDirectoryStream\u200b(Path\u00a0dir,\n                  DirectoryStream.Filter<? super Path>\u00a0filter)": "abstract DirectoryStream<Path> \nOpens a directory, returning a DirectoryStream to iterate over\n the entries in the directory.\n", "newFileChannel\u200b(Path\u00a0path,\n              Set<? extends OpenOption>\u00a0options,\n              FileAttribute<?>...\u00a0attrs)": "FileChannel \nOpens or creates a file for reading and/or writing, returning a file\n channel to access the file.\n", "newFileSystem\u200b(URI\u00a0uri,\n             Map<String,\u200b?>\u00a0env)": "abstract FileSystem \nConstructs a new FileSystem object identified by a URI.\n", "newFileSystem\u200b(Path\u00a0path,\n             Map<String,\u200b?>\u00a0env)": "FileSystem \nConstructs a new FileSystem to access the contents of a file as a\n file system.\n", "newInputStream\u200b(Path\u00a0path,\n              OpenOption...\u00a0options)": "InputStream \nOpens a file, returning an input stream to read from the file.\n", "newOutputStream\u200b(Path\u00a0path,\n               OpenOption...\u00a0options)": "OutputStream \nOpens or creates a file, returning an output stream that may be used to\n write bytes to the file.\n", "readAttributes\u200b(Path\u00a0path,\n              Class<A>\u00a0type,\n              LinkOption...\u00a0options)": "abstract <A extends BasicFileAttributes>A \nReads a file's attributes as a bulk operation.\n", "readAttributes\u200b(Path\u00a0path,\n              String\u00a0attributes,\n              LinkOption...\u00a0options)": "abstract Map<String,\u200bObject> \nReads a set of file attributes as a bulk operation.\n", "readSymbolicLink\u200b(Path\u00a0link)": "Path \nReads the target of a symbolic link.\n", "setAttribute\u200b(Path\u00a0path,\n            String\u00a0attribute,\n            Object\u00a0value,\n            LinkOption...\u00a0options)": "abstract void \nSets the value of a file attribute.\n", " READ ": " Checks that the file exists and that the Java virtual machine has\n     permission to read the file. ", " WRITE ": " Checks that the file exists and that the Java virtual machine has\n     permission to write to the file, ", " EXECUTE ": " Checks that the file exists and that the Java virtual machine has\n     permission to execute the file. The semantics\n     may differ when checking access to a directory. For example, on UNIX\n     systems, checking for EXECUTE access checks that the Java\n     virtual machine has permission to search the directory in order to\n     access file or subdirectories. "}